<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jony`s Blog</title>
  
  <subtitle>拆墙设计师Jony</subtitle>
  <link href="https://blog.jonylee.top/atom.xml" rel="self"/>
  
  <link href="https://blog.jonylee.top/"/>
  <updated>2025-07-12T15:00:00.000Z</updated>
  <id>https://blog.jonylee.top/</id>
  
  <author>
    <name>JonyLee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>免费域名要不要？qzz.io免费域名已经可以托管到Cloudflare了</title>
    <link href="https://blog.jonylee.top/2025/07/12/2025-07-12%20%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E8%A6%81%E4%B8%8D%E8%A6%81%EF%BC%9Fqzz.io%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%B7%B2%E7%BB%8F%E5%8F%AF%E4%BB%A5%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%E4%BA%86/"/>
    <id>https://blog.jonylee.top/2025/07/12/2025-07-12%20%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E8%A6%81%E4%B8%8D%E8%A6%81%EF%BC%9Fqzz.io%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%B7%B2%E7%BB%8F%E5%8F%AF%E4%BB%A5%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%E4%BA%86/</id>
    <published>2025-07-12T14:00:00.000Z</published>
    <updated>2025-07-12T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>玩NAS的大家总少不了手痒想安装一些有用没有的服务。</p><p>而这些服务很多都是通过其他端口提供服务的。要想外网访问就免不了要做内网穿透，目前市面上常见的内网穿透，一般也就只能提供一到两条免费穿透服务，还是有不少局限。</p><p>搞个自己的域名，还是很有必要的。这样加上公网IPV4或者IPV6，就可以使用反向代理，为每个不同的服务都配置一个独立的子域名，可玩性就大大提升了。</p><p>至于域名，其实买个便宜的顶级域名，一年也就几块钱。但是Jony知道，很多小伙伴一分钱都不想花，免费的域名有没有？当然有，前面也写过文章，见：<a href="https://mp.weixin.qq.com/s/w2RiVM0VkWyu-1CBKdQW8w">为了玩NAS，你真的打算申请一个免费域名吗？</a></p><p><a href="https://mp.weixin.qq.com/s/w2RiVM0VkWyu-1CBKdQW8w"><img src="https://qncdn.jonylee.top/wechat/20250712011526734.png" alt="点击图片跳转文章链接.png"></a></p><p>当时测试了好几个免费域名的申请途径，最后给大家推荐了两个，一个是Cloudns的，一个是DigitalPlat的，其中Cloudns网站有中文版，相对比较友好一些，但是会限制IP，很大几率会提示IP滥用申请不了，而DigitalPlat网站没有中文，英语不好的话得靠浏览器翻译，但是申请域名相对容易一些。</p><p>DigitalPlat目前可以无条件免费申请的有 <code>dpdns.org</code> 和 <code>qzz.io</code> 两个二级域名。其中 <code>dpdns.org</code> 开放注册比较早，<code>qzz.io</code> 是新开放的。</p><p>我当时就这两个域名各申请了一个，然后发现 <code>dpdns.org</code> 可以用Cloudflare托管，但是已经被国内运营商列入了反诈名单，基本上没法正常用。</p><p>而 <code>qzz.io</code> 虽然当时已经合并到了PSL，但是Cloudflare一直无法托管。当时托管在Cloudns上，还是没有Cloudflare方便。</p><p>今天登录Cloudflare又试了一下，竟然已经可以托管了。</p><p>赶紧把DNS解析转过来，Cloudflare这个大善人，谁用谁知道。不但可以提供域名解析服务，Tunnels隧道穿透就是速度略慢点，对带宽要求不高的服务也很不错了。</p><p>以下是托管具体操作步骤，至于如何注册Cloudflare，如何注册qzz.io域名就不展开了。</p><ol><li>登录Cloudflare，在账户主页点【添加域】</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250712001449195.png" alt="微信图片_20250712001428.png"></p><ol start="2"><li>在下图红框处输入申请的域名。其他默认即可，点底部蓝色【继续】按钮进入下一步。</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250712001733638.png" alt="微信图片_20250711232628.png"></p><ol start="3"><li>跳到计划选择，也就是付费或者免费方案，当然选免费啦！点【Free】下面的【选择计划】然后下一步。</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250712001916050.png" alt="微信图片_20250711232825.png"></p><ol start="4"><li>这时Cloudflare会搜索你的域名DNS记录，我是之前已经托管在Cloudns上了，所以会搜到几条解析记录，见下图，其中NS记录为托管在Cloudns的DNS解析服务器，这里不用了把它们选中删除。然后点底部【继续前往激活】</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250712002119335.jpg"></p><ol start="5"><li>Cloudflare会告诉你详细的操作说明，这里先不要点【继续】。</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250712002600124.jpg" alt="屏幕截图_11-7-2025_233426_dash.cloudflare-2.jpg"></p><ol start="6"><li>根据上述说明，到申请域名的网站，也就是DigitalPlat网站管理后台去更改DNS服务器，删除原来的，修改为Cloudflare的DNS地址，然后点击底部的蓝色【Update】按钮。</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250712002906880.png" alt="微信图片_20250711233844.png"></p><ol start="7"><li>出现如下界面，DNS已经修改完成，可以回到Cloudflare操作了。</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250712003103065.png" alt="微信图片_20250711234011.png"></p><ol start="8"><li>回到Cloudflare，点击【继续】，会出现如下提示，说最多24小时，实际上很快，基本上刷新几下页面就好了。</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250712003334770.jpg" alt="微信图片_20250711234144 拷贝.jpg"></p><ol start="9"><li>刷新完页面显示如下图，在你的域名后面出现绿色【√活动】图标，就大功告成了，域名已经成功托管到Cloudflare了，接下来就可以开心的玩耍了。</li></ol><p>我这里测试NAS里安装的AI生图应用ComfyUI-BizyAir，在Cloudflare里添加一个CNAME记录，指向到NAS里DDNSGO设置的域名。另外不需要可以取消勾选小黄云图标。</p><p><img src="https://qncdn.jonylee.top/wechat/20250712003447507.png" alt="微信图片_20250712001101.png"></p><ol start="10"><li>在NAS里设置好反向代理，打开浏览器输入网址，应用正常打开了。</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250712004131443.png" alt="微信图片_20250711235703.png"></p><p>到这里，用免费申请的免费域名访问NAS服务就完成了。</p><p>我这里因为当时qzz.io还不能在Cloudflare上托管，所以是先注册的域名，托管到了别处，再迁移到Cloudflare，步骤和直接注册有点不一样。</p><p>现在如果是直接第一次注册的话，可以直接在注册域名的时候，就在Cloudflare里添加你要注册的域名，直接将获得的DNS服务器地址填入。这样更简单一些。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;玩NAS的大家总少不了手痒想安装一些有用没有的服务。&lt;/p&gt;
&lt;p&gt;而这些服务很多都是通过其他端口提供服务的。要想外网访问就免不了要做内网穿透，目前市面上常见的内网穿透，一般也就只能提供一到两条免费穿透服务，还是有不少局限。&lt;/p&gt;
&lt;p&gt;搞个自己的域名，还是很有必要的。这</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="网络知识" scheme="https://blog.jonylee.top/tags/%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"/>
    
    <category term="Web技术" scheme="https://blog.jonylee.top/tags/Web%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>系统内存占用仅1.3G！Tiny10精简系统——低性能设备拯救者！</title>
    <link href="https://blog.jonylee.top/2025/06/28/2025-06-28%20%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E4%BB%851.3G%EF%BC%81Tiny10%E7%B2%BE%E7%AE%80%E7%B3%BB%E7%BB%9F%E2%80%94%E2%80%94%E4%BD%8E%E6%80%A7%E8%83%BD%E8%AE%BE%E5%A4%87%E6%8B%AF%E6%95%91%E8%80%85%EF%BC%81/"/>
    <id>https://blog.jonylee.top/2025/06/28/2025-06-28%20%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E4%BB%851.3G%EF%BC%81Tiny10%E7%B2%BE%E7%AE%80%E7%B3%BB%E7%BB%9F%E2%80%94%E2%80%94%E4%BD%8E%E6%80%A7%E8%83%BD%E8%AE%BE%E5%A4%87%E6%8B%AF%E6%95%91%E8%80%85%EF%BC%81/</id>
    <published>2025-06-28T14:00:00.000Z</published>
    <updated>2025-06-28T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>抛开NAS发烧友不谈，我们大家一般玩玩NAS，硬件配置其实不需要太高，否则性能过剩浪费Money。</p><p>但是如果有需求想在NAS上虚拟机安装个Win系统，那么就有点尴尬了。</p><p>目前能流畅跑飞牛NAS系统的x86设备（例如J4125+8G内存），安装生命周期接近尾声的常规版本Win10系统，运行都不太流畅。</p><p>那么有没有可以在性能较低的NAS上流畅运行的Win系统呢？</p><p>答案是<strong>Tiny系列精简Win系统</strong>。</p><p>Tiny精简系统是由国外开发者NTDEV基于微软官方Windows系统制作的<strong>极限精简版操作系统</strong>，主要包括Tiny10和Tiny11两大系列。通过移除大量非必要组件，大幅降低系统资源占用，让老旧或低配置设备也能流畅运行现代Windows系统。</p><h2 id="Tiny系统的核心特点"><a href="#Tiny系统的核心特点" class="headerlink" title="Tiny系统的核心特点"></a>Tiny系统的核心特点</h2><ol><li><strong>极致轻量化</strong><ul><li><strong>体积缩小</strong>：Tiny10安装后C盘占用仅4-8GB（原版约20GB+），Tiny11占用约8GB（原版20GB+）。</li><li><strong>内存需求降低</strong>：Tiny11只需2GB内存即可运行（原版Win11要求4GB），开机内存占用约1.3-1.7GB。</li><li><strong>组件精简</strong>：移除大量非核心服务（如Cortana、预装应用）、Windows Defender（部分版本保留基础防护）、Edge浏览器（可手动安装）等。</li></ul></li><li><strong>绕过硬件限制</strong><ul><li>无需TPM 2.0或Secure Boot即可安装Tiny11，兼容老旧电脑。</li><li>支持ARM架构设备（如树莓派、苹果M1&#x2F;M2芯片）。</li></ul></li><li><strong>保留必要功能</strong><br>基础工具（计算器、画图、记事本）、远程桌面、微软应用商店（部分版本）等得以保留，用户可通过商店补充所需应用。</li></ol><h2 id="Tiny系统安装实践"><a href="#Tiny系统安装实践" class="headerlink" title="Tiny系统安装实践"></a>Tiny系统安装实践</h2><p>Jony手里有一款安装了飞牛的N100小主机，用来作为主力NAS使用的，之前也使用过PVE系统做ALL IN ONE 安装了Ubuntu和飞牛以及LibreELEC。</p><p>这款12代Intel低功耗处理器TDP只有6W，主频0.8-3.4GHz，作为PC使用的话性能不高，但是作为NAS使用的话，那简直就是新一代神U了。</p><p>今天就尝试在飞牛里用虚拟机安装Tiny10和Tiny11系统，体验一下这个NAS神U的上限，哈哈。</p><h3 id="下载Tiny系统"><a href="#下载Tiny系统" class="headerlink" title="下载Tiny系统"></a>下载Tiny系统</h3><p>首先需要下载Tiny系统，原版国外NTDEV大神的下载链接在国内可能打开较慢。因为大神制作工具已经开源，所以国内也有些自己制作的镜像系统，版本更高一些。</p><p>下载好之后放到飞牛存储空间里，我是专门建了一个ISO文件夹，专门放虚拟机的安装文件。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628120706190.png" alt="QQ_1751083548745.png"></p><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><p>打开飞牛虚拟机程序，创建Win系统虚拟机，以安装Tiny10（Win10精简版）为例。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628120830158.png" alt="QQ_1751075087669.png"></p><p>系统镜像选择刚下载的Tiny10系统镜像ISO文件，另外飞牛安装Win系统需要额外安装Virtio虚拟驱动，Linux系统一般自带的，Win系统需要安装一下，否则进入装系统时可能识别不到创建的虚拟磁盘。这里直接点击驱动镜像下面的小字【点击此处】蓝色连接，下载好的驱动也是一个ISO文件，放到前面创建的系统镜像文件夹里，并点这里【驱动镜像】后面的小文件夹图标加载。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628120918605.png" alt="QQ_1751075258777.png"></p><p>其他参数按上图选择即可。点下一步添加网卡，如果已经创建过虚拟机，已经开启了网卡OVS，直接选网卡即可，如果没有开启的话，会有提示去开启一下网卡OVS。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628121332238.png" alt="QQ_1751075359935.png"></p><p>创建完成后，点击虚拟机后面的开机图标开机，再点显示器图标打开VNC桌面，即可看到安装界面。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628121452726.png" alt="QQ_1751075441291.png"></p><h3 id="安装Tiny10系统"><a href="#安装Tiny10系统" class="headerlink" title="安装Tiny10系统"></a>安装Tiny10系统</h3><p>开机后会和正常装系统流程一样，记得需要尽快按照提示手动按任意键加载ISO，否则它不会自动加载。进入安装界面后，首先选择语言，因为镜像是国外制作，这里只有英文。第二项时间格式可以选择中文，但是这一步也可以先不用选，待系统安装完成之后再安装中文语言包再设置。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628121820320.png" alt="QQ_1751075646042.png"></p><p>选择安装盘，这里如果没有安装上面提到的Virtio驱动，可能看不到磁盘，我这里安装Tiny10不知道怎么可以直接看到，之前安装Tiny11是看不到的。</p><p>即使看到也建议先安装一下Virtio驱动，点下图红色部分【Load driver】。<br><img src="https://qncdn.jonylee.top/wechat/20250628122021848.png" alt="QQ_1751075737951.png"></p><p>因为前面创建虚拟机时已经加载了驱动ISO，它会自动搜索支持的驱动，选择对应版本的驱动，这里安装Tiny10所以选择下图倒数第二个（w10），如果是Tiny11记得选最后一个（w11），然后Next下一步。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628122235987.png" alt="QQ_1751075831285.png"></p><p>装好驱动之后再选择创建的虚拟磁盘文件，点next下一步继续。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628122438458.png" alt="QQ_1751075901367.png"></p><p>正式进入Win10安装流程。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628122525466.png" alt="QQ_1751075924196.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250628122547579.png" alt="QQ_1751076997744.png"></p><p>后续一些语言选项，网络连接等，大家可以自行选择。都是英文界面，不过不用怕，即使不认识，随便点也没关系。都是一些基础设置，后面安装完改中文之后也都可以设置。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628122720159.png" alt="QQ_1751077524943.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250628122726909.png" alt="QQ_1751077611036.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250628122836241.png" alt="QQ_1751077710258.png"></p><p>等待安装设置完成，进入桌面，系统就安装好了。但是你可能会发现没有网络连接，这是因为虚拟网卡没有被识别。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628122927941.png" alt="QQ_1751078006263.png"></p><h3 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h3><p>需要在Win系统里安装Virtio虚拟驱动，打开我的电脑，找到自动加载的虚拟光驱打开。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628123139224.png" alt="QQ_1751078073213.png"></p><p>选择 <code>virtio-win-gt-x64</code>，双击安装，安装完成之后网卡驱动就有了，应该就会自动联网了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628123218434.png" alt="QQ_1751078111896.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250628123422782.png" alt="QQ_1751078201815.png"></p><h3 id="Tiny安装中文界面"><a href="#Tiny安装中文界面" class="headerlink" title="Tiny安装中文界面"></a>Tiny安装中文界面</h3><p>系统是装好了，但是原版系统只有英文，其他语言也被作者精简掉了，需要自己安装。进入设置里，选择Language，点右侧【Add a Language】。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628123441335.png" alt="QQ_1751078336136.png"></p><p>在弹出窗口里选择中文（中华人民共和国），点击安装。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628123604135.png" alt="QQ_1751078368499.png"></p><p>记得下面勾选一下 <code>Set as my Windows display language</code>设置为系统默认显示语言。然后点底部Install安装。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628123651027.png" alt="QQ_1751078408748.png"></p><p>接下来的弹出通知里选下图红色按钮，确认退出登录，以便更改语言生效。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628123844076.png" alt="QQ_1751078579576.png"></p><p>再次进入系统，语言已经改成中文啦，大功告成！</p><p><img src="https://qncdn.jonylee.top/wechat/20250628124122800.png" alt="QQ_1751079152052.png"></p><h3 id="系统性能占用"><a href="#系统性能占用" class="headerlink" title="系统性能占用"></a>系统性能占用</h3><p>实测Tiny10安装后占用系统磁盘空间10.7GB，内存占用1.3GB，CPU利用率1%-2%左右。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628124148602.png" alt="QQ_1751079221052.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250628124247385.png" alt="QQ_1751079346311.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250628124346772.png" alt="QQ_1751079751746.png"></p><p>而我安装的Tiny11，不知道是版本下载的不对还是什么情况，安装后的资源占用如下：系统占用达到20.6GB，内存倒是用的也不多只有2.3GB，CPU使用率8%。</p><p><img src="https://qncdn.jonylee.top/wechat/20250628124448867.png" alt="QQ_1751083491067.png"></p><h3 id="实际使用感受"><a href="#实际使用感受" class="headerlink" title="实际使用感受"></a>实际使用感受</h3><p>实际感受，我使用Windows系统自带的远程桌面连接，在PC电脑（4K屏）上连接这两个虚拟机系统，Tiny10系统运行非常流畅丝滑，Tiny11就有点一眼难尽了，操作不太流畅非常卡，不知道是N100带Win11本就拉不动，还是飞牛的虚拟机效率比较低。</p><p>所以建议如果系统配置不高的话，安装Tiny10就好，Win10系统功能全面，也是微软最好用的系统之一了，基本上也都能满足使用需求。</p><p>另外，该精简系统只是对原版系统不常用的功能进行精简，并不是破解版，所以还需要自行激活，这个想必大家办法也都很多。</p><h3 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h3><h4 id="NTDEV构建版本国外下载地址："><a href="#NTDEV构建版本国外下载地址：" class="headerlink" title="NTDEV构建版本国外下载地址："></a>NTDEV构建版本国外下载地址：</h4><ul><li>Tiny11-23H2-x64原版国外下载地址：<a href="https://archive.org/details/tiny-11-NTDEV/">https://archive.org/details/tiny-11-NTDEV/</a></li><li>Tiny10-23H2-x64原版国外下载地址：<a href="https://archive.org/details/tiny-10-23-h2">https://archive.org/details/tiny-10-23-h2</a></li><li>Windows7-Lite-原版国外下载地址：<a href="https://archive.org/details/windows-7-lite_202403">https://archive.org/details/windows-7-lite_202403</a></li></ul><blockquote><p>该网站也有其他版本下载，另外也有一些其他的版本，但是国外网站可能打开比较慢，大家能打开的话可以自行下载。</p></blockquote><h4 id="自行构建"><a href="#自行构建" class="headerlink" title="自行构建"></a>自行构建</h4><p>Tiny精简工具NTDEV已经开源，地址：<a href="https://github.com/ntdevlabs/tiny11builder">https://github.com/ntdevlabs/tiny11builder</a>。</p><p>如果对网上的版本不放心，可以下载构建工具，并自行从微软官网下载原版Win11系统进行精简构建。</p><p>Tiny精简版系统资源国内下载，网上也很容易搜索到，大家可以自行搜索选择安全的来源及版本下载，懒的搜的朋友，Jony网盘里也会放一份我自己测试安装的这两版，公众号回复 <code>Tiny</code> 即可获得自动下载链接。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;抛开NAS发烧友不谈，我们大家一般玩玩NAS，硬件配置其实不需要太高，否则性能过剩浪费Money。&lt;/p&gt;
&lt;p&gt;但是如果有需求想在NAS上虚拟机安装个Win系统，那么就有点尴尬了。&lt;/p&gt;
&lt;p&gt;目前能流畅跑飞牛NAS系统的x86设备（例如J4125+8G内存），安装生命</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="PC软件" scheme="https://blog.jonylee.top/tags/PC%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="N100" scheme="https://blog.jonylee.top/tags/N100/"/>
    
    <category term="x86" scheme="https://blog.jonylee.top/tags/x86/"/>
    
  </entry>
  
  <entry>
    <title>神奇的安卓播放器！聚合全网资源一站式观看</title>
    <link href="https://blog.jonylee.top/2025/06/22/2025-06-22%20%E7%A5%9E%E5%A5%87%E7%9A%84%E5%AE%89%E5%8D%93%E6%92%AD%E6%94%BE%E5%99%A8%EF%BC%81%E8%81%9A%E5%90%88%E5%85%A8%E7%BD%91%E8%B5%84%E6%BA%90%E4%B8%80%E7%AB%99%E5%BC%8F%E8%A7%82%E7%9C%8B/"/>
    <id>https://blog.jonylee.top/2025/06/22/2025-06-22%20%E7%A5%9E%E5%A5%87%E7%9A%84%E5%AE%89%E5%8D%93%E6%92%AD%E6%94%BE%E5%99%A8%EF%BC%81%E8%81%9A%E5%90%88%E5%85%A8%E7%BD%91%E8%B5%84%E6%BA%90%E4%B8%80%E7%AB%99%E5%BC%8F%E8%A7%82%E7%9C%8B/</id>
    <published>2025-06-22T14:00:00.000Z</published>
    <updated>2025-06-22T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>周末了，放松时间到！</p><p>今天Jony给大家推荐一个神奇的安卓电视和手机端的播放器。这是一个开源免费的影视聚合工具，可以用它一站式观看影视剧集和电视直播，而且资源相当丰富。</p><p>它叫 <strong>【Tvbox】</strong></p><p>这是一款开源的<strong>多媒体聚合应用</strong>，主要用于整合和播放各类视频资源（如影视剧、直播、网盘内容等）。它本身不提供资源，而是通过用户自定义的“数据源接口”来获取内容，类似于一个“播放器外壳”，依赖外部配置实现资源聚合。</p><h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><p><strong>多源聚合</strong>  </p><ul><li>支持添加本地、网络或第三方数据源（如JSON&#x2F;TXT格式的接口），自动抓取资源。</li><li>可整合影视网站、网盘、直播源等渠道的内容，实现一站式观看。</li></ul><p><strong>多格式支持</strong>  </p><ul><li><p>播放本地或在线视频，兼容多种格式（如MP4、MKV、M3U8等）。</p></li><li><p>支持直播流媒体（IPTV）和点播内容。</p></li></ul><ol start="3"><li><p><strong>高度自定义</strong>  </p><ul><li>界面、分类、解析规则等均可通过配置文件调整。</li><li>可安装插件扩展功能（如弹幕、字幕、倍速播放等）。</li></ul></li><li><p><strong>跨平台</strong>  </p><ul><li>主要运行于<strong>安卓设备</strong>（手机、电视、盒子），也有第三方修改版支持Windows等平台。</li></ul></li></ol><hr><h3 id="功能界面"><a href="#功能界面" class="headerlink" title="功能界面"></a>功能界面</h3><p>首页界面，显示资源列表及播放历史。</p><p><img src="https://qncdn.jonylee.top/wechat/20250622100702979.png" alt="01.png"></p><p>可以通过设置自定义首页显示哪个数据源的内容。</p><p><img src="https://qncdn.jonylee.top/wechat/20250408222241507.jpg" alt="01-2.jpg"></p><p>搜索想要看的影片或节目。</p><p><img src="https://qncdn.jonylee.top/wechat/20250622100735952.png" alt="02.png"></p><p>选择合适的资源，进入资源介绍页面，点击小窗口即可播放。</p><p><img src="https://qncdn.jonylee.top/wechat/20250622100751929.png" alt="03.png"></p><p>资源播放界面。</p><p><img src="https://qncdn.jonylee.top/wechat/20250408214233662.png" alt="04.png"></p><p>软件安装后第一步先配置资源接口，点击首页小齿轮图标，进入设置界面，点击配置地址的输入框。如果只需要看影视，也可以只填第一个。</p><p>至于资源接口，请大家网上自行搜索<code>TVbox接口</code>，会有很多资源，这里就不详述了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250408214242615.png" alt="05.png"></p><p>在弹出的界面里，填入相应的接口，由上到下依次是影视源、直播源、直播节目单的接口地址。</p><p>由于软件本身是为安卓电视设计的，为方便输入使用，可以通过扫码或局域网网址在手机或电脑上配置接口。手机上安装使用直接填写就行了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250408214248670.png" alt="06.png"></p><p>除了在线接口资源以外，Tvbox还支持打开本地资源目录，或者通过Webdav访问NAS上或者支持webdav协议的网盘上的影视库，以及播放通过网盘聚合工具Alist挂载的其他资源。</p><p><img src="https://qncdn.jonylee.top/wechat/20250408214253651.jpg" alt="07.jpg"></p><p>软件的使用其实是比较简单的，主要是需要查找和配置合适的资源接口，方法上面也说了，而这些资源接口，网上也是很容易搜到的。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>原项目是开源免费的，网上的接口资源也都是免费的，不要花钱去购买。</li><li>网上有很多基于原项目修改打包的版本，功能界面差不多但名称五花八门，大家谨慎下载，确保来源安全可靠，不要下载安装来源不明的版本，以避免安全风险。</li></ul><h3 id="资源地址"><a href="#资源地址" class="headerlink" title="资源地址"></a>资源地址</h3><p>关注公众号【拆墙设计师Jony】，回复 <code>TVBox</code> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;周末了，放松时间到！&lt;/p&gt;
&lt;p&gt;今天Jony给大家推荐一个神奇的安卓电视和手机端的播放器。这是一个开源免费的影视聚合工具，可以用它一站式观看影视剧集和电视直播，而且资源相当丰富。&lt;/p&gt;
&lt;p&gt;它叫 &lt;strong&gt;【Tvbox】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是一</summary>
      
    
    
    
    <category term="影音娱乐" scheme="https://blog.jonylee.top/categories/%E5%BD%B1%E9%9F%B3%E5%A8%B1%E4%B9%90/"/>
    
    
    <category term="影音娱乐" scheme="https://blog.jonylee.top/tags/%E5%BD%B1%E9%9F%B3%E5%A8%B1%E4%B9%90/"/>
    
    <category term="安卓播放器" scheme="https://blog.jonylee.top/tags/%E5%AE%89%E5%8D%93%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Docker目录乾坤大挪移，拯救你的NAS系统存储空间！</title>
    <link href="https://blog.jonylee.top/2025/06/15/2025-06-15%20Docker%E7%9B%AE%E5%BD%95%E4%B9%BE%E5%9D%A4%E5%A4%A7%E6%8C%AA%E7%A7%BB%EF%BC%8C%E6%8B%AF%E6%95%91%E4%BD%A0%E7%9A%84NAS%E7%B3%BB%E7%BB%9F%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%EF%BC%81/"/>
    <id>https://blog.jonylee.top/2025/06/15/2025-06-15%20Docker%E7%9B%AE%E5%BD%95%E4%B9%BE%E5%9D%A4%E5%A4%A7%E6%8C%AA%E7%A7%BB%EF%BC%8C%E6%8B%AF%E6%95%91%E4%BD%A0%E7%9A%84NAS%E7%B3%BB%E7%BB%9F%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%EF%BC%81/</id>
    <published>2025-06-15T14:00:00.000Z</published>
    <updated>2025-06-15T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前给大家推荐过玩客云的Armbian刷机固件，大家在使用玩客云这类盒子设备的时候，通常都会遇到一个问题。</p><p>就是这类设备一般都是板载内存和emmc存储，而板载存储都不会太大，一般都是标称8GB实际7GB多，装完Armbian系统之后，剩余的存储空间只有6GB多了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250615172348072.png" alt="微信图片_20250615171746.png"></p><p>然后我们还想要玩Docker，下载docker镜像创建容器，有些docker镜像本身都比较大，不少都超过1GB了，而Docker默认是存储在系统目录<code>/var/lib/docker</code>下的，这样装不了几个镜像系统空间就满了。</p><p>所以针对这类盒子设备内置存储不足的问题，将Docker迁移至外接USB存储设备（U盘&#x2F;移动硬盘）是高效扩容的核心方案。这样就可以将内置存储空出来，专门用于后续安装系统运行必要的程序。</p><p>那么具体如何操作呢？这里分两种情况，一种是没安装过Docker，另一种是已经安装过Docker并且有容器正在运行了。</p><p>以下分<strong>全新安装Docker</strong>和<strong>迁移已有Docker环境</strong>两种情况详细说明操作步骤：</p><h3 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h3><p>首先需要连接并挂载外置存储，将U盘或移动硬盘设备插入玩客云USB，使用 <code>lsblk</code> 确认设备标识（如 <code>/dev/sda1</code>）。  </p><p>格式化并挂载（以ext4为例）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mkfs.ext4 /dev/sda1             <span class="comment"># 格式化</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /mnt/udisk             <span class="comment"># 创建挂载点</span></span><br><span class="line"><span class="built_in">sudo</span> mount /dev/sda1 /mnt/udisk      <span class="comment"># 临时挂载</span></span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">然后需要配置永久挂载，否则设备重启之后该设备不会自动挂载。 </span><br><span class="line">- 获取UUID：`<span class="built_in">sudo</span> blkid /dev/sda1`，复制UUID。  </span><br><span class="line">- 编辑 `/etc/fstab`，添加以下信息：  </span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">UUID=你的UUID /mnt/udisk ext4 defaults 0 0</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">编辑`fstab`文件可以使用命令行文本编辑工具`nano`。</span><br><span class="line"></span><br><span class="line">具体挂载方法也可参见之前的文章：[PVE找不到外接硬盘？你还没有挂载吧](https://mp.weixin.qq.com/s/NYuDDmvZ5HYfodyb-oH3hA)</span><br><span class="line"></span><br><span class="line">[![PVE找不到外接硬盘？你还没有挂载吧](https://img.jonylee.top/i/2025/05/29/cover20250424mount.png)](https://mp.weixin.qq.com/s/NYuDDmvZ5HYfodyb-oH3hA)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 二、未安装Docker：全新安装至外置存储</span></span><br><span class="line"><span class="comment">#### 🐳 Docker安装与路径配置</span></span><br><span class="line">1. **修改Docker默认存储路径**：  </span><br><span class="line">创建软链接（若外置存储挂载在`/mnt/udisk`）：  </span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /mnt/udisk/docker</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /mnt/udisk/docker /var/lib/docker  <span class="comment"># 软链接至外置存储</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>安装Docker</strong>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install docker.io docker-compose</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>验证安装</strong>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker info | grep <span class="string">&quot;Root Dir&quot;</span>  <span class="comment"># 检查存储路径是否为外置位置</span></span><br></pre></td></tr></table></figure><p><img src="https://qncdn.jonylee.top/wechat/20250615181426993.png" alt="微信图片_20250615181359.png"></p><hr><h3 id="三、已安装Docker：迁移至外置存储"><a href="#三、已安装Docker：迁移至外置存储" class="headerlink" title="三、已安装Docker：迁移至外置存储"></a>三、已安装Docker：迁移至外置存储</h3><h4 id="⚠️-迁移步骤（无损数据）"><a href="#⚠️-迁移步骤（无损数据）" class="headerlink" title="⚠️ 迁移步骤（无损数据）"></a>⚠️ 迁移步骤（无损数据）</h4><ol><li><strong>停止Docker服务</strong>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl stop docker</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">2. **复制数据到外置存储**： </span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"><span class="built_in">sudo</span> rsync -avxP /var/lib/docker/ /mnt/udisk/docker/  <span class="comment"># 保留权限复制</span></span><br><span class="line">```  </span><br><span class="line"> </span><br><span class="line">   *注：若原目录过大，可先清理无效的镜像和数据卷等，具体操作见下文。*  </span><br><span class="line"></span><br><span class="line">3. **备份原目录并创建软链接**：  </span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> /var/lib/docker /var/lib/docker.bak  <span class="comment"># 备份</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /mnt/udisk/docker /var/lib/docker  <span class="comment"># 创建软链接</span></span><br><span class="line">```  </span><br><span class="line"> </span><br><span class="line">4. **重启服务并验证**：  </span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line"><span class="built_in">sudo</span> systemctl start docker</span><br><span class="line">docker info | grep <span class="string">&quot;Root Dir&quot;</span>  <span class="comment"># 确认路径已变更</span></span><br></pre></td></tr></table></figure><ol start="5"><li>确认Docker路径已经变更成功服务正常运行，可以手动删除<code>/var/lib/docker.bak</code> 备份文件夹。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 仅删除原始数据（保留符号链接本身）</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> -rf /var/lib/docker.bak  <span class="comment"># 删除备份目录（确认服务正常运行后）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重要：绝对不可删除符号链接！</span></span><br><span class="line"><span class="comment"># ❌ 错误操作： sudo rm -rf /var/lib/docker （这会删除真实数据！）</span></span><br></pre></td></tr></table></figure><hr><h3 id="💡-注意事项"><a href="#💡-注意事项" class="headerlink" title="💡 注意事项"></a>💡 注意事项</h3><ol><li><p><strong>路径权限问题</strong>：<br>需要确保外置存储的挂载目录权限为<code>755</code>，所属用户&#x2F;组为<code>root:root</code>（Docker默认要求）。 </p></li><li><p><strong>迁移前清理Docker</strong>：<br>可以使用命令：<code>docker system prune -a --volumes -f</code>清理未使用的Docker镜像和无用的数据，<br>其中的参数说明：</p></li></ol><ul><li><code>-a</code>：删除所有未使用的镜像</li><li><code>--volumes</code>：包含未使用的数据卷</li><li><code>-f</code>：强制删除，跳过确认提示</li></ul><p>该命令作用范围包括：所有停止的容器、未被任何容器引用的镜像、未使用的数据卷、闲置网络、构建缓存。</p><blockquote><p>⚠️ <strong>注意</strong>：此命令会彻底删除未关联的资源，操作前建议确认无重要数据残留。</p></blockquote><p>如果你有安装1panel面板，可以直接在面板的<code>容器</code>管理里可视化清理，界面见下图，其中容器、镜像、网络、存储卷页面都有清理选项，可以确认是否有用，再有选择的清理，这样更直观和稳妥。</p><p><img src="https://qncdn.jonylee.top/wechat/20250615184020403.png" alt="微信图片_20250615184001.png"></p><p>好了，通过以上操作，基本上可以将Docker这个系统存储占用大头给解放出来了，操作完成之后可以再使用命令<code>df -hT</code>看下你的内置系统存储，是不是空出来不少了？</p><p><img src="https://qncdn.jonylee.top/wechat/20250615190323315.png" alt="微信图片_20250615190224.png"></p><p>看我这Docker使用了8.2GB，如果放系统存储里，光Docker都放不下，哈哈。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前给大家推荐过玩客云的Armbian刷机固件，大家在使用玩客云这类盒子设备的时候，通常都会遇到一个问题。&lt;/p&gt;
&lt;p&gt;就是这类设备一般都是板载内存和emmc存储，而板载存储都不会太大，一般都是标称8GB实际7GB多，装完Armbian系统之后，剩余的存储空间只有6GB多</summary>
      
    
    
    
    <category term="效率工具" scheme="https://blog.jonylee.top/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="效率工具" scheme="https://blog.jonylee.top/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>颜值在线功能比Alist更强大！飞牛部署体验腾飞Webos</title>
    <link href="https://blog.jonylee.top/2025/06/13/2025-06-13%20%E9%A2%9C%E5%80%BC%E5%9C%A8%E7%BA%BF%E5%8A%9F%E8%83%BD%E6%AF%94Alist%E6%9B%B4%E5%BC%BA%E5%A4%A7%EF%BC%81%E9%A3%9E%E7%89%9B%E9%83%A8%E7%BD%B2%E4%BD%93%E9%AA%8C%E8%85%BE%E9%A3%9EWebos/"/>
    <id>https://blog.jonylee.top/2025/06/13/2025-06-13%20%E9%A2%9C%E5%80%BC%E5%9C%A8%E7%BA%BF%E5%8A%9F%E8%83%BD%E6%AF%94Alist%E6%9B%B4%E5%BC%BA%E5%A4%A7%EF%BC%81%E9%A3%9E%E7%89%9B%E9%83%A8%E7%BD%B2%E4%BD%93%E9%AA%8C%E8%85%BE%E9%A3%9EWebos/</id>
    <published>2025-06-13T14:00:00.000Z</published>
    <updated>2025-06-13T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Alist被收购已经板上钉钉，大家的无力感并不是因为开源应用被收购，而是这家收购公司过往的黑历史和骚操作，让人难以对其产生任何信任。</p><p>虽然有原贡献者Fork项目另起炉灶，但是能不能混乱之中力挽狂澜，再将开发者聚集起来，也很难说。</p><p>Alist作为一个网盘聚合列表程序，程序轻量，配置简洁，功能丰富，玩法多样。衍生应用都有不少，一时间还真的难以找到完美的替代者。</p><p>很多类似的应用，大部分只能挂载到本地使用，不支持web端，如Rclone，Netmount等，这样就失去了web应用的便利性。</p><p>Alist的核心功能是聚合网络存储，实现统一管理，web访问和本地挂载，最终还是便于我们随时随地方便的访问和使用网盘内容。</p><p>今天我们不妨换个思路，目前可以聚合网络存储并实现web访问和本地挂载的方案，还有不少Web桌面应用。比如著名的 <strong>可道云KODBOX</strong>，我也有在用。但是可道云支持的网络存储主要是对象存储，目前对网盘支持比较弱，仅支持百度网盘。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613112528727.png" alt="QQ_1749785063969.png"></p><h2 id="腾飞Webos是什么？"><a href="#腾飞Webos是什么？" class="headerlink" title="腾飞Webos是什么？"></a>腾飞Webos是什么？</h2><p>今天Jony向大家推荐的是另外一款开源Web桌面应用，<strong>【腾飞Webos】</strong></p><p>它的功能也是相当丰富，支持Win、Linux、MAC等桌面系统以及群晖、飞牛等NAS系统、可在x64、x86、Arm64位，Arm32位及苹果芯片设备上部署，安装方式也有Docker、二进制等各种方式，支持上可以说是相当灵活全面。</p><p>并且还支持PC客户端，移动客户端及小程序。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613113026551.jpg" alt="屏幕截图_13-6-2025_112832_webos.im.jpg"></p><p>当然它就不仅仅是个网盘列表程序了，而是可以直接用它在线编辑网盘中的各类文档、实时协作分享、流程图、绘图、音频、视频、文档、看板、表格、资源库等多种创意工作和内容，相当于轻量云电脑了。Webos基本上能满足大部分在线办公，文件分享，私有存储等需求！</p><p>支持挂载的网盘也丝毫不逊Alist，几乎支持国内所有主流网盘了，甚至它还支持挂载Alist，可道云等。</p><p><strong>Webos支持挂载的网盘列表：</strong></p><table><thead><tr><th>推荐指数</th><th>挂载网盘</th><th>描述</th></tr></thead><tbody><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>阿里云盘</td><td>扫码&#x2F;验证码&#x2F;账号登录,直连上传,直连下载 支持秒存</td></tr><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>天翼云盘</td><td>扫码登录,直连上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>百度云盘</td><td>扫码&#x2F;验证码&#x2F;账号登录,无缓存中转上传,直连下载 （<strong>无需会员 支持不限速下载</strong> ）</td></tr><tr><td>⭐️⭐️⭐️</td><td>夸克网盘</td><td>扫码登录,直连上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>123云盘</td><td>账号登录,直连上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>本地磁盘</td><td>双模式:秒传模式&#x2F;常规模式</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>OneDrive</td><td>扫码,验证码,账号登录,无缓存中转上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>Cloudreve</td><td>扫码,验证码,账号登录,无缓存中转上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>一刻相册</td><td>支持上传任意格式文件，直连上传下载，（非会员默认30mb）</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>WebDav</td><td>对系统中进行挂载,可以挂载到本地磁盘</td></tr><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>Alist</td><td>支持挂载本地,无账号挂载（输入网址即可无需账号密码）</td></tr><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>可道云</td><td>账号登录,无缓存中转上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>七牛云</td><td>账号登录,直连上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>小龙云</td><td>账号登录,直连上传,直连下载（已修复）</td></tr><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>115网盘</td><td>扫码&#x2F;验证码&#x2F;账号登录,直连上传,直连下载 支持秒存</td></tr><tr><td>⭐️⭐️⭐️</td><td>迅雷网盘</td><td>扫码&#x2F;验证码&#x2F;账号登录,直连上传,直连下载 支持秒存</td></tr><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>阿里OSS</td><td>扫码&#x2F;验证码&#x2F;账号登录,直连上传,直连下载 支持秒存</td></tr><tr><td>⭐️⭐️⭐️⭐️⭐️</td><td>腾讯cos</td><td>扫码&#x2F;验证码&#x2F;账号登录,直连上传,直连下载 支持秒存</td></tr><tr><td>⭐️⭐️⭐️</td><td>Amazon S3</td><td>中转上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>FTP</td><td>已支持,取决于服务器</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>SMB</td><td>已支持,取决于服务器</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>移动云盘</td><td>账号登录,中转上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️</td><td>曲奇网盘</td><td>待增加……</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>PIKPAK</td><td>账号登录,中转上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>谷歌云盘</td><td>账号登录,中转上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️</td><td>腾讯微云</td><td>账号登录,中转上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>蓝奏云</td><td>账号登录,中转上传,直连下载</td></tr><tr><td>⭐️⭐️⭐️⭐️</td><td>又拍云</td><td>账号登录,直连上传,直连下载</td></tr></tbody></table><p>这不比Alist功能更强大！另外其界面为Win11风格，颜值也相当在线。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613114840586.png" alt="QQ_1749781868980.png"></p><h2 id="飞牛部署Webos"><a href="#飞牛部署Webos" class="headerlink" title="飞牛部署Webos"></a>飞牛部署Webos</h2><p>Webos的官方文档也相当详尽，本次Jony就参照官方文档，用飞牛部署一下webos，带大家体验一番。</p><h3 id="创建挂载目录"><a href="#创建挂载目录" class="headerlink" title="创建挂载目录"></a>创建挂载目录</h3><p>本次Webos飞牛部署，是采用Docker部署的方式，需要先在飞牛存储空间创建一个挂载目录，用于存储持久化数据。</p><p>我之前是在存储空间建了一个Docker文件夹，专门用于Docker挂载存储持久化，本次就在该文件夹中新建webos文件夹。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613115227017.png" alt="QQ_1749776982519.png"></p><h3 id="Docker部署Webos"><a href="#Docker部署Webos" class="headerlink" title="Docker部署Webos"></a>Docker部署Webos</h3><p>由于需要用到数据库和Redis缓存，按照官方文档推荐的方法，采用Docker Compose的方式安装比较方便。</p><p>打开飞牛Docker应用，点左侧<code>Compose</code>选项，点右侧<code>新建项目</code>，在弹出的窗口中，填入项目名称，可以根据需要自己填，我填的webos，选择路径，就是刚才上一步新建的文件夹。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613115715307.png" alt="QQ_1749777651736.png"></p><p>选择<code>创建docker-compose.yml</code>，拷贝以下内容填入：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">webos-mysql</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=webos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=webos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_LOG_CONSOLE=true</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/vol1/1000/Docker/webos/db:/var/lib/mysql&#x27;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">webos-net</span></span><br><span class="line">      </span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6.2.6</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;6379:6379&#x27;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/vol1/1000/Docker/webos/redis/conf/redis.conf:/etc/redis/redis.conf&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/vol1/1000/Docker/webos/redis/data:/data&#x27;</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--requirepass</span> <span class="string">qwe123..</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">webos-net</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">webos:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">webos</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/vol1/1000/Docker/webos/data:/webos/api/rootPath&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/vol1/1000/Docker/webos/apps:/webos/web/apps&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">xiaohuochaia/webosbeta</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;8088:8088&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;8043:8043&#x27;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">webos-net</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">webos-net:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><p>其中所有<code>volumes</code>中的<code>/vol1/1000/Docker/webos/</code>字段内容，根据大家自己创建的Docker持久化文件夹路径填即可。</p><p>另外<code>ports</code>端口号如有冲突，可以自定义修改<code>:</code>前的端口号，如没有冲突不建议修改。</p><p>等待拉取镜像构建完成，显示如下时即已经构建成功，可关闭窗口。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613120355992.png" alt="QQ_1749779265641.png"></p><p>完成后，Compose详情如下：</p><p><img src="https://qncdn.jonylee.top/wechat/20250613120506544.png" alt="QQ_1749779447323.png"></p><p>这就安装好了。</p><h3 id="初始化配置Webos"><a href="#初始化配置Webos" class="headerlink" title="初始化配置Webos"></a>初始化配置Webos</h3><p>浏览器输入<code>http://飞牛NAS的ip地址：8088</code>，进入如下初始化界面，需要验证数据库和缓存，然后修改系统默认账号密码为自己的账号密码，其他配置可暂不用管，插件后面可以在应用商店安装。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613120732574.png" alt="QQ_1749779761602.png"></p><p>点下面保存，完成初始化配置，进入桌面，界面任务栏仿Win11，桌面图标个人觉得还有待提升，整体还是不错的。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613121215915.png" alt="QQ_1749780133039.png"></p><h3 id="功能预览"><a href="#功能预览" class="headerlink" title="功能预览"></a>功能预览</h3><p>系统设置内容也比较丰富，有很多可以自定义的设置项，支持文件搜索。另外还原生支持内网穿透，但貌似需要付费版。其他也有一些付费高级功能设置。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613121818830.png" alt="QQ_1749782052412.png"></p><p>其自带的应用商店，常用文档及图像处理，思维导图，音视频播放等应用都有，基本能满足轻办公需要。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613122049449.png" alt="QQ_1749782637227.png"></p><p>还有不少小游戏可以安装，估计都是些web小游戏，装几个闲来摸鱼玩玩也可以。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613122222947.png" alt="QQ_1749783720598.png"></p><p>另外还有些日历天气等小组件。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613122300933.png" alt="QQ_1749783755758.png"></p><h3 id="网盘存储挂载"><a href="#网盘存储挂载" class="headerlink" title="网盘存储挂载"></a>网盘存储挂载</h3><p>既然作为Alist替代，那么首要功能当然是网盘挂载了。点桌面<code>此电脑</code>图标，没有添加网络存储时，只显示本地存储及用户存储，和蓝色<code>＋</code>号，点蓝色<code>＋</code> <code>添加</code>图标，可以添加网络存储。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613123008253.png" alt="QQ_1749780609405.png"></p><p>测试了阿里网盘，百度网盘和123云盘。123云盘需要跳到其开发者页面去申请开发者client_id，还需要123网盘审核，比较慢一些不能当场添加。</p><p>阿里网盘直接用APP扫码即可获取授权Token。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613123035682.png" alt="QQ_1749781050361.png"></p><p>然后选择网盘路径。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613123108663.png" alt="QQ_1749781279645.png"></p><p>选好保存即可。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613123531874.png" alt="QQ_1749781354374.png"></p><p>百度网盘是需要跳转百度授权窗口进行认证，过程非常方便。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613123617600.png" alt="QQ_1749781483355.png"></p><p>挂载后，我的电脑即可显示相应网盘图标，属性里可以看到各网盘的容量及使用空间。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613123717177.png" alt="QQ_1749781750420.png"></p><p>点进去网盘文件也都可以查看。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613123820952.png" alt="QQ_1749783568069.png"></p><p>文档类文件，需要安装插件支持，然后可以直接打开。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613123945777.png" alt="QQ_1749783263194.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250613123953613.png" alt="QQ_1749783304033.png"></p><p>音视频文件，也需要安装对应插件，然而测试尝试打开阿里云盘内的影视文件，一直转圈没打开，不过我之前用Alist也很难直接打开播放，影视都是下载到本地再看了，这倒也不需要去难为它。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613130040589.png" alt="QQ_1749790822722.png"></p><p>Webos同样也支持Webdav服务，可以挂载到本地使用，另外它还支持Webos服务和S3服务，webos服务具体是啥文档也没写，可能还没完善吧。</p><p><img src="https://qncdn.jonylee.top/wechat/20250613130416048.png" alt="b033c3301e16db8a07c25efa8b58fa84.png"></p><p>Webos整体来说还是相当不错的，由于功能比较多，界面也比较华丽，资源占用上比Alist要高一些。但是在Alist前途未卜之际，也不乏一个不错的平替，基本上Alist主要功能它都能覆盖，而且具有比Alist更加丰富的功能。</p><p>最后，虽然Webos是开源应用，但是它走的是另外一条商业化道路，它基础功能免费，基本上能满足绝大多数个人用户，另外还提供了不同档位的高级付费功能选项，而终身版定价也不高。</p><p>Webos还提供了在线使用地址，这样挺好，大家可以先去试一试好不好用，再决定要不要安装。演示地址：<a href="https://p1.tenfell.cn/">https://p1.tenfell.cn/</a>（不过在线演示被大家整的有点花，哈哈，自己部署没那么多乱七八糟的还是挺清爽的）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Alist被收购已经板上钉钉，大家的无力感并不是因为开源应用被收购，而是这家收购公司过往的黑历史和骚操作，让人难以对其产生任何信任。&lt;/p&gt;
&lt;p&gt;虽然有原贡献者Fork项目另起炉灶，但是能不能混乱之中力挽狂澜，再将开发者聚集起来，也很难说。&lt;/p&gt;
&lt;p&gt;Alist作为一</summary>
      
    
    
    
    <category term="效率工具" scheme="https://blog.jonylee.top/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="在线工具" scheme="https://blog.jonylee.top/tags/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"/>
    
    <category term="开源应用" scheme="https://blog.jonylee.top/tags/%E5%BC%80%E6%BA%90%E5%BA%94%E7%94%A8/"/>
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>鲜花丢在粪坑里！Alist的命运让人唏嘘不已</title>
    <link href="https://blog.jonylee.top/2025/06/12/2025-06-12%20%E9%B2%9C%E8%8A%B1%E4%B8%A2%E5%9C%A8%E7%B2%AA%E5%9D%91%E9%87%8C%EF%BC%81Alist%E7%9A%84%E5%91%BD%E8%BF%90%E8%AE%A9%E4%BA%BA%E5%94%8F%E5%98%98%E4%B8%8D%E5%B7%B2/"/>
    <id>https://blog.jonylee.top/2025/06/12/2025-06-12%20%E9%B2%9C%E8%8A%B1%E4%B8%A2%E5%9C%A8%E7%B2%AA%E5%9D%91%E9%87%8C%EF%BC%81Alist%E7%9A%84%E5%91%BD%E8%BF%90%E8%AE%A9%E4%BA%BA%E5%94%8F%E5%98%98%E4%B8%8D%E5%B7%B2/</id>
    <published>2025-06-12T14:00:00.000Z</published>
    <updated>2025-06-12T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于非常喜欢开源应用的Jony来说，最近这个瓜吃的是真难受！</p><p>事件的主角Alist，相信很多人都有用过或者听过。</p><h2 id="什么是Alist？"><a href="#什么是Alist？" class="headerlink" title="什么是Alist？"></a>什么是Alist？</h2><p>Alist是一个几乎可以聚合市面上所有主流网盘的一个开源应用。</p><p><img src="https://qncdn.jonylee.top/wechat/20250612120223578.png" alt="微信图片_20250612120210.png"></p><p>它能将这些不同的网盘无缝集成到一起，通过统一的Web界面管理。还可以通过Webdav协议挂载为本地磁盘直接读写或编辑文件；同时支持在Web端预览，播放音视频、文档等；还能通过Aria2实现离线下载。它具有多用户管理功能，也非常方便做资源分享。</p><p>另一个知名的资源分享项目小雅超集，也是基于Alist实现的。</p><p>Alist作为开源网盘聚合工具的标杆，其核心功能与设计理念在当前没有完美的平替！</p><p>该应用之前是由开发者Xhofe（Andy Hsu）采用AGPL-3.0开源协议开源，吸引了众多开发者参与开发。Github上Star数已近5万！</p><p><img src="https://qncdn.jonylee.top/wechat/20250612115701581.png" alt="微信图片_20250612115556.png"></p><h2 id="Alist怎么了？"><a href="#Alist怎么了？" class="headerlink" title="Alist怎么了？"></a>Alist怎么了？</h2><p>近期爆出Alist被<strong>悄咪咪</strong>收购。优秀开源项目最终被收购走向商业化，是一个很常见的也是一个比较好的结局，这对主要开发者来说也是正向的，付出的心血产生经济价值，也可以激发更多的开发者投身开源开发。</p><p>这种事大家都理解，所以大家也并没有苛责开发者，主要的质疑来源于这个收购过程和收购的公司。因为该应用涉及通过作者提供的API获取用户网盘的密钥Token，而大家的网盘多少都有些隐私资料。</p><p>Alist被收购的过程突出一个<strong>偷偷摸摸</strong>。具体问题及影响有如下三点：</p><h4 id="1-商业化操守遭质疑"><a href="#1-商业化操守遭质疑" class="headerlink" title="1. 商业化操守遭质疑"></a><strong>1. 商业化操守遭质疑</strong></h4><ul><li><strong>隐秘收购与文档篡改</strong>：2025年4月Alist项目悄然易主，用户发现中文文档被替换为商业化内容（如VIP技术支持、QQ群推广），而原开发者Xhofe未公开说明即退出社区管理。  </li><li><strong>官网域名切换</strong>：6月初官网从<code>alist.nn.ci</code>改为<code>alistgo.com</code>，明确归属贵州不够科技，但缺乏正式声明，引发社区警觉。</li></ul><h4 id="2-供应链投毒风险"><a href="#2-供应链投毒风险" class="headerlink" title="2. 供应链投毒风险"></a><strong>2. 供应链投毒风险</strong></h4><ul><li><strong>前科关联</strong>：贵州不够科技曾收购LNMP等开源项目，后被曝在安装脚本植入后门程序；此次Alist合并的PR中也被发现含可疑代码（后虽撤回，但用户担忧历史版本已受影响）。  </li><li><strong>API依赖隐患</strong>：Alist依赖私有API服务（<code>api.nn.ci</code>），若新东家停止维护或篡改接口，可能导致旧版本失效，用户被迫升级风险版本。</li></ul><h4 id="3-社区信任崩塌"><a href="#3-社区信任崩塌" class="headerlink" title="3. 社区信任崩塌"></a><strong>3. 社区信任崩塌</strong></h4><ul><li>贡献者被戏称为“黑奴”（贡献量第9的开发者xrgzs愤而Fork项目），反映开源项目商业化过程中对社区贡献者的忽视。  </li><li>原开发者虽承诺“审查代码”，但账号控制权转移后，社区对其独立性存疑。</li></ul><p>作者事先没有任何说明，项目官网被悄悄更改，项目文档也被反复悄悄修改，甚至有人提交合并用于获取用户设备信息的代码。</p><p><img src="https://qncdn.jonylee.top/wechat/20250612124939719.png" alt="微信图片_20250612124853.png"></p><p>而收购的金主被扒出为一家有黑料前科的公司<strong>贵州不够科技</strong>，其曾经收购开源应用hutool等的骚操作，甚至被指可能涉及过收购开源应用然后进行代码投毒（此消息未经证实）。</p><p><img src="https://qncdn.jonylee.top/wechat/20250612124541514.png" alt="合并.png"></p><p>这两天Github项目上该项目的Issues已经被广大网友的口水淹没，翻了15页还没翻完。</p><p><img src="https://qncdn.jonylee.top/wechat/20250612125407988.png" alt="微信图片_20250612114337.png"></p><h2 id="用户怎么办？"><a href="#用户怎么办？" class="headerlink" title="用户怎么办？"></a>用户怎么办？</h2><p>Issues里有人追溯到被收购前的最后一个版本为3.40.0，鉴于大家对收购公司的不信任，建议大家：</p><ul><li>暂停Alist升级，冻结当前稳定版本（新版本可能含统计代码或后门）。</li><li>审查Alist配置文件，禁用非必要API调用（如api.nn.ci），优先使用各网盘原生Token。</li></ul><p>后续进一步关注事件的发展，目前已有开发者提出分叉原项目另行开发。</p><p>我在日常中是深度使用Alist的，用简悦+网盘+Alist+Obsidian搭建的一套知识信息剪藏采集流程，用起来非常丝滑。</p><p>具体来说是用简悦从网上采集文章资料，转为markdown格式直接保存到网盘，同时用Alist通过Webdav协议挂载到本地Obsidian库进行编辑整理，然后本地使用或者用Alist的Web在线访问，相当方便。</p><p>本来准备将这套方法推荐给大家的，现在Alist出了这样的事情，着实有点可惜。</p><p>Jony也找寻了一番其他开源平替，无奈能做到Alist这么好用的还真是没有。</p><h2 id="说点什么？"><a href="#说点什么？" class="headerlink" title="说点什么？"></a>说点什么？</h2><p>长久以来，开源项目一直是用爱发电的状态，开发者长期投入巨大精力维护一个没有变现能力的开源项目是相当困难的，最终很多优秀的开源项目走向挂档停更。</p><p>很多个人开源项目都开通有赞助，希望大家在使用到比较优秀的开源项目时，能够多少赞助一下开发者，当请作者喝杯咖啡，虽然杯水车薪，但总归也算是一个认可和激励。</p><p>另外在开源项目商业化变现这件事上，也不乏成功案例，我个人比较喜欢开源应用，有特别好用的，是非常愿意付费购买pro版或者付费版的。</p><p>此次Alist作者的做法，不知道出于什么样的现实考量，把这么优秀的开源项目，卖给有黑料前科的公司，相当于拿自己的社区信誉一次性折了现。实在想不明白作者怎么就选择了这样一条路，相当无语吧，只能说，可惜了Alist！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;对于非常喜欢开源应用的Jony来说，最近这个瓜吃的是真难受！&lt;/p&gt;
&lt;p&gt;事件的主角Alist，相信很多人都有用过或者听过。&lt;/p&gt;
&lt;h2 id=&quot;什么是Alist？&quot;&gt;&lt;a href=&quot;#什么是Alist？&quot; class=&quot;headerlink&quot; title=&quot;什么是</summary>
      
    
    
    
    <category term="效率工具" scheme="https://blog.jonylee.top/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="效率工具" scheme="https://blog.jonylee.top/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>干净清爽无捆绑，解压软件还是开源免费的7-Zip好用</title>
    <link href="https://blog.jonylee.top/2025/06/11/2025-06-11%20%E5%B9%B2%E5%87%80%E6%B8%85%E7%88%BD%E6%97%A0%E6%8D%86%E7%BB%91%EF%BC%8C%E8%A7%A3%E5%8E%8B%E8%BD%AF%E4%BB%B6%E8%BF%98%E6%98%AF%E5%BC%80%E6%BA%90%E5%85%8D%E8%B4%B9%E7%9A%847-Zip%E5%A5%BD%E7%94%A8/"/>
    <id>https://blog.jonylee.top/2025/06/11/2025-06-11%20%E5%B9%B2%E5%87%80%E6%B8%85%E7%88%BD%E6%97%A0%E6%8D%86%E7%BB%91%EF%BC%8C%E8%A7%A3%E5%8E%8B%E8%BD%AF%E4%BB%B6%E8%BF%98%E6%98%AF%E5%BC%80%E6%BA%90%E5%85%8D%E8%B4%B9%E7%9A%847-Zip%E5%A5%BD%E7%94%A8/</id>
    <published>2025-06-11T14:00:00.000Z</published>
    <updated>2025-06-11T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>解压软件，可以说是电脑装机必备，大家用的哪一款呢？</p><p>以前装系统，喜欢装各种优化版，一般都会给预装了WinRAR，用用也还行。现在WinRAR个人版已经免费了，但是有广告弹窗挺烦人的。我已经很久没用了。</p><p>国内的360解压，2345好压都是免费的，但是这两家免费的里面有多少料想必大家也都清楚，我之前一直用的是精简版好压，把乱七八糟的都干掉了，倒也没闹什么幺蛾子。</p><p>前几天看到一个AI自动生成短视频的开源应用MoneyPrinterTurbo，准备下载尝试一下，结果从作者官方给出的度盘下载地址下载的一键包，解压到一半报错。</p><p><img src="https://qncdn.jonylee.top/wechat/20250610195107847.png" alt="微信图片_20250610170216.png"></p><p>我一度怀疑我下载的文件有问题，又从作者给的Google盘重新下载，结果依然报错。</p><p>看了下该一键包是<code>.7z</code>格式，这时我想到可能是我的解压软件的问题，于是换了个开源解压软件<code>7-ZIP</code>试了下，果然，这回没有报错，解压速度还相当的快。</p><p>Jony一向喜欢这种简洁小巧的开源应用，免费，无捆绑，无广告。</p><p>这里也推荐给大家试试。</p><p><img src="https://img.jonylee.top/i/2025/06/10/20250610173155635-2.png" alt="微信图片_20250610171504.png"></p><p><strong>7-Zip</strong> 是一款拥有极高压缩比的开源压缩软件。上面提到的<code>.7z</code>格式，就是7-ZIP推出的一种高压缩比格式。</p><h4 id="7-Zip-主要特征"><a href="#7-Zip-主要特征" class="headerlink" title="7-Zip 主要特征"></a>7-Zip 主要特征</h4><ul><li>7-Zip支持压缩及解压的格式有：7z、XZ、BZIP2、GZIP、TAR、ZIP 以及 WIM。</li><li>支持解压缩以下30多种压缩文件格式，包括一些虚拟磁盘文件格式：AR、ARJ、CAB、CHM、CPIO、CramFS、DMG、EXT、FAT、GPT、HFS、IHEX、ISO、LZH、LZMA、MBR、MSI、NSIS、NTFS、QCOW2、RAR、RPM、SquashFS、UDF、UEFI、VDI、VHD、VMDK、WIM、XAR、Z 以及 ZSTD。</li><li>与 ZIP 及 GZIP 格式相比，<strong>7-Zip</strong> 能提供比使用 PKZip 及 WinZip 高 2-10% 的压缩比。</li><li>为 7z 与 ZIP 提供更完善的 AES-256 加密算法。</li><li>7z 格式支持创建自释放压缩包。</li><li>Windows 资源管理器集成。</li><li>强大的文件管理器。</li><li>强大的命令行版本。</li><li>支持 FAR Manager 插件。</li><li>支持 87 种语言。</li></ul><p>7-Zip 适用于 Windows 11 &#x2F; 10 &#x2F; 8 &#x2F; 7 &#x2F; Vista &#x2F; XP &#x2F; 2022 &#x2F; 2019 &#x2F; 2016 &#x2F; 2012 &#x2F; 2008 &#x2F; 2003 &#x2F; 2000等多版本的Windows系统。由于是开源应用，Linux及MAC OS上同样也有基于7-ZIP的版。</p><p>程序只有不到2M大小，同时支持x64，x86和ARM平台。</p><p><img src="https://qncdn.jonylee.top/wechat/20250610195752764.png" alt="微信图片_20250610195556.png"></p><p>原生支持中文，并且支持自定义右键菜单。</p><p><img src="https://qncdn.jonylee.top/wechat/20250610200426125.png" alt="微信图片_20250610195944.png"></p><p>默认的右键菜单选项太多，很多用不上的，可以在选项设置里勾选取消掉，保留常用的即可。</p><p><img src="https://qncdn.jonylee.top/wechat/20250610200432604.png" alt="微信图片_20250610200329.png"></p><p>实测7-ZIP的解压速度也是相当快的。</p><p>要说缺点，就是这小玩意儿界面简洁到有点简陋，看起来简直不像这个时代的东西，但是也正是因为这样，它资源占用也极低。</p><p>而且话说回来，作为一个工具，一般也就是用到的时候一个右键呼出来，解压完也不会多看他一眼，界面倒也不那么重要了。</p><p>需要的小伙伴，可以直接到官网下载：<a href="https://www.7-zip.org/download.html">7-zip官网</a>，或者公众号后台回复<code>7-zip</code>自动获取下载链接。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;解压软件，可以说是电脑装机必备，大家用的哪一款呢？&lt;/p&gt;
&lt;p&gt;以前装系统，喜欢装各种优化版，一般都会给预装了WinRAR，用用也还行。现在WinRAR个人版已经免费了，但是有广告弹窗挺烦人的。我已经很久没用了。&lt;/p&gt;
&lt;p&gt;国内的360解压，2345好压都是免费的，但</summary>
      
    
    
    
    <category term="效率工具" scheme="https://blog.jonylee.top/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="效率工具" scheme="https://blog.jonylee.top/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>无需服务器！用Github Pages+Actions自动化构建一个免费的博客网站</title>
    <link href="https://blog.jonylee.top/2025/06/03/2025-06-03%20%E6%97%A0%E9%9C%80%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%81%E7%94%A8Github%20Pages+Actions%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
    <id>https://blog.jonylee.top/2025/06/03/2025-06-03%20%E6%97%A0%E9%9C%80%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%81%E7%94%A8Github%20Pages+Actions%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</id>
    <published>2025-06-03T14:00:00.000Z</published>
    <updated>2025-06-03T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>上篇文章讲了用Hexo+安知鱼主题搭建博客网站，使用的方式是在本地运行Hexo框架进行构建，再将构建好的静态文件拷到云服务器或者虚拟主机上。</p><p>但是这会存在一个问题，就是你先得要有一个服务器，这样不可避免的会产生租用成本。</p><p>为了一个可有可无的东西增加开销，而且每次发文章还要在本地构建、上传，可能大家会觉得有门槛。</p><p>那么今天就分享一个新方案，它<strong>完全免费，无需本地构建，只需更新Markdown文章，就能自动发布博客</strong>。</p><p>这就是通过Github+Actions自动化构建工作流的方式，整个过程也不复杂，小白照着步骤操作都能成功。</p><p>以下是将本地 Hexo+Anzhiyu 主题博客通过 GitHub Actions 实现自动化部署的完整步骤：</p><hr><h3 id="🔗第一步：本地安装git和VScode"><a href="#🔗第一步：本地安装git和VScode" class="headerlink" title="🔗第一步：本地安装git和VScode"></a>🔗第一步：本地安装git和VScode</h3><p>Git是是一个开源的分布式版本控制系统，在此处主要用于推送博客源代码到远程仓库Github以及进行文件版本控制。</p><p>而Visual Studio Code则是一个微软出品的免费代码编辑器，配合git可以方便的实现博客程序源码和文章的编辑和推送管理。</p><h4 id="1-安装并配置Git"><a href="#1-安装并配置Git" class="headerlink" title="1. 安装并配置Git"></a>1. 安装并配置Git</h4><p> 访问 <a href="https://git-scm.com/downloads">Git 官网</a>，下载 Windows 版本（其他系统选择对应版本）</p><p><img src="https://qncdn.jonylee.top/wechat/20250602115346224.png" alt="微信图片_20250602113154.png"></p><p>双击安装包运行安装，选择安装组件这里默认即可。</p><p><img src="https://qncdn.jonylee.top/wechat/20250602115424647.png" alt="微信图片_20250602113921.png"></p><p>接下来一路下一步会有一系列配置选项。这里就不逐一截图了，其中几个关键配置选项选择如下：</p><ul><li>选择默认编辑器：<strong>Use Visual Studio Code as Git’s default editer</strong></li><li>调整 PATH 环境：<strong>Git from the command line and also from 3rd-party software</strong></li><li>HTTPS 传输后端：<strong>OpenSSL library</strong></li><li>行尾转换：<strong>Checkout Windows-style, commit Unix-style line endings</strong></li><li>终端模拟器：<strong>Use Windows’ default console window</strong></li></ul><p>其他选项保持默认即可。</p><p>CMD命令行验证是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git -v</span><br><span class="line"><span class="comment"># 应显示类似 git version 2.42.0.windows.2</span></span><br></pre></td></tr></table></figure><h4 id="2-安装并配置VScode"><a href="#2-安装并配置VScode" class="headerlink" title="2. 安装并配置VScode"></a>2. 安装并配置VScode</h4><p>访问 <a href="https://code.visualstudio.com/">VS Code 官网</a>，下载 Windows System Installer x64 版本。</p><p><img src="https://qncdn.jonylee.top/wechat/20250602120216713.png" alt="微信图片_20250602115926.png"></p><p>运行安装程序，并进行基础配置，打开 VS Code → 左侧扩展图标，安装如下几个必备扩展：</p><ul><li><strong>GitLens</strong>（增强 Git 功能）</li><li><strong>Git Graph</strong>（可视化分支管理）</li><li><strong>GitHub Pull Requests</strong>（GitHub 集成）</li></ul><p><img src="https://qncdn.jonylee.top/wechat/20250602121401724.png" alt="微信图片_20250602121347.png"></p><hr><h3 id="📦-第二步：准备-GitHub-仓库"><a href="#📦-第二步：准备-GitHub-仓库" class="headerlink" title="📦 第二步：准备 GitHub 仓库"></a>📦 第二步：准备 GitHub 仓库</h3><p>首先如果你还没有Github账号，那么注册一个，也很简单。页面是英文界面，如果觉得看起来吃力，可以用Edge自带翻译转成中文。</p><p>然后需要在Github上创建两个仓库，一个私有仓库，用于存储Hexo博客源码，一个公开仓库，用于自动部署静态文件。</p><h4 id="1-创建源码仓库（私有）"><a href="#1-创建源码仓库（私有）" class="headerlink" title="1. 创建源码仓库（私有）"></a>1. 创建源码仓库（私有）</h4><p>创建仓库（如 <code>hexoblog-source</code>），用来存放 Hexo 源码（包括 <code>source</code>、<code>themes</code>、<code>_config.yml</code> 等）。</p><p><img src="https://qncdn.jonylee.top/wechat/20250602105747080.png" alt="微信图片_20250602105636.png"></p><h4 id="2-创建静态站点仓库（公开）"><a href="#2-创建静态站点仓库（公开）" class="headerlink" title="2. 创建静态站点仓库（公开）"></a>2. 创建静态站点仓库（公开）</h4><p>创建 <code>&lt;用户名&gt;.github.io</code> 仓库（如 <code>yourname.github.io</code>），用于托管生成的静态文件（该仓库名格式GitHub Pages 可自动识别）。</p><p>创建步骤同上，只是在上图第四步需要选择<code>Public</code>创建公共仓库，因为你的网页是需要公开访问的。</p><hr><h3 id="🔑第三步：-配置-Token（解决-Actions-部署权限）"><a href="#🔑第三步：-配置-Token（解决-Actions-部署权限）" class="headerlink" title="🔑第三步： 配置 Token（解决 Actions 部署权限）"></a>🔑第三步： 配置 Token（解决 Actions 部署权限）</h3><h4 id="1-创建-Token"><a href="#1-创建-Token" class="headerlink" title="1. 创建 Token"></a>1. 创建 Token</h4><p>访问 GitHub → Settings → Developer Settings → <a href="https://github.com/settings/tokens">Personal Access Tokens</a>，选择Tokens(classic)，点右上角<code>Generate new token</code>按钮。</p><p><img src="https://qncdn.jonylee.top/wechat/20250602204327662.png" alt="微信图片_20250602203827.png"></p><p>生成新 Token，名称自己写，用于区分不同token即可，注意选择有效期，用于Actions部署建议永久，并且勾选相应权限：</p><ul><li><code>repo</code>（全部仓库权限）</li><li><code>workflow</code>（工作流权限）</li></ul><p><img src="https://qncdn.jonylee.top/wechat/20250602204343675.png" alt="微信图片_20250602204240.png"></p><p>复制生成的 Token并妥善保存。（<strong>注意该token仅显示一次</strong>）</p><h4 id="2-在源码仓库添加-Secret"><a href="#2-在源码仓库添加-Secret" class="headerlink" title="2. 在源码仓库添加 Secret"></a>2. 在源码仓库添加 Secret</h4><p>进入Github创建的源码仓库，找到 Settings → Secrets and Variables→ Actions ，点击 <code>New repository secret</code> 按钮。</p><p><img src="https://qncdn.jonylee.top/wechat/20250602205700065.png" alt="微信图片_20250602205216.png"></p><p>将以下值填入对应文本框:</p><ul><li>Name: <code>GH_TOKEN</code>（此密码名称建议不要修改，因为下面代码会用到，如果自己修改了记得下面代码相应修改掉）</li><li>Value: <code>粘贴上步复制的 Token</code></li></ul><p><img src="https://qncdn.jonylee.top/wechat/20250602205720568.png" alt="微信图片_20250602205625.png"></p><h4 id="3-配置本地Git与Github远程连接"><a href="#3-配置本地Git与Github远程连接" class="headerlink" title="3. 配置本地Git与Github远程连接"></a>3. 配置本地Git与Github远程连接</h4><p>本地Git配置与Github远程连接，首先配置 Git 全局设置，命令操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置用户信息（必须与 GitHub 账户一致）</span></span><br><span class="line">git config --global user.name <span class="string">&quot;YourGitHubUsername&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;your@email.com&quot;</span></span><br></pre></td></tr></table></figure><p>使用如下命令克隆Github上创建的源码仓库<code>hexoblog-source</code> 到本地：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/&lt;你的用户名&gt;/hexoblog-source.git </span><br></pre></td></tr></table></figure><p>因为之前创建的仓库是空的，这时克隆下来的仓库只有一个空的hexoblog-source文件夹。将本地测试好的Hexo源码仓库文件（见上篇文章），拷贝至这个hexoblog-source文件夹。</p><p>然后开始初始提交本地代码，在hexoblog-source文件夹根目录，使用git执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;初始提交&quot;</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p>这时会会弹出连接到Github的窗口，选择<code>Token</code>方式，输入上面第1步创建的Token。即可完成提交。</p><p><img src="https://qncdn.jonylee.top/wechat/20250602202420220.png" alt="微信图片_20250602200615.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250602202428769.png" alt="微信图片_20250602200643.png"></p><hr><h3 id="⚙️-第四步：配置-GitHub-Actions-工作流"><a href="#⚙️-第四步：配置-GitHub-Actions-工作流" class="headerlink" title="⚙️ 第四步：配置 GitHub Actions 工作流"></a>⚙️ 第四步：配置 GitHub Actions 工作流</h3><h4 id="1-创建-Workflow-文件"><a href="#1-创建-Workflow-文件" class="headerlink" title="1. 创建 Workflow 文件"></a>1. 创建 Workflow 文件</h4><p>在本地源码仓库创建 <code>.github/workflows/deploy.yml</code>，文件内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Blog</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [<span class="string">main</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="comment"># 1. 检出代码</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">source</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="string">recursive</span>  <span class="comment"># 确保主题子模块被检出</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 2. 设置指定 Node.js 版本（与本地一致）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;20.x&quot;</span>  <span class="comment"># ⚠️ 修改为你的本地版本</span></span><br><span class="line">          <span class="attr">cache:</span> <span class="string">&quot;npm&quot;</span>          <span class="comment"># 启用 npm 缓存</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 3. 配置缓存（节省Actions构建时间）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v3</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">cache-modules</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-node-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.os &#125;&#125;-node-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="comment"># 4. 安装依赖</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install -g hexo-cli</span></span><br><span class="line"><span class="string">          # 仅当缓存未命中时才重新安装</span></span><br><span class="line"><span class="string">          if [ ! -d &quot;node_modules&quot; ]; then</span></span><br><span class="line"><span class="string">            npm install</span></span><br><span class="line"><span class="string">          fi</span></span><br><span class="line"><span class="string">          # 安装 Anzhiyu 主题所需渲染器</span></span><br><span class="line"><span class="string">          npm install hexo-renderer-pug hexo-renderer-stylus --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="comment"># 5. 配置 Git 身份</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Configure</span> <span class="string">Git</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git config --global user.name &quot;GitHub Actions&quot;</span></span><br><span class="line"><span class="string">          git config --global user.email &quot;actions@users.noreply.github.com&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="comment"># 6. 使用 Token 部署</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">GH_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GH_TOKEN</span> <span class="string">&#125;&#125;</span>  <span class="comment"># 包含写入权限的 Token</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          # 在部署前动态修改仓库 URL</span></span><br><span class="line"><span class="string">          sed -i &quot;s|git@github.com:.*|https://oauth2:$GH_TOKEN@github.com/$GITHUB_REPOSITORY|&quot; _config.yml</span></span><br><span class="line"><span class="string"></span>          </span><br><span class="line">          <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line">          <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line">          <span class="string">hexo</span> <span class="string">deploy</span></span><br><span class="line">          </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;Deploy Successful!&quot;</span></span><br></pre></td></tr></table></figure><p>以上内容大家可以直接复制使用，唯二需要修改的是node版本和Git身份，根据自己的改一下就行，其他不用改。</p><h4 id="2-修改-Hexo-配置"><a href="#2-修改-Hexo-配置" class="headerlink" title="2. 修改 Hexo 配置"></a>2. 修改 Hexo 配置</h4><p>在本地Hexo配置文件 <code>_config.yml</code> 中的<code>deploy</code>部署配置项，填入以下内容，确认部署设置指向静态站点仓库：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;用户名&gt;/&lt;yourname&gt;.github.io.git</span>  <span class="comment"># 静态文件仓库基础地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span> <span class="comment"># 默认分支</span></span><br></pre></td></tr></table></figure><h4 id="3-触发首次部署"><a href="#3-触发首次部署" class="headerlink" title="3. 触发首次部署"></a>3. 触发首次部署</h4><p>推送包含上步修改好的Actions工作流脚本<code>deploy.yml</code>文件及Hexo配置文件 <code>_config.yml</code> 的本地代码到远程源码仓库。然后随便修改一个文件并再次推送，在 <code>Actions</code> 标签页查看实时日志。</p><p><img src="https://qncdn.jonylee.top/wechat/20250602210856856.png" alt="微信图片_20250602210714.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250602210929979.png" alt="微信图片_20250602210827.png"></p><p>如果有问题构建失败，也可以通过日志查找问题并解决。如果没有问题，该部署会显示成功。查看博客网站静态文件仓库 <code>&lt;yourname&gt;.github.io</code> 应该有静态文件生成。</p><p>此时可以进入下一步，设置自定义域名（如果你没有，第四步可以忽略，直接使用 <code>https://&lt;yourname&gt;.github.io</code> 也可以直接访问。）</p><hr><h3 id="🌐-第五步：绑定自定义域名"><a href="#🌐-第五步：绑定自定义域名" class="headerlink" title="🌐 第五步：绑定自定义域名"></a>🌐 第五步：绑定自定义域名</h3><p>如果自己有域名需要配置自己的域名访问，可按此步骤操作，如果直接使用github域名访问，此步可忽略。</p><h4 id="1-在静态站点仓库设置"><a href="#1-在静态站点仓库设置" class="headerlink" title="1. 在静态站点仓库设置"></a>1. 在静态站点仓库设置</h4><ul><li><strong>方法一</strong>（此方法被验证在后续提交构建时，CNAME文件会被清除导致无法访问，建议使用方法二）：<br>进入静态页面发布仓库，即第一步创建的公开仓库 <code>&lt;yourname&gt;.github.io</code>  → <code>Settings</code> → <code>Pages</code> ，在 <code>Custom domain</code>中输入你自己的域名（如 <code>blog.yourdomain.com</code>），保存后仓库根目录会自动生成一个 <code>CNAME</code> 文件 。</li></ul><p><img src="https://qncdn.jonylee.top/wechat/20250602213125213.png" alt="微信图片_20250602213108.png"></p><ul><li><strong>方法二</strong>：在 Hexo 源码目录<code>source/</code> 下新建名为<code>CNAME</code>的文件，无需后缀名，内容填入<code>blog.yourdomain.com</code> ，即为你的实际域名。然后在 <code>_config.yml</code> 中添加如下内容，防止改文件被hexo渲染：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 跳过对 CNAME 文件的渲染处理</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">CNAME</span></span><br></pre></td></tr></table></figure><p>重新推送更新触发构建即可。</p><h4 id="2-在域名服务商配置-DNS"><a href="#2-在域名服务商配置-DNS" class="headerlink" title="2. 在域名服务商配置 DNS"></a>2. 在域名服务商配置 DNS</h4><p>在你的域名服务商DNS设置里（如果托管在Cloudflare，则在Cloudflare对应域名管理的DNS项下），添加一条 <strong>CNAME 记录</strong>，其值如下：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">主机记录：blog  </span><br><span class="line">记录类型：CNAME  </span><br><span class="line">记录值：&lt;用户名&gt;.github.io</span><br></pre></td></tr></table></figure><hr><h3 id="✅-第六步：其他后续维护事项"><a href="#✅-第六步：其他后续维护事项" class="headerlink" title="✅ 第六步：其他后续维护事项"></a>✅ 第六步：其他后续维护事项</h3><h4 id="1-忽略不必要文件"><a href="#1-忽略不必要文件" class="headerlink" title="1. 忽略不必要文件"></a>1. 忽略不必要文件</h4><p>在源码仓库的 <code>.gitignore</code> 中添加如下内容，可在向远程仓库提交代码时忽略一些不必要的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">_multiconfig.yml</span><br></pre></td></tr></table></figure><h4 id="2-日常更新流程"><a href="#2-日常更新流程" class="headerlink" title="2. 日常更新流程"></a>2. 日常更新流程</h4><p>按以上流程操作完成后，你的博客将通过Github Actions及pages，实现 <strong>“完全免费，一次推送，自动发布”</strong>。</p><p>后续更新文章内容，只需要本地写好 Markdown 文档，然后保存到本地Hexo源码仓库的<code>source/_posts</code> 文件夹中，提交并推送到Github源码仓库，就会<strong>触发Actions 自动构建</strong>，并自动部署到网站静态文件仓库，完成网站更新流程。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上篇文章讲了用Hexo+安知鱼主题搭建博客网站，使用的方式是在本地运行Hexo框架进行构建，再将构建好的静态文件拷到云服务器或者虚拟主机上。&lt;/p&gt;
&lt;p&gt;但是这会存在一个问题，就是你先得要有一个服务器，这样不可避免的会产生租用成本。&lt;/p&gt;
&lt;p&gt;为了一个可有可无的东西增</summary>
      
    
    
    
    <category term="WEB技术" scheme="https://blog.jonylee.top/categories/WEB%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="方法技巧" scheme="https://blog.jonylee.top/tags/%E6%96%B9%E6%B3%95%E6%8A%80%E5%B7%A7/"/>
    
    <category term="Web技术" scheme="https://blog.jonylee.top/tags/Web%E6%8A%80%E6%9C%AF/"/>
    
    <category term="建站" scheme="https://blog.jonylee.top/tags/%E5%BB%BA%E7%AB%99/"/>
    
    <category term="博客Blog" scheme="https://blog.jonylee.top/tags/%E5%8D%9A%E5%AE%A2Blog/"/>
    
  </entry>
  
  <entry>
    <title>你需要一个博客吗？使用Hexo+安知鱼主题给自己的文章安个家</title>
    <link href="https://blog.jonylee.top/2025/06/02/2025-06-02%20%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E5%90%97%EF%BC%9F%E4%BD%BF%E7%94%A8Hexo+%E5%AE%89%E7%9F%A5%E9%B1%BC%E4%B8%BB%E9%A2%98%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E6%96%87%E7%AB%A0%E5%AE%89%E4%B8%AA%E5%AE%B6/"/>
    <id>https://blog.jonylee.top/2025/06/02/2025-06-02%20%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E5%90%97%EF%BC%9F%E4%BD%BF%E7%94%A8Hexo+%E5%AE%89%E7%9F%A5%E9%B1%BC%E4%B8%BB%E9%A2%98%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E6%96%87%E7%AB%A0%E5%AE%89%E4%B8%AA%E5%AE%B6/</id>
    <published>2025-06-02T14:00:00.000Z</published>
    <updated>2025-06-02T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>现在是一个多媒体的时代，短视频成了大众最容易接受的传播媒介，但是我一开始就没有打算跟风做短视频，始终觉得这种快餐内容，就像一阵风一样来无影去无踪，无法沉淀知识。</p><p>Jony还是更喜欢以文字的形式来做分享，所以从今年三月份开始决定写微信公众号。</p><p>坚持写到现在已经快三个月了，慢慢发现写文章的好处很多，除了收获分享的快乐之外，也发现这些文章成为自己生活的一个脚注，有些内容自己翻翻回顾一下挺好的。</p><p>文章写的多了，有一些写好但是公众号发不出去的文章，以及一些稍偏技术类的不适合在公众号上发的文章，想给它们另外找个安身之地。</p><p><strong>于是想为它们搭建一个在线博客。</strong></p><p>博客建站工具有很多，我自己的工作作品集是用Wordpress搭建的，女儿喜欢写写画画，也用Typecho为她搭建了自己的写作博客。但是这些PHP程序，我感觉都不够轻，而且需要PHP服务器环境才能运行。</p><p>我的这些公众号文章，都是用Obsidian+Markdown写的，我想用一种更简单的方法，基于已有的内容快速搭建一个静态博客，最后我选择了【Hexo】。</p><hr><p>Hexo博客是一种基于 Node.js 框架和 Markdown 文档格式的快速、简洁且高效的博客框架。</p><p>该博客环境搭建简单，用到了少量代码和命令行操作，但是其实你<strong>无需完全掌握这些</strong>，只要了解基本规则就行。加上有丰富的主题，很多文科生用Hexo创建的博客程序都很漂亮。</p><p>它最后生成的静态html网页文件，直接拷到任意虚拟主机vps，云服务器都可以部署，甚至如果你把它部署到全球最大的代码仓库Github上，<strong>不用花一分钱，就可以创建自己的博客网站。</strong></p><p>废话有点多，下面Jony给大家演示一下从零开始搭建Hexo博客环境的步骤。大家看看难不难。</p><h2 id="第一步：环境准备"><a href="#第一步：环境准备" class="headerlink" title="第一步：环境准备"></a>第一步：环境准备</h2><p>Hexo的环境搭建，需要两个东西，就是前面说的Node.js和Hexo CLI，我们先来安装一下。</p><h3 id="1-安装-Node-js"><a href="#1-安装-Node-js" class="headerlink" title="1. 安装 Node.js"></a>1. 安装 Node.js</h3><p>访问 <a href="https://nodejs.org/">Node.js 官网</a>，选择一个Node版本下载安装，建议下载长期稳定版本 <strong>LTS 版本</strong>（如 v18.x），安装的时候记得勾选 <code>Add to PATH</code>（这个很重要！这个会建立全局变量，支持你在任意位置使用Node.js）</p><p><img src="https://qncdn.jonylee.top/wechat/20250601203334285.png" alt="微信图片_20250601203009.png"></p><p>安装完成之后，打开CMD输入版本查看命令验证安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v  <span class="comment"># 显示版本号（如 v18.17.1）</span></span><br><span class="line">npm -v   <span class="comment"># 显示版本号（如 9.6.7）</span></span><br></pre></td></tr></table></figure><p>如果能正确显示版本号，就安装好了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250601203631116.png" alt="微信图片_20250601203538.png"></p><h3 id="2-安装-Hexo-CLI"><a href="#2-安装-Hexo-CLI" class="headerlink" title="2. 安装 Hexo CLI"></a>2. 安装 Hexo CLI</h3><p>安装好Node之后，再安装Hexo框架，只需要一行安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这样你的Hexo博客基础环境就搭建好了，是不是很简单？</p><hr><h2 id="第二步：创建-Hexo-项目"><a href="#第二步：创建-Hexo-项目" class="headerlink" title="第二步：创建 Hexo 项目"></a>第二步：创建 Hexo 项目</h2><p>在安装好Hexo博客基础环境之后，就可以开始初始化博客程序了，在你想要保存博客源代码的文件夹里，打开CMD。</p><blockquote><p>tips:<br>小技巧：在文件管理器地址栏直接输入<code>cmd</code>回车，就会在该文件夹位置打开CMD窗口。</p></blockquote><h3 id="1-初始化博客"><a href="#1-初始化博客" class="headerlink" title="1. 初始化博客"></a>1. 初始化博客</h3><p>本步骤的目的是安装博客程序的初始源码文件，CMD里执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init my-blog <span class="comment"># 文件夹名称可以自己修改</span></span><br><span class="line"><span class="built_in">cd</span> my-blog <span class="comment"># 进入博客初始源代码文件夹</span></span><br><span class="line">npm install <span class="comment"># 安装依赖文件</span></span><br></pre></td></tr></table></figure><p>等待源代码拉取完成即可。</p><h3 id="2-测试默认主题"><a href="#2-测试默认主题" class="headerlink" title="2. 测试默认主题"></a>2. 测试默认主题</h3><p>初始源代码拉取完成之后，执行以下组合命令，然后浏览器访问最下面显示的地址，默认为 <code>http://localhost:4000</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>如果可以显示以下初始页面，说明博客项目基本配置成功。</p><p><img src="https://qncdn.jonylee.top/wechat/20250601210536826.webp" alt="微信图片_20250601204729.webp"></p><p>这时候其实你就可以在博客更目录的<code>Source</code>文件夹下面的<code>_post</code>写博客了，但是默认的主题比较简陋，建议安装一下主题。</p><hr><h2 id="第三步：安装博客主题"><a href="#第三步：安装博客主题" class="headerlink" title="第三步：安装博客主题"></a>第三步：安装博客主题</h2><p>Hexo官网主题板块目前有423款主题，可以说非常丰富了，大部分都可以预览，大家可以根据自己的喜好挑选。这里Jony以【安知鱼主题】作为演示。</p><p><img src="https://qncdn.jonylee.top/wechat/20250601210551904.webp" alt="微信图片_20250601204646.webp"></p><h3 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1. 下载主题"></a>1. 下载主题</h3><p>在<a href="https://hexo.io/zh-cn/">Hexo</a>主题页面搜索 <code>anzhiyu</code> ，找到安知鱼主题，点击访问 <a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">安知鱼主题 GitHub仓库</a>，点击 <code>Code</code> → <code>Download ZIP</code>，直接下载最新源码，解压到前面步骤里创建的博客程序源码根目录，本文中示例为： <code>my-blog/themes/anzhiyu</code> </p><h3 id="2-修改-Hexo-配置"><a href="#2-修改-Hexo-配置" class="headerlink" title="2. 修改 Hexo 配置"></a>2. 修改 Hexo 配置</h3><p>在博客根目录找到Hexo系统配置文件 <code>_config.yml</code> ，本文示例位置为： <code>my-blog/_config.yml</code> ,<br>修改<code>theme</code>的值为<code>anzhiyu</code> 。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">anzhiyu</span>  <span class="comment"># 修改主题名称</span></span><br></pre></td></tr></table></figure><p>这样你的主题就切换成安知鱼主题了。安装其他主题修改名称同理。</p><p><img src="https://qncdn.jonylee.top/wechat/20250601205149349.png" alt="微信图片_20250601205137.png"></p><h3 id="3-安装主题依赖"><a href="#3-安装主题依赖" class="headerlink" title="3. 安装主题依赖"></a>3. 安装主题依赖</h3><p>安知鱼主题需要另外安装两个专门的渲染器，用来将程序源码和文章渲染成主题样式的html静态网页文件。</p><p>在CMD里用命令行执行以下命令（照抄即可）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><blockquote><p>tips:<br>注意：很多主题都有详细的安装设置文档，大家在相应主题页面按文档操作即可，不同的主题可能需要安装不同的依赖，文档会给出安装命令，按命令操作就行。</p></blockquote><hr><h2 id="第四步：配置安知鱼主题"><a href="#第四步：配置安知鱼主题" class="headerlink" title="第四步：配置安知鱼主题"></a>第四步：配置安知鱼主题</h2><p>这是安装主题之后最重要的一步，需要修改主题配置文件，把所有默认参数和页面素材链接或文件修改成你自己的内容，才能真正成为你自己的博客。</p><p>主要需要修改的是一个位于主题根目录<code>my-blog/themes/anzhiyu</code>下的 <code>_config.yml</code> 文件，需要注意的是，在修改主题配置文件的时候，需要先将它复制一份副本，并重命名为 <code>_config.anzhiyu.yml</code> ，拷贝到Hexo博客根目录即<code>my-blog/</code>下。</p><p>可以手动复制，也可以在CMD里用命令行复制，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> themes/anzhiyu/_config.yml _config.anzhiyu.yml</span><br></pre></td></tr></table></figure><p>最终的文件夹结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">my-blog/</span><br><span class="line">├─ public/       # 生成的静态文件（部署时复制此文件夹）</span><br><span class="line">├─ themes/</span><br><span class="line">│  └─ anzhiyu/   # 主题文件</span><br><span class="line">├─ _config.yml   # Hexo 主配置文件</span><br><span class="line">└─ _config.anzhiyu.yml  # 安知鱼主题配置文件</span><br></pre></td></tr></table></figure><p>安知鱼主题有专门的文档：<a href="https://docs.anheyu.com/">安知鱼主题官方文档</a>，大家如果使用这款主题，直接去文档页按文档教程操作就可以了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250601205301137.png" alt="微信图片_20250601202004.png"></p><p>根据主题配置文档，个性化设置自己的博客，逐项完成编辑 <code>_config.anzhiyu.yml</code> 文件及创建页面。初次需要修改的内容比较多，以及替换一些站点图片素材，这里就不演示了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250601205541887.png" alt="微信图片_20250601205532.png"></p><hr><h2 id="第五步：生成静态文件-本地预览"><a href="#第五步：生成静态文件-本地预览" class="headerlink" title="第五步：生成静态文件 &amp; 本地预览"></a>第五步：生成静态文件 &amp; 本地预览</h2><p>配置过程中或者完全配置好之后，都可以生成静态文件并本地预览，看有没有问题，可以参照主题作者博客对照效果：<a href="https://blog.anheyu.com/">安知鱼 - 生活明朗 万物可爱</a>。</p><p>生成静态文件步骤如下，几条简单的命令，均使用CMD命令行操作：</p><ol><li>清理之前生成的静态文件：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl  <span class="comment"># 删除 public/ 文件夹</span></span><br></pre></td></tr></table></figure><ol start="2"><li>生成新的静态文件：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g  <span class="comment"># 生成新静态文件到 public/ 文件夹</span></span><br></pre></td></tr></table></figure><ol start="3"><li>本地预览</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server  <span class="comment"># 启动本地服务器</span></span><br></pre></td></tr></table></figure><p>访问 <code>http://localhost:4000</code> 查看效果。</p><hr><h2 id="第六步：部署博客"><a href="#第六步：部署博客" class="headerlink" title="第六步：部署博客"></a>第六步：部署博客</h2><p>以上如果本地预览没问题，可以将位于 <code>public/</code> 目录的静态文件，直接部署到服务器，无需上传其他源代码。具体步骤这里就不展开了。</p><p>我是直接免费部署在Github上的，博客里的文章会延迟于公众号发布，以下是成品，欢迎访问：<a href="https://blog.jonylee.top/">https://blog.jonylee.top</a></p><p><img src="https://qncdn.jonylee.top/wechat/20250601210609371.webp" alt="微信图片_20250601202419.webp"></p><hr><h2 id="常见问题解决"><a href="#常见问题解决" class="headerlink" title="常见问题解决"></a>常见问题解决</h2><h3 id="问题1："><a href="#问题1：" class="headerlink" title="问题1："></a>问题1：</h3><p>构建时显示：<code>YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key</code> 。</p><p>检查 <code>yaml</code> 配置文件里格式是否正确，常见的问题是主键后面的冒号<code>:</code>之后没有空格，编辑yaml配置文件时，要特别注意yaml文件格式，如缩进，特殊字符等。</p><p>建议使用有代码高亮和拼写检查功能的编程用文本编辑器如 Visual Studio Code 等来修改yaml文件。</p><h3 id="问题2："><a href="#问题2：" class="headerlink" title="问题2："></a>问题2：</h3><p>构建完成后访问 <code>http://localhost:4000/</code> ，网页空白并显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts include includes/categoryGroup.pug +postUI include includes/pagination.pug</span><br></pre></td></tr></table></figure><p>检查是否安装主题依赖文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure><p>没有安装的话要记得安装，装完执行以下命令重新构建就好了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h3 id="问题3："><a href="#问题3：" class="headerlink" title="问题3："></a>问题3：</h3><p>安知鱼主题构建后的网站图片显示不出来，但是图片链接直接访问没有问题。<br>检查Hexo主配置文件<code>config.yml</code>中的站点标题<code>title:</code> ，该值不能带有特殊符号比如最常见的英文字符上撇 ” ‘ “ ，改掉之后问题即可解决。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Jony`s</span> <span class="string">Blog</span> <span class="comment"># 不能带特殊字符如单引号“&#x27;”,可以用“`”代替。</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;此处为副标题&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;此处为网站简介&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&#x27;此处为关键词，关键词&#x27;</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">作者名</span> <span class="comment"># 此处为文章作者名</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment"># 语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span> <span class="comment"># 时区</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现在是一个多媒体的时代，短视频成了大众最容易接受的传播媒介，但是我一开始就没有打算跟风做短视频，始终觉得这种快餐内容，就像一阵风一样来无影去无踪，无法沉淀知识。&lt;/p&gt;
&lt;p&gt;Jony还是更喜欢以文字的形式来做分享，所以从今年三月份开始决定写微信公众号。&lt;/p&gt;
&lt;p&gt;坚持</summary>
      
    
    
    
    <category term="WEB技术" scheme="https://blog.jonylee.top/categories/WEB%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Web技术" scheme="https://blog.jonylee.top/tags/Web%E6%8A%80%E6%9C%AF/"/>
    
    <category term="建站" scheme="https://blog.jonylee.top/tags/%E5%BB%BA%E7%AB%99/"/>
    
    <category term="博客Blog" scheme="https://blog.jonylee.top/tags/%E5%8D%9A%E5%AE%A2Blog/"/>
    
  </entry>
  
  <entry>
    <title>NAS导航面板！谁是你心中的NO.1？</title>
    <link href="https://blog.jonylee.top/2025/05/31/2025-05-31%20NAS%E5%AF%BC%E8%88%AA%E9%9D%A2%E6%9D%BF%EF%BC%8C%E8%B0%81%E6%98%AF%E4%BD%A0%E5%BF%83%E4%B8%AD%E7%9A%84NO1%EF%BC%9F/"/>
    <id>https://blog.jonylee.top/2025/05/31/2025-05-31%20NAS%E5%AF%BC%E8%88%AA%E9%9D%A2%E6%9D%BF%EF%BC%8C%E8%B0%81%E6%98%AF%E4%BD%A0%E5%BF%83%E4%B8%AD%E7%9A%84NO1%EF%BC%9F/</id>
    <published>2025-05-31T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>大家在使用NAS的过程中，多少会搭建一些方便自己使用的服务，而这些服务，大多是以不同端口的方式对外提供服务的。</p><p>家庭局域网内访问这些服务，需要使用<code>http://192.168.1.3:5678</code>这种地址访问。</p><p>那么如果大家搭建的服务多了，这种方式访问就有些麻烦了，不仅名字长，后面的端口也记不住。想要打开还要想半天后面端口号是啥。</p><p>前面文章分享了使用公网IP用域名+DDNS外网访问，为服务配置域名设置反向代理的方式，一定程度上能解决这个问题，大家为每个服务配置好记的域名，直接用域名就可以访问了。</p><p>但是这种方式，访问每个服务的时候，还是需要输入域名，如果大家是申请的免费二级域名，加上自己的三级域，就变成四段了，也有点长。</p><p>那有没有更高效（<del>懒</del>）一点的方法呢？</p><p>当然有！那就是用导航面板啊。</p><p>NAS用的久了，导航面板可以说是刚性需求，有需求就有产品，目前市面上导航面板应用也非常多，那么哪一款才是你心中的NO.1呢？</p><p>是 <strong>【homarr】</strong>？</p><p><img src="https://qncdn.jonylee.top/wechat/20250531153532010.png" alt="homarr.png"></p><p>是 <strong>【heimdall】</strong>？</p><p><img src="https://qncdn.jonylee.top/wechat/20250531153612170.jpg" alt="heimdall.jpg"></p><p>是 <strong>【Homepage】</strong>？</p><p><img src="https://qncdn.jonylee.top/wechat/20250531153944943.webp" alt="微信图片_20250531153830.webp"></p><p>是 <strong>【Flare】</strong>？</p><p><img src="https://qncdn.jonylee.top/wechat/20250531154628504.jpg" alt="flare-1.jpg"></p><p>还是其他？</p><p>Jony心中的NAS导航面板NO.1是 <strong>【Sun-panel】</strong></p><hr><h2 id="Sun-panel"><a href="#Sun-panel" class="headerlink" title="Sun-panel"></a>Sun-panel</h2><p><strong>Sun-panel功能特点一览：</strong></p><ul><li>🍉 界面简洁，功能强大，资源占用少</li><li>🍊 上手简单，可视化操作，可0代码使用</li><li>🍠 一键切换内、外网模式链接</li><li>🍵 支持docker部署（支持Arm系统）</li><li>🎪 支持多账号隔离使用</li><li>🎏 支持查看系统状态</li><li>🎨 支持自定义js、css</li><li>🍻 简单使用可以无需连接外部数据库</li><li>🍾 丰富图标风格自由搭配，支持iconify图标库</li><li>🚁 支持网页内置小窗口打开（部分三方网站屏蔽此功能）</li><li>🐳 简单的docker管理器，支持查看容器状态、控制容器的开启和关闭</li></ul><p><img src="https://qncdn.jonylee.top/wechat/20250531121429849.png" alt="微信图片_20250531114432.png"></p><p>其他的很多我也都用过，有的颜值也不错但是上手不容易，要配置到好看需要修改很多配置文件，有的功能不满足我的一些使用需求，最后我觉得最好用的NAS导航面板还是Sun-panel。</p><h3 id="界面简洁美观"><a href="#界面简洁美观" class="headerlink" title="界面简洁美观"></a>界面简洁美观</h3><p>这个没什么好说的，颜值即正义嘛，它默认的渐变色背景+应用卡片风格就很好看，另外还可以自定义显示效果，以满足不同人的个性化喜好。</p><p>这里我自己懒得截图演示了，借用几张官网界面图：</p><p><img src="https://qncdn.jonylee.top/wechat/20250531135107924.png" alt="solid-color-info.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250531135030522.png" alt="transparent-small.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250531135043068.png" alt="transparent-info.png"></p><h3 id="安装设置方便"><a href="#安装设置方便" class="headerlink" title="安装设置方便"></a>安装设置方便</h3><p>由于真的非常优秀而且开源，现在很多NAS系统应用商店里都上架了这款应用，直接点击安装就行。飞牛应用商店也有哦！</p><p><img src="https://qncdn.jonylee.top/wechat/20250531142017209.png" alt="微信图片_20250531135729.png"></p><p>设置上也是非常简单，安装好之后通过端口访问页面进行配置，各项配置一目了然，比Homepage这种还要用文本编辑器改配置文件的导航面板好用的多。</p><p><img src="https://qncdn.jonylee.top/wechat/20250531135437204.png" alt="微信图片_20250531135425.png"></p><h3 id="内外网一键切换"><a href="#内外网一键切换" class="headerlink" title="内外网一键切换"></a>内外网一键切换</h3><p>如果你有公网IP，做好了域名访问，在家庭局域网内部访问，最好还是直接用内网IP，因为通过域名访问，得DNS先解析域名，要出口转内销到外面转一圈才回来，影响访问速度。</p><p>创建卡片的时候，设置好内网外网地址。</p><p><img src="https://qncdn.jonylee.top/wechat/20250531141109978.png" alt="微信图片_20250531140943.png"></p><p>点面板上的切换图标，就可以一键切换成内网或者公网环境模式，点击服务卡片或图标就直接访问相应地址了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250531141020206.png" alt="公网.png"></p><h3 id="支持浏览器插件"><a href="#支持浏览器插件" class="headerlink" title="支持浏览器插件"></a>支持浏览器插件</h3><p>除了作为NAS服务的导航卡片之外，它还有浏览器插件，支持 Chrome、Edge、Firefox以及其他基于Chrome的浏览器。可以把你自己的 Sun-Panel 设置为浏览器的新标签页面，支持局域网和公网双地址自动检测跳转。</p><p><img src="https://qncdn.jonylee.top/wechat/20250531143639381.png" alt="image.png"></p><p>安装好浏览器插件后，先在<strong>你自己部署的Sun-panel面板设置</strong>里，打开Open API并启用，会获得一个接口地址和Token，开着页面备用。</p><p><img src="https://qncdn.jonylee.top/wechat/20250531144514987.png" alt="image.png"></p><p>再开启浏览器Sun-panel插件，在设置里，填好新标签页地址。</p><p><img src="https://qncdn.jonylee.top/wechat/20250531144338045.png" alt="image.png"></p><p>并在下面OpenAPI设置里，填入上一步自己Sun-panel服务页面里的OpenAPI地址及Token。</p><p><img src="https://qncdn.jonylee.top/wechat/20250531144604579.png" alt="image.png"></p><p>可以直接将浏览的网站快速添加到你自己的Sun-panel面板里，相当于个人书签了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250531150427715.webp" alt="微信图片_20250531145946.webp"></p><h3 id="其他用途"><a href="#其他用途" class="headerlink" title="其他用途"></a>其他用途</h3><p>因为Web应用的特性，当你做好了公网访问配置，你可以直接将它作为一个在线书签和个人导航面板使用。</p><p>Web应用一个极大的好处就是多端同步，不管走到哪只要有网，打开浏览器就可以用。就像一个随身工具箱一样，这也是我钟爱Web应用的原因之一！</p><p>最后，小伙伴们你们心中的导航面板NO.1是哪一款呢？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;大家在使用NAS的过程中，多少会搭建一些方便自己使用的服务，而这些服务，大多是以不同端口的方式对外提供服务的。&lt;/p&gt;
&lt;p&gt;家庭局域网内访问这些服务，需要使用&lt;code&gt;http://192.168.1.3:5678&lt;/code&gt;这种地址访问。&lt;/p&gt;
&lt;p&gt;那么如果大家</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="在线工具" scheme="https://blog.jonylee.top/tags/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"/>
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>想让NAS成为你的汗血宝马，还得是x86！</title>
    <link href="https://blog.jonylee.top/2025/05/29/2025-05-29%20%E6%83%B3%E8%AE%A9NAS%E6%88%90%E4%B8%BA%E4%BD%A0%E7%9A%84%E6%B1%97%E8%A1%80%E5%AE%9D%E9%A9%AC%EF%BC%8C%E8%BF%98%E5%BE%97%E6%98%AFx86%EF%BC%81/"/>
    <id>https://blog.jonylee.top/2025/05/29/2025-05-29%20%E6%83%B3%E8%AE%A9NAS%E6%88%90%E4%B8%BA%E4%BD%A0%E7%9A%84%E6%B1%97%E8%A1%80%E5%AE%9D%E9%A9%AC%EF%BC%8C%E8%BF%98%E5%BE%97%E6%98%AFx86%EF%BC%81/</id>
    <published>2025-05-29T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>前面介绍了一些可以入门做轻NAS的ARM盒子类产品，捡这类二手小设备，最主要的就是成本低廉，适合哪些又想玩NAS又暂时不想投入过多资金的朋友，做为一个初尝方案。</p><p>也有小伙伴提到还有一些老旧的ARM品牌NAS可以淘，这类我上篇文章里并没有推荐，因为虽然它优点是有盘位，但是这类在20-200价格区间的二手，硬件配置往往极低极老旧了，年限一般又比较久，实在是不太经得起折腾。</p><p>如果大家在这个价格区间里，实在觉得性能不够，那不妨在稍微放宽一些，价位来到150-350区间，那么将会发现一番新天地。</p><p>淘到这个价位，就不要再看ARM了，直接看x86好了。ARM的可玩性、系统及应用丰富程度和x86根本没法比。</p><p><img src="https://qncdn.jonylee.top/wechat/20250529124414681.png" alt="图片2s.png"></p><p><strong>关键是上了x86，就可以装飞牛啊！</strong></p><p>但是也正是因为飞牛横空出世，带飞了海鲜市场大量原本没人问津的垃圾工控小主机的价格。这些设备现在挂载闲鱼，首先打的旗号就是能装飞牛。</p><p>可以说免费的飞牛NAS系统极大利好了二手x86设备市场。</p><p>但是x86设备实在太多太乱了，Intel产品系列型号命名也是相当混乱，大家是没办法完全根据CPU型号命名大小来判断CPU代数和性能的。</p><p>目前海鲜市场大量二手主要是赛扬、奔腾、酷睿系列的低功耗型号，而其中功耗大致是赛扬＜奔腾＜酷睿（不包括12代酷睿小核系列），大家大致知道就行。</p><p>鉴于x86型号众多且繁杂，Jony今天也就不按系列细分了，也没办法按设备罗列，就将目前二手流出比较多的一些设备CPU参照PassMark分数排序列表。</p><p>大家可以参照此表大致判断性能强弱，再根据设备其他硬件条件结合价格做选择。对于有意选择这类设备的小伙伴，这个表格将非常有用！强烈建议大家收藏备用。</p><hr><h2 id="常见Intel系列x86低功耗CPU性能排序表"><a href="#常见Intel系列x86低功耗CPU性能排序表" class="headerlink" title="常见Intel系列x86低功耗CPU性能排序表"></a><strong>常见Intel系列x86低功耗CPU性能排序表</strong></h2><p>以下是整合的 <strong>常见Intel系列低功耗CPU性能排序表</strong>（按PassMark分数由低到高排列），包含赛扬、奔腾、酷睿系列（可以左右滑动浏览完整表格）：</p><table><thead><tr><th>型号（系列）</th><th>核心&#x2F;线程</th><th>基础频率</th><th>最大频率</th><th>制程工艺</th><th>TDP</th><th>核显型号</th><th>内存支持</th><th>PassMark分数</th><th>发布年份</th></tr></thead><tbody><tr><td><strong>N2810 (赛扬)</strong></td><td>2C&#x2F;2T</td><td>2.00 GHz</td><td>无</td><td>22 nm</td><td>7.5 W</td><td>HD Graphics (313MHz)</td><td>DDR3L-1066</td><td>465</td><td>2013 Q3</td></tr><tr><td><strong>N2808 (赛扬)</strong></td><td>2C&#x2F;2T</td><td>1.58 GHz</td><td>无</td><td>22 nm</td><td>4.5 W</td><td>HD Graphics (313MHz)</td><td>DDR3L-1333</td><td>515</td><td>2014 Q3</td></tr><tr><td><strong>J1800 (赛扬)</strong></td><td>2C&#x2F;2T</td><td>2.41 GHz</td><td>无</td><td>22 nm</td><td>10 W</td><td>HD Graphics (688MHz)</td><td>DDR3L-1333</td><td>570</td><td>2013 Q4</td></tr><tr><td><strong>1037U (赛扬)</strong></td><td>2C&#x2F;2T</td><td>1.80 GHz</td><td>无</td><td>22 nm</td><td>17 W</td><td>HD Graphics (Ivy)</td><td>DDR3-1600</td><td>~800</td><td>2013 Q1</td></tr><tr><td><strong>N3150 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>1.60 GHz</td><td>无</td><td>14 nm</td><td>6 W</td><td>HD Graphics</td><td>DDR3L-1333</td><td>~810</td><td>2016 Q1</td></tr><tr><td><strong>J3160 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>1.60 GHz</td><td>2.24 GHz</td><td>14 nm</td><td>6 W</td><td>HD Graphics 400</td><td>DDR3L-1600</td><td>~930</td><td>2016 Q1</td></tr><tr><td><strong>J2900 (奔腾)</strong></td><td>4C&#x2F;4T</td><td>2.41 GHz</td><td>无</td><td>22 nm</td><td>10 W</td><td>HD Graphics (688MHz)</td><td>DDR3L-1333</td><td>1238</td><td>2013 Q4</td></tr><tr><td><strong>N3350 (赛扬)</strong></td><td>2C&#x2F;2T</td><td>1.10 GHz</td><td>2.40 GHz</td><td>14 nm</td><td>6 W</td><td>HD Graphics 500</td><td>DDR3L-1600</td><td>~850</td><td>2016 Q3</td></tr><tr><td><strong>J3355 (奔腾)</strong></td><td>2C&#x2F;2T</td><td>2.00 GHz</td><td>2.50 GHz</td><td>14 nm</td><td>10 W</td><td>HD Graphics 500</td><td>DDR3L-1600</td><td>~900</td><td>2016 Q3</td></tr><tr><td><strong>J3455 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>1.50 GHz</td><td>2.30 GHz</td><td>14 nm</td><td>10 W</td><td>HD Graphics 500</td><td>DDR3L-1600</td><td>~900</td><td>2016 Q3</td></tr><tr><td><strong>J1900 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>2.00 GHz</td><td>2.41 GHz</td><td>22 nm</td><td>10 W</td><td>HD Graphics (688MHz)</td><td>DDR3L-1333</td><td>~1500</td><td>2013 Q4</td></tr><tr><td><strong>N4100 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>1.10 GHz</td><td>2.40 GHz</td><td>14 nm</td><td>6 W</td><td>UHD 600</td><td>DDR4&#x2F;LPDDR4</td><td>~1200</td><td>2017 Q4</td></tr><tr><td><strong>J4105 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>1.50 GHz</td><td>2.50 GHz</td><td>14 nm</td><td>10 W</td><td>UHD 600</td><td>DDR4-2400</td><td>~1092</td><td>2018 Q1</td></tr><tr><td><strong>i3-3127U (酷睿)</strong></td><td>2C&#x2F;4T</td><td>1.90 GHz</td><td>无</td><td>22 nm</td><td>17 W</td><td>HD Graphics 4000</td><td>DDR3-1600</td><td>~1500</td><td>2013 Q1</td></tr><tr><td><strong>i3-4010U (酷睿)</strong></td><td>2C&#x2F;4T</td><td>1.90 GHz</td><td>无</td><td>22 nm</td><td>15 W</td><td>HD Graphics 4400</td><td>DDR3L-1600</td><td>~1800</td><td>2013 Q3</td></tr><tr><td><strong>J5005 (奔腾)</strong></td><td>4C&#x2F;4T</td><td>1.50 GHz</td><td>2.80 GHz</td><td>14 nm</td><td>10 W</td><td>UHD 605</td><td>DDR4&#x2F;LPDDR4</td><td>~1500</td><td>2017 Q4</td></tr><tr><td><strong>i3-5005U (酷睿)</strong></td><td>2C&#x2F;4T</td><td>2.00 GHz</td><td>无</td><td>14 nm</td><td>15 W</td><td>HD Graphics 5500</td><td>DDR3L-1600</td><td>~2000</td><td>2015 Q1</td></tr><tr><td><strong>i3-5010U (酷睿)</strong></td><td>2C&#x2F;4T</td><td>2.10 GHz</td><td>无</td><td>14 nm</td><td>15 W</td><td>HD Graphics 5500</td><td>DDR3L-1600</td><td>~2100</td><td>2015 Q2</td></tr><tr><td><strong>J4125 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>2.00 GHz</td><td>2.70 GHz</td><td>14 nm</td><td>10 W</td><td>UHD 600</td><td>DDR4-2400</td><td>~1914</td><td>2019 Q4</td></tr><tr><td><strong>N5095 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>2.00 GHz</td><td>2.90 GHz</td><td>10 nm</td><td>15 W</td><td>UHD 16EU</td><td>DDR4-2933</td><td>~2500</td><td>2021 Q1</td></tr><tr><td><strong>J5105 (奔腾)</strong></td><td>4C&#x2F;4T</td><td>2.00 GHz</td><td>2.90 GHz</td><td>10 nm</td><td>10 W</td><td>UHD 24EU</td><td>DDR4-2933</td><td>~2500</td><td>2021 Q1</td></tr><tr><td><strong>N5105 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>2.00 GHz</td><td>2.90 GHz</td><td>10 nm</td><td>10 W</td><td>UHD 24EU</td><td>DDR4-2933</td><td>~2800</td><td>2021 Q1</td></tr><tr><td><strong>N6005 (赛扬)</strong></td><td>4C&#x2F;4T</td><td>2.00 GHz</td><td>3.30 GHz</td><td>10 nm</td><td>10 W</td><td>UHD 32EU</td><td>DDR4-2933</td><td>~3400</td><td>2021 Q1</td></tr><tr><td><strong>N100 (酷睿)</strong></td><td>4C&#x2F;4T</td><td>1.10 GHz</td><td>3.40 GHz</td><td>Intel 7</td><td>6 W</td><td>UHD 24EU</td><td>DDR5-4800</td><td>~3400</td><td>2023 Q1</td></tr><tr><td><strong>N150 (酷睿)</strong></td><td>4C&#x2F;4T</td><td>1.20 GHz</td><td>3.50 GHz</td><td>Intel 7</td><td>6 W</td><td>UHD 32EU</td><td>DDR5-4800</td><td>~3800</td><td>2023 Q1</td></tr><tr><td><strong>N200 (酷睿)</strong></td><td>4C&#x2F;4T</td><td>1.30 GHz</td><td>3.70 GHz</td><td>Intel 7</td><td>6 W</td><td>UHD 32EU</td><td>DDR5-4800</td><td>~4200</td><td>2023 Q1</td></tr></tbody></table><hr><h2 id="x86二手设备选购原则"><a href="#x86二手设备选购原则" class="headerlink" title="x86二手设备选购原则"></a>x86二手设备选购原则</h2><p>市场上x86系列二手产品非常多，因此我们也要认清自己的需求，根据需求划定边界，这样筛选起来就容易多了。</p><p>Jony建议大家可以按照以下几个原则去筛选：</p><blockquote><p><strong>1. 性能</strong>：既然放弃ARM系列来到x86，必然是对性能更高要求的，那么我们在选择的时候，有几个性能跃升点的型号，可以作为参照。</p><ul><li><strong>N3150</strong>，建议NAS起步底限。表中列出的低于这个型号的CPU，只是作为参考，不建议去买了，性能过低，可能还不如新的ARM芯片，即使能装上飞牛，也是卡顿无法流畅运行。</li><li><strong>J4125</strong>，当然这个不是NAS性能上限，但是基本上是150-350价位区间的性能上限了，如果大家能够在这个区间能淘到比这个更好的，那就再好不过了。</li></ul></blockquote><blockquote><p><strong>2. 功耗</strong>：x86设备整体功耗比ARM要高，大家使用NAS，基本上都是365d×24h长期运行，功耗始终是一个极其重要的指标，所以在选择的时候功耗也是大家关注的一个敏感点，当然是越低越好。</p><ul><li>表中列举的这些CPU，差距大约在8-9w之间，一年也就是70-80度电，其实还好，大家不必过于纠结，还是要看设备整体性价比。</li><li>但是不要选择上表以外的其他低代高功耗酷睿系列CPU，这类有很多能TDP能到60W以上，那耗电量就上去了。</li></ul></blockquote><blockquote><p><strong>3. 性价比</strong>：上表列出的CPU，初衷就是以尽量低的价格淘到尽量高性能的设备。表中J4125以上的旧款CPU，往往价格开始虚高了，奔到350-400以上的话，大家就不要下手了。<br>全新N100小主机现在400多就能拿到，性能更强而且功耗又低，谁还要那不知道几手的5105？</p></blockquote><blockquote><p><strong>4. 其他</strong>：既然是整体二手设备，那么除了CPU，还有其他需要考量的硬件配置。</p><ul><li>网口必须千兆以上，双千兆网口可以做软路由可玩性更高。</li><li>硬盘位接口，注意是否有足够的硬盘位以便于扩展存储。</li><li>如果盘位不足，必须要有USB3.0接口，以便接入外接硬盘。</li><li>尽量淘带4G及以上内存和SSD系统盘的设备，这样直接到手就可以装系统验机试用了，不用再淘其他配件，当然手中有旧配件的除外。</li><li>尽量不要选不带电源的设备，先不说奸商电源拆开卖价格超选购预期，没有电源能不能开机都保证不了，是玩开盲盒么？</li></ul></blockquote><p>以上这些CPU设备，在150-350价位区间主要是小主机&#x2F;工控机设备，当然如果能捡漏个人出的DIY带机箱NAS，或者旧的成品NAS，那就更好不过了。</p><p>想要性能再好点，N100全新机器性价比也很不错，买个N100全新准系统小主机+硬盘盒+内存系统盘组好，价格和成品NAS比也还有不少优势，具体对比详见这里：</p><p>再不然，要么干脆直接上品牌NAS算了，反正马上618现在各家电商都在搞活动，连机器带盘一步到位，省心。</p><p>目前入门款NAS大概有以下这些，大家可以看看划不划算。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前面介绍了一些可以入门做轻NAS的ARM盒子类产品，捡这类二手小设备，最主要的就是成本低廉，适合哪些又想玩NAS又暂时不想投入过多资金的朋友，做为一个初尝方案。&lt;/p&gt;
&lt;p&gt;也有小伙伴提到还有一些老旧的ARM品牌NAS可以淘，这类我上篇文章里并没有推荐，因为虽然它优点是有</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
    <category term="淘二手" scheme="https://blog.jonylee.top/tags/%E6%B7%98%E4%BA%8C%E6%89%8B/"/>
    
    <category term="x86" scheme="https://blog.jonylee.top/tags/x86/"/>
    
  </entry>
  
  <entry>
    <title>捡个盒子做NAS！海鲜市场捡垃圾之——ARM篇</title>
    <link href="https://blog.jonylee.top/2025/05/28/2025-05-28%20%E6%8D%A1%E4%B8%AA%E7%9B%92%E5%AD%90%E5%81%9ANAS%EF%BC%81%E6%B5%B7%E9%B2%9C%E5%B8%82%E5%9C%BA%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E2%80%94%E2%80%94ARM%E7%AF%87/"/>
    <id>https://blog.jonylee.top/2025/05/28/2025-05-28%20%E6%8D%A1%E4%B8%AA%E7%9B%92%E5%AD%90%E5%81%9ANAS%EF%BC%81%E6%B5%B7%E9%B2%9C%E5%B8%82%E5%9C%BA%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E2%80%94%E2%80%94ARM%E7%AF%87/</id>
    <published>2025-05-28T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近聊NAS的话题比较多，看到还是有不少小伙伴有NAS使用需求的，看来大家都苦网盘久矣。</p><p>但是品牌NAS动辄几千块的价格，还不含硬盘，着实也让不少小伙伴有点犹豫。</p><p>那么其实还有一些低成本的方案，让大家花极少的成本，先弄一个轻NAS用起来，等真正了解了NAS的用法和自己的需求，再决定选择什么样的进阶改善款方案，这样应该也是一个比较理性的选择，当然不差钱的朋友当我没说，这篇文章也不用看哈哈。</p><p>其实家庭NAS，除了一次性投入的硬件成本，还有一项重要的成本就是功耗电费成本，毕竟NAS如果要使用方便，最好是24小时开机，那么如果弄个功耗几百w的设备放家里，每年电费也够买几个网盘VIP了。</p><p>所以家用NAS，低功耗是首先要考虑的。而作为入门设备，性能可以满足NAS基本需求就好，而ARM处理器低功耗的特性，正好可以满足这一点。</p><p>关于NAS有什么用以及使用二手ARM设备刷机作为轻量级NAS都能干些啥？可以看我之前的这两篇文章：</p><p><a href="https://mp.weixin.qq.com/s/IESHJ75DTGDsC3QSTiBC5Q">NAS真有那么香吗？看了这些你就知道</a></p><p><a href="https://mp.weixin.qq.com/s/uV6PYA34VxKs-3KkZiI_og">玩客云老当益壮！刷了这版固件我打算用到它自然报废</a></p><p>目前海鲜市场适合做轻NAS的ARM产品，主要是一些电视盒机顶盒类，以及下架的边缘计算产品盒子，量大且价格便宜，也有相当多的系统固件及教程支持。</p><hr><h2 id="ARM盒子做轻NAS的优势"><a href="#ARM盒子做轻NAS的优势" class="headerlink" title="ARM盒子做轻NAS的优势"></a>ARM盒子做轻NAS的优势</h2><p><strong>成本极低</strong>：二手ARM盒子价格普遍在25-150元，远低于品牌NAS。</p><p><strong>超低功耗</strong> ：ARM盒子整机功耗普遍在5-8W（如N1盒子约5W），相比x86 NAS（如J4125平台约15W）省电约70%。按0.6元&#x2F;度电费计算，全年电费仅约25元，适合24小时开机。</p><p><strong>体积小巧</strong> ：多数设备仅手掌大小，可隐藏部署于弱电箱或电视柜。</p><p><strong>发热低噪音小</strong>：大部分ARM设备由于功耗低，发热量也不大，无风扇设计（依赖被动散热），适合卧室或书房环境。</p><p><strong>社区生态完善</strong> ：很多ARM设备（如玩客云、N1盒子、黑豹X2）可轻松刷入Armbian、OpenWrt、CasaOS等系统，支持Docker容器化部署。  而且刷机教程丰富，网络社区有大量详细刷机指南。</p><p><strong>特定场景性能足够</strong> ：简单存储共享需求基本可满足，支持SMB&#x2F;NFS协议，满足家庭文件共享、照片备份。可以通过Docker等搭建Alist网盘聚合，小雅超集等轻量服务，安装Jellyfin媒体中心等应用，硬解H.264甚至H.265转码都可以。</p><hr><h2 id="ARM盒子做轻NAS的缺点"><a href="#ARM盒子做轻NAS的缺点" class="headerlink" title="ARM盒子做轻NAS的缺点"></a>ARM盒子做轻NAS的缺点</h2><p><strong>性能瓶颈</strong>：ARM盒子处理器（如RK3566、S905）多核性能仅为x86低功耗CPU（如J4125）的1&#x2F;3，无法流畅运行虚拟机或有较大数据库的服务。多数设备仅1-2GB内存，安装服务过多容易卡顿。</p><p><strong>存储扩展有限</strong>：有些设备只有USB2.0接口，又没有内置硬盘位，导致外接硬盘性无法发挥。</p><p><strong>系统兼容性</strong>：arm32设备（如玩客云）无法运行64位Docker镜像，而32位Docker镜像应用不够丰富。  </p><p><strong>厂家硬件限制</strong>：一些设计用来跑边缘计算的盒子，厂家会锁CPU限制刷第三方系统，虽然随着设备大量流出，也逐步有大神破解，但是还是比较费力或者不够完美。</p><hr><p>今天Jony整理了一个表格，详细列一下海鲜市场常见且量大的几个可以做轻NAS的ARM设备配置及优缺点，方便大家挑选。</p><h2 id="六款典型ARM盒子配置对比"><a href="#六款典型ARM盒子配置对比" class="headerlink" title="六款典型ARM盒子配置对比"></a>六款典型ARM盒子配置对比</h2><p><img src="https://qncdn.jonylee.top/wechat/20250527121104182.png" alt="图片2.png"></p><p>这些ARM设备，大部分都可刷入Armbian, CasaOS，iStoreOS，Openwrt等开源系统（以下表格简称ACIO），另外还有一些有官方定制NAS系统如昔映，或者小众一些的海纳思（HiNAS）系统可以刷。如果是小白动手能力一般，可以挑选刷好系统的，价格会稍高一些。</p><table><thead><tr><th><strong>型号</strong></th><th><strong>参考价格</strong></th><th><strong>处理器</strong></th><th>处理器架构</th><th><strong>内存&#x2F;存储</strong></th><th><strong>接口</strong></th><th><strong>支持系统</strong></th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><strong>玩客云</strong></td><td>25-60元</td><td>S805四核ARM 1.5GHz</td><td>arm32</td><td>1GB+8GB</td><td>USB2.0×2,SD接口×1 HDMI, 千兆网口</td><td>ACIO+海纳思等+安卓电视盒子</td><td>价格极低，系统固件成熟，刷机教程众多，有HIMI可当电视盒子</td><td>arm32位架构，应用不够丰富，没有USB3.0存储扩展不便</td></tr><tr><td><strong>移动魔百盒系列</strong></td><td>30-50元</td><td>海思Hi3798MV100&#x2F;MV200&#x2F;MV300，或晶晨S905等</td><td>arm64</td><td>2GB+8GB</td><td>USB2.0接口×2，AV音频接口×1，SD接口×1，HDMI高清接口×1，百兆网口×1</td><td>Armbian+海纳思+安卓电视盒子</td><td>价格极低，甚至自家有闲置，有HIMI可当电视盒子</td><td>没有USB3.0存储扩展不便</td></tr><tr><td><strong>N1盒子</strong></td><td>50-80元</td><td>S905D四核 1.5GHz</td><td>arm64</td><td>2GB+8GB</td><td>USB2.0×1, HDMI, 千兆网口</td><td>ACIO+海纳思+安卓电视盒子</td><td>价格低，系统固件成熟，刷机教程众多，有HIMI可当电视盒子</td><td>没有USB3.0存储扩展不便</td></tr><tr><td><strong>黑豹X2</strong></td><td>80-120元</td><td>RK3566四核 1.8GHz</td><td>arm64</td><td>4GB+32GB eMMC</td><td>USB2.0×1, 千兆网口, TF卡槽</td><td>ACIO</td><td>CPU性能好，内存和自带存储大</td><td>没有USB3.0存储扩展不便</td></tr><tr><td><strong>网心云OEC&#x2F;OEC-Turbo</strong></td><td>60-120元</td><td>RK3566四核ARM 1.8GHz</td><td>arm64</td><td>2GB&#x2F;4GB+8GB</td><td>USB3.0×1, SATA3.0, 千兆网口</td><td>昔映+ACIO</td><td>CPU性能好，内置一个快拆2.5寸盘位，有USB3.0扩展存储性能高</td><td>CPU有锁，可刷其他系统，但刷机相对麻烦</td></tr><tr><td><strong>网心云OES&#x2F;OESplus</strong></td><td>90-180元</td><td>晶晨A311D六核ARM 2.2GHz</td><td>arm64</td><td>4GB+8GB</td><td>USB2.0×1, SATA3.0×3, 千兆网口×1，+百兆网口×1（plus）</td><td>昔映+ACIO</td><td>CPU性能极好，内置三个直插7mm厚2.5寸盘位</td><td>CPU有锁，可刷其他系统但不完美，刷机固件流出极少。</td></tr></tbody></table><hr><h2 id="选购建议与注意事项"><a href="#选购建议与注意事项" class="headerlink" title="选购建议与注意事项"></a>选购建议与注意事项</h2><p>ARM盒子刷机NAS是<strong>低成本轻量级解决方案的极致</strong>，适合技术爱好者“折腾”或明确需求简单的用户。<br>大家在选购这些ARM盒子产品的时候，也要注意以下几点：</p><ul><li>移动魔百盒类要谨慎选择，型号众多并且有些同型号但是硬件不完全一样，无法刷机，相对来说刷机系统固件也较少，最好购买已刷好系统的设备，30多也不贵，一般晶晨芯片的支持Armbian系统，海思芯片支持海纳思系统。</li><li>盒子类产品大部分都没有内置硬盘位，如果做NAS的话有存储需求，优先选择带USB3.0接口的，可以外接移动硬盘使用，否则存储不足或者USB2.0传输速度有限，影响使用体验。</li><li>网心云的边缘计算产品OEC和OES系列，目前网上流出较多，性能和硬件条件也都不错，但是这两款产品都有CPU加密，目前OEC系列产品已经都有直刷固件了，可玩性相对好一些。</li><li>OES系列产品，当前破解还不完善，没有完美的刷机固件流出，有少量也要收费，且折腾起来相当费劲，网心云自家的昔映NAS系统也还没有完成适配，不建议买空设备自己刷机。但是海鲜市场有刷好系统的卖，甚至刷上了群晖系统，不知稳定性和可用性如何，价格贵了不少约180左右。</li><li>另外OES产品，有三个内置SATA盘位，看似硬件条件诱人，但是硬盘只能装下7mm超薄2.5寸硬盘，就是2.5寸SSD那种厚度的，机械的7mm2.5寸通长用在移动硬盘上，平时不大常见。另外盘位超级紧凑，散热也是个问题，做轻NAS的话需谨慎选择。</li></ul><p>如果追求可玩性和扩展性，建议增加一些预算选择x86工控机或者小主机，市场上可选的也非常多，x86性能和可玩性比ARM要高的多，而且主要是，现在非常好用的免费国产NAS系统飞牛OS，暂时只支持x86架构。</p><p>x86系列硬件就相当繁杂了，光是各种低功耗CPU型号都看的人眼花缭乱，不过别担心，Jony最近正在做功课，下期帮大家梳理一下可装飞牛系统的<strong>低价低功耗x86设备</strong>，供大家捡垃圾参考。</p><p>另外大家如果也有便宜好用的宝藏设备，也别藏着掖着，欢迎评论区留言。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近聊NAS的话题比较多，看到还是有不少小伙伴有NAS使用需求的，看来大家都苦网盘久矣。&lt;/p&gt;
&lt;p&gt;但是品牌NAS动辄几千块的价格，还不含硬盘，着实也让不少小伙伴有点犹豫。&lt;/p&gt;
&lt;p&gt;那么其实还有一些低成本的方案，让大家花极少的成本，先弄一个轻NAS用起来，等真正了</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
    <category term="ARM" scheme="https://blog.jonylee.top/tags/ARM/"/>
    
    <category term="淘二手" scheme="https://blog.jonylee.top/tags/%E6%B7%98%E4%BA%8C%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>〇花费，不限流，不限量！三种简单方式搭配IPv6轻松外网访问家中NAS</title>
    <link href="https://blog.jonylee.top/2025/05/25/2025-05-25%20%E3%80%87%E8%8A%B1%E8%B4%B9%EF%BC%8C%E4%B8%8D%E9%99%90%E6%B5%81%EF%BC%8C%E4%B8%8D%E9%99%90%E9%87%8F%EF%BC%81%E4%B8%89%E7%A7%8D%E7%AE%80%E5%8D%95%E6%96%B9%E5%BC%8F%E6%90%AD%E9%85%8DIPv6%E8%BD%BB%E6%9D%BE%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E5%AE%B6%E4%B8%ADNAS/"/>
    <id>https://blog.jonylee.top/2025/05/25/2025-05-25%20%E3%80%87%E8%8A%B1%E8%B4%B9%EF%BC%8C%E4%B8%8D%E9%99%90%E6%B5%81%EF%BC%8C%E4%B8%8D%E9%99%90%E9%87%8F%EF%BC%81%E4%B8%89%E7%A7%8D%E7%AE%80%E5%8D%95%E6%96%B9%E5%BC%8F%E6%90%AD%E9%85%8DIPv6%E8%BD%BB%E6%9D%BE%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E5%AE%B6%E4%B8%ADNAS/</id>
    <published>2025-05-25T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>前面一篇文章讲了家庭网络如何设置公网IPv6，设置好了之后，没有公网IPv4的朋友，通过公网IPv6也可以高速不限量访问家里NAS了。</p><p>但是这种方式有两个问题，一是公网IPv6地址不固定，用一段时间它会变的；二是它地址太长，直接用IP地址访问一般人记不住。</p><p>那么如何解决这两个问题呢？</p><p>方法其实有很多。但是有的比较复杂，有的需要一定的条件</p><p>最近刚好Jony重新安装了物理飞牛，借这个机会再讲讲怎么更方便的访问家庭NAS服务。</p><h2 id="飞牛FN-Connect"><a href="#飞牛FN-Connect" class="headerlink" title="飞牛FN Connect"></a>飞牛FN Connect</h2><p>如果你也恰好用的是飞牛NAS系统，那么这太方便了，这是一个完全免费的方案，操作也最为简单。</p><p>打开飞牛的FN Connect功能，一路无脑下一步。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525162930051.png" alt="微信图片_20250525162728.png"></p><p>你将得到一个飞牛提供的域名。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525162939584.png" alt="微信图片_20250525162834.png"></p><p>在外网用浏览器输入这个域名，会先测试连接。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525163746263.jpg" alt="1748162208098.jpg"></p><p>如果访问的网络也支持IPv6网络，就会显示中继转发地址（域名）和公网IP地址（有公网v4应该也会显示）。直接点公网地址后面的箭头就可以访问飞牛主页了。是不是很方便？</p><p><img src="https://qncdn.jonylee.top/wechat/20250525163955088.png" alt="image.png"></p><p>中继转发的速度也是非常可观，4.6MB&#x2F;s看个一般分辨率的剧很轻松。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525164321490.png" alt="image.png"></p><p>IPv6直连那就更不用说了，根据宽带带宽上限，也是毫无压力。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525164409817.png" alt="微信图片_20250523133347.png"></p><p>不过还是建议有公网IP的话，尽量用公网IP直连，给飞牛中继服务器减小点压力。</p><blockquote><p><strong>说明：</strong></p><p>飞牛中继网址访问，不能带其他端口，可以网址后面加<code>v</code>或<code>p</code>访问飞牛影视或飞牛相册。</p><p>如果需要访问其他带端口应用，只能使用公网IP+端口的方式。</p></blockquote><p><img src="https://qncdn.jonylee.top/wechat/20250525172109000.png" alt="微信图片_20250525145419.png"></p><hr><h2 id="节点小宝"><a href="#节点小宝" class="headerlink" title="节点小宝"></a>节点小宝</h2><p>去年有一段时间集中看到有很多文章和评论推节点小宝，总觉得是厂家买的流量，就没去弄，这不最近写文章聊外网访问家庭NAS，又有不少朋友提到节点小宝，今天终于下载试用了一下。</p><p>就测试结果来看，暂时还是有些羊毛可以薅的，至于啥时候开始缩水割韭菜，那就要看商家了。反正作为对比，内网穿透老大哥贝锐花生壳，现在羊毛已经很难薅了。</p><p>节点小宝安装使用确实是非常友好，设置非常简单，连我老婆都会。</p><p>飞牛应用中心社区应用第一个就是它，看来它人气确实是高。查询它官网文档发现，其他主流NAS系统，也都有套件客户端。</p><p>即使是用的自制NAS系统，甚至玩客云这种arm32位处理器，只要系统支持Docker，也有对应的Docker镜像安装。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525170224868.png" alt="微信图片_20250525141856.png"></p><p>NAS设备上安装好之后，注册好账号，就会自动绑定NAS。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525170754488.png" alt="微信图片_20250525142154.png"></p><p>点击控制台登录进去，会出现一个你的设备卡片。可以点击卡片一键远程访问。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525170846994.png" alt="微信图片_20250525142342.png"></p><p>卡片底部有个成成网址，会生成专属网址，这也是一个免费提供的二级域名。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525171100628.png" alt="微信图片_20250525142608.png"></p><p>生成域名公网访问，需要实名认证，没办法，国内对互联网管理还是比较严格的。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525171221726.png" alt="微信图片_20250525142640.png"></p><p>认证过程也比较简单，不需要上传身份证正反面照片这种，直接扫码输证件号，真人验证就可以了。认证之后就可以创建专属网址，也就是一个二级域名。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525171257530.png" alt="微信图片_20250525143045.png"></p><p>外网浏览器输入这个域名，就可以访问NAS的主页服务了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525171505557.png" alt="微信图片_20250525143149.png"></p><p>这就挺方便的。</p><blockquote><p><strong>说明：</strong></p><p>节点小宝现在免费版只能创建一条穿透，飞牛里的节点小宝，默认识别绑定的是飞牛管理页面的端口，如果需要访问其他端口应用，可以通过自己修改端口号的方式，修改完用原域名访问。</p><p>但是这样就不能同时访问不同端口的应用。</p></blockquote><p><img src="https://qncdn.jonylee.top/wechat/20250525172719124.png" alt="image.png"></p><p>点击内防穿透记录后面的修改图标，修改默认端口。这里以小雅超集的5678端口为例。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525172518655.jpg" alt="1748165097557.jpg"></p><p>用原域名访问，即可访问小雅超集应用页面。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525173447298.png" alt="image.png"></p><p>另外节点小宝免费版，号称P2P直连不限速不限流，那这样也还不错了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525173822085.png" alt="微信图片_20250525152017.png"></p><p>但是我测试了半天下来，还没找到怎么个P2P直连法，我是用手机关了Wifi用移动流量测试的，两边都是公网IPv6环境。我的每月免费5G流量，倒是瞬间用掉了几百MB。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525174223173.png" alt="image.png"></p><p>可能是说用异地组网的方式才行？异地组网两边都要装客户端，便捷性就要打点折扣了，我暂时就不试了。</p><hr><h2 id="DDNS-域名"><a href="#DDNS-域名" class="headerlink" title="DDNS+域名"></a>DDNS+域名</h2><p>要说最简单，飞牛FN Connect最简单，但是并不是每个人都有飞牛，有些小伙伴在用ARM设备玩轻NAS，装不了飞牛。</p><p>要说简单和通用性并存，那首推节点小宝了。但是它不能同时访问不同端口的应用，便捷性差了些了。</p><p>那么灵活度高的另外一种方式，就是<strong>DDNS+域名</strong>访问了。</p><p>前面两种方式都是完全不花钱的方式，那么域名访问，也就暂时不说买40多块十年的顶级域名了，暂也秉着一分钱不花的方式，一样可以。<br>免费的二级域名申请可见前面文章：</p><p>把申请来的免费域名托管到Cloudflare，也不要钱。步骤这里不是重点就不讲了。</p><p>DDNS软件也有不少，甚至很多路由器都自带有DDNS功能，但是支持的DNS服务商却很少，用的比较多设置又简单的是<strong>DDNS-GO</strong>。</p><p>我这次装好飞牛，应用中心第一个就把这个DDNS-GO给装上了。这个软件是Docker方式安装，其他各种NAS系统安装也很方便。</p><p>安装之后打开设置页面，选好DNS运营商，如申请的免费域名托管在Cloudflare。点创建令牌，跳转去Cloudflare创建令牌。创建好之后将令牌Token填入下面的框内。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525180045765.png" alt="image.png"></p><p>如果没有公网IPv4，只有公网IPv6，在下面勾掉取消IPv4，勾选IPv6。点通过网卡获取IP，根据你的网卡选择下面对应的IP地址。</p><p>在Domains那里填入你想要使用的完整的三级域名（例如你申请的二级域名为：<code>test.ip-ddns.com</code>，你想用来访问飞牛的三级域名为：<code>fnos.test.ip-ddns.com</code>，则将<code>fnos.test.ip-ddns.com</code>填入）。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525180514292.png" alt="image.png"></p><p>这个DDNS-GO管理页面默认是没有密码的，当你设置了域名访问之后，别人如果知道你的域名，就可以通过域名+端口直接访问这个设置页。为了安全起见，在下面【其他】选项里，点选【禁止公网访问】后面的√，输入DDNS-GO管理页面的用户名密码。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525181234728.png" alt="image.png"></p><p>设置完之后，等待更新解析记录完成，就可以使用域名访问了。</p><hr><p>另外，之前虚拟机飞牛装的早，没发现，这次重装飞牛，发现【远程访问】里，除了FN Connect，还有个自带的DDNS，也同样支持Cloudflare。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525181756840.png" alt="微信图片_20250520174158.png"></p><p>实测了一下，功能跟DDNS-GO是一样的。如果你是飞牛系统的话，就不用再装DDNS-GO了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250525181941631.png" alt="image.png"></p><p>好了，有了这三种方式，搭配公网IPv6，基本上能满足大家日常<strong>〇花费，不限流，不限量</strong>外网访问家中NAS了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前面一篇文章讲了家庭网络如何设置公网IPv6，设置好了之后，没有公网IPv4的朋友，通过公网IPv6也可以高速不限量访问家里NAS了。&lt;/p&gt;
&lt;p&gt;但是这种方式有两个问题，一是公网IPv6地址不固定，用一段时间它会变的；二是它地址太长，直接用IP地址访问一般人记不住。&lt;/</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
    <category term="网络知识" scheme="https://blog.jonylee.top/tags/%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>公网直连家庭NAS才是真Nice！家庭网络IPv6配置指南</title>
    <link href="https://blog.jonylee.top/2025/05/24/2025-05-24%20%E5%85%AC%E7%BD%91%E7%9B%B4%E8%BF%9E%E5%AE%B6%E5%BA%ADNAS%E6%89%8D%E6%98%AF%E7%9C%9FNice%EF%BC%81%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9CIPv6%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <id>https://blog.jonylee.top/2025/05/24/2025-05-24%20%E5%85%AC%E7%BD%91%E7%9B%B4%E8%BF%9E%E5%AE%B6%E5%BA%ADNAS%E6%89%8D%E6%98%AF%E7%9C%9FNice%EF%BC%81%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9CIPv6%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</id>
    <published>2025-05-24T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>前面有写文章聊外网访问家庭NAS方案，有推荐IPv6+DDNS的方式。还有朋友不会设置IPv6，以及IPv6的适用条件。</p><p>今天再专门写一下如何配置IPv6，其实配置IPv6的教程，网上有很多，而且不同的网络环境，硬件环境，配置方法可能也不尽相同，我就拿我自己现有的网络条件来讲一下吧。</p><p>我目前是移动宽带，原本是移动光猫拨号在弱电箱，后面接的我自己的路由器，再接其他上网设备。</p><p>我在刚开始弄外网访问的时候，本来是想用IPv4的，因为毕竟IPv4应用比较广泛，其他地方只要能上网都支持IPv4连接。</p><p>天真的以为运营商分配给光猫的都是公网IP，只要想办法把内网端口映射出去，外网就能带端口访问。为此还折腾了光猫桥接，最后发现是移动大内网。</p><p>浏览器IP工具查询到的看似公网的IP地址，还不知道是隔了多少层，根本没法整。</p><p>这才转而寻求IPv6。</p><p>IPv6号称能给地球上每粒沙子都分配到IP，资源近乎无限，再加上国家也有政策要大力推IPv6，所以现在运营商IPv6都敞开供应，基本上都是支持的。</p><p>但是这里有个问题，就是IPv6和IPv4是不兼容的，也就是如果你在外网只有IPv4的环境，是不能通过IPv6访问家里网络的。</p><p>而现在IPv6还远未到普及的时候，外面公共环境，其实还是有很多地方是没有配置IPv6网络，特别是单位里面。</p><p>所以使用IPv6也是一个退而求其次的办法，如果你有公网v4的IP，那就好好珍惜吧。</p><p>IPv6配置步骤：</p><h4 id="1-检查网络是否支持IPv6"><a href="#1-检查网络是否支持IPv6" class="headerlink" title="1. 检查网络是否支持IPv6"></a>1. 检查网络是否支持IPv6</h4><p>在准备IPv6之前，先测试一下是不是支持，虽然现在大部分地方都已经支持IPv6，不排除还有些地区或环境没有这个条件，比如学校或单位宿舍，租赁公寓之类的。</p><p>测试非常简单，用手机WiFi连接你的网络，打开这个网址：<code>https://test-ipv6.com</code>，会自动进行测试。</p><p>为啥要用手机呢，因为手机都是默认开了IPv6的，电脑的话，有可能IPv6协议都没开，如果没有WiFi的话，也可以下面方法先开启Windows电脑的IPv6支持，再用电脑测试。</p><p><img src="https://qncdn.jonylee.top/wechat/20250523114045534.png" alt="微信图片_20250523113626.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250523114052463.png" alt="微信图片_20250523113707.png"></p><p>如果测试结果如上图分数10&#x2F;10，说明你整个网络已经完全开启并支持了IPv6，直接配置好设备的IPv6支持并找到地址就行。</p><p>如果显示测试分数不是10&#x2F;10，看对应的测试结果，可以继续往下配置光猫&#x2F;路由器及你的设备IPv6。还有一种情况如果测试完全通过不了，那很有可能是上述说的你上游网络不支持，那就搞不了了。</p><h4 id="2-光猫-路由器开启IPv6"><a href="#2-光猫-路由器开启IPv6" class="headerlink" title="2. 光猫&#x2F;路由器开启IPv6"></a>2. 光猫&#x2F;路由器开启IPv6</h4><p>现在很多运营商入户设备光猫或者其他猫，都直接默认开了IPv6，如果你是直接运营商光猫作为路由器用，手机连家里WiFi测试你已经有<code>240e</code>电信，<code>2048</code>联通，<code>2409</code>移动打头的IPv6地址，那么就不用再设置路由器&#x2F;光猫了。</p><p>如果测试显示支持但你没有获取到IPv6地址，那么自己去路由器后台开启一下，并开启DHCP也就是IP地址分配，一般开启自动分配就行。</p><p>如果是直接使用光猫上网并且不知道密码，可以打电话给运营商让帮忙开启IPv6就行，不给开可以工信部投诉。</p><p><img src="https://qncdn.jonylee.top/wechat/20250523115518783.png" alt="微信图片_20250523115150.png"></p><h4 id="3-配置防火墙"><a href="#3-配置防火墙" class="headerlink" title="3. 配置防火墙"></a>3. 配置防火墙</h4><p>另外找到防火墙设置，很多路由器没有单独的IPv6防火墙，以及更精细的防火墙端口控制，那只能整个关闭了。不然你会发现即使有公网IPv6了，外网还是访问不了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250523120820441.png" alt="微信图片_20250523120802.png"></p><p>但是要注意的是，整个关闭了防火墙，你家庭所有设备就直接暴露在公网。一定要做好安全工作，包括但不限于：</p><ol><li>保护自己的公网IPv6地址不要泄露；</li><li>尽量所有设备密码加强为强密码；</li><li>NAS等系统，如果自带防火墙，开启并配置好防火墙规则。如果没有，最好也安装一下防火墙程序。</li></ol><p>飞牛自带防火墙开启:</p><p><img src="https://qncdn.jonylee.top/wechat/20250523125524400.png" alt="微信图片_20250523125255.png"></p><p>玩客云Armbian系统安装宝塔面板，UFW防火墙开启。</p><p><img src="https://qncdn.jonylee.top/wechat/20250523125529498.png" alt="微信图片_20250523125454.png"></p><h4 id="4-设备开启Ipv6"><a href="#4-设备开启Ipv6" class="headerlink" title="4. 设备开启Ipv6"></a>4. 设备开启Ipv6</h4><p>配置好IPv6环境后，接下来就是将接入的设备开启IPv6。</p><p><strong>Window系统开启IPv6方法：</strong></p><p>打开【控制面板】-【网络和 Internet】-【网络连接】，找到当前网络，右键菜单并点击【属性】，勾选【Internet协议版本6（TCP&#x2F;IPv6）】，确定即可。</p><p><img src="https://qncdn.jonylee.top/wechat/20250523122057848.png" alt="微信图片_20250523121859.png"></p><p>查看是否获得公网IPv6地址，注意如果是<code>fe80</code>开头，那就是内网IPv6，不是公网，是不能外网访问的。</p><p><img src="https://qncdn.jonylee.top/wechat/20250523122501998.png" alt="微信图片_20250523122426.png"></p><p>**飞牛开启IPv6</p><p>飞牛的IPv6默认是打开的，只要网络支持会自动获取，如果没有开，可以从这里打开：【系统设置】-【网络设置】，点开网卡详情页，点右侧小三点隐藏菜单，点编辑。</p><p><img src="https://qncdn.jonylee.top/wechat/20250523123147486.png" alt="微信图片_20250523122907.png"></p><p>弹出的编辑窗口中点【IPv6选项卡】，选自动，确定即可。</p><p><img src="https://qncdn.jonylee.top/wechat/20250523123319839.png" alt="微信图片_20250523123009.png"></p><p><strong>其他NAS系统开启IPv6</strong></p><p>由于NAS系统众多，这里Jony也没有那么多设备演示，但现在大多数NAS系统其实是默认开启IPv6支持的。一般只要家庭路由上IPv6及DHCP配置好了，都能自动获取到。</p><p>另外，如果SSH或者系统是命令行界面，可以输入以下命令查看IPv6地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip -6 addr show</span><br></pre></td></tr></table></figure><p>以我的玩客云Armbian系统为例：</p><p><img src="https://qncdn.jonylee.top/wechat/20250523124853124.png" alt="微信图片_20250523115446.png"></p><p>可能会显示有多个IPv6地址，使用外网访问的话，优先选择 <strong>非临时地址</strong>（即不带 <code>temporary</code> 标志的 <code>scope global</code> 地址）。</p><p>到此，你就可以使用公网IPv6直连访问家里的网络了。</p><p>更多IPv6设置，可以参见：【IPv6 工具箱使用文档】<code>https://ipw.cn/doc/</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前面有写文章聊外网访问家庭NAS方案，有推荐IPv6+DDNS的方式。还有朋友不会设置IPv6，以及IPv6的适用条件。&lt;/p&gt;
&lt;p&gt;今天再专门写一下如何配置IPv6，其实配置IPv6的教程，网上有很多，而且不同的网络环境，硬件环境，配置方法可能也不尽相同，我就拿我自己现</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
    <category term="网络知识" scheme="https://blog.jonylee.top/tags/%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>小主机直装物理飞牛，并成功迁移跨平台虚拟机</title>
    <link href="https://blog.jonylee.top/2025/05/23/2025-05-23%20%E5%B0%8F%E4%B8%BB%E6%9C%BA%E7%9B%B4%E8%A3%85%E7%89%A9%E7%90%86%E9%A3%9E%E7%89%9B%EF%BC%8C%E5%B9%B6%E6%88%90%E5%8A%9F%E8%BF%81%E7%A7%BB%E8%B7%A8%E5%B9%B3%E5%8F%B0%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>https://blog.jonylee.top/2025/05/23/2025-05-23%20%E5%B0%8F%E4%B8%BB%E6%9C%BA%E7%9B%B4%E8%A3%85%E7%89%A9%E7%90%86%E9%A3%9E%E7%89%9B%EF%BC%8C%E5%B9%B6%E6%88%90%E5%8A%9F%E8%BF%81%E7%A7%BB%E8%B7%A8%E5%B9%B3%E5%8F%B0%E8%99%9A%E6%8B%9F%E6%9C%BA/</id>
    <published>2025-05-23T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用了两天决定放弃UNRAID了，打算直接用小主机装物理飞牛。也正好解决飞牛装虚拟机里网络变半双工的问题。</p><p>因为之前的All in one方案秉承的是每个系统各司其职，分别负责不同的功能，其中大部分web和Docker应用都是跑在Ubuntu-Server上，飞牛主要就是NAS相关的应用，重装只需要重新挂载数据盘，其他几个应用装回去倒也不麻烦。</p><p>也就不去折腾原来的虚拟飞牛系统转物理飞牛系统了，直接全新安装最新版。</p><p>加上飞牛已经支持虚拟机功能了，那么我就把原来的另外两个虚拟机，都迁移到飞牛里，这样比之前还少一个系统，资源利用应该也更优一些。</p><p>这个方案里，飞牛既是主NAS服务器，又是虚拟机底层，所以也很考验飞牛系统的稳定性。之前经过一年的试用，感觉飞牛还是很给力的。</p><h2 id="飞牛安装"><a href="#飞牛安装" class="headerlink" title="飞牛安装"></a>飞牛安装</h2><p>官网下载好安装包，用rufus写到U盘制作安装启动盘，小主机BIOS设置第一位U盘启动。具体安装过程这里就不详细写了，网上以及飞牛官网有非常详细的教程。</p><p>这次重装直接装在内置2.5寸SSD上，按推荐值给了64GB系统盘空间，我去年PVE里安装的飞牛，当时系统还给的是16GB，现在估计上了虚拟机等更多功能，推荐的更大一些了吧。</p><p>一路安装好，很丝滑没有任何报错，让人意外的是，不但鬼见愁的r8168网卡可以识别并正常驱动，就连无线网卡驱动也能正常获取IP地址，更重要的，<strong>网络终于变回全双工了</strong>。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522181225510.png" alt="微信图片_20250520174345.png"></p><p>另外为了保持外部挂载环境尽量不变，本次安装账户密码也完全按照之前的设置，这样我其他地方挂载的飞牛存储，就不用再修改了直接可以访问。</p><h2 id="存储挂载"><a href="#存储挂载" class="headerlink" title="存储挂载"></a>存储挂载</h2><p>原来的存储空间，是硬盘盒里的两块盘，加两个有坏道屏蔽的旧盘组的RAID0存储空间做下载盘，但是因为前面装UNRAID没有盘创建缓存池，就把这两个旧盘格擦掉做了缓存池。</p><h4 id="1-挂载存储空间"><a href="#1-挂载存储空间" class="headerlink" title="1. 挂载存储空间"></a>1. 挂载存储空间</h4><p>所以现在飞牛存储空间，自动识别到的只有两个。显示<code>未挂载|去挂载</code>，见下图：</p><p><img src="https://qncdn.jonylee.top/wechat/20250522181821397.png" alt="微信图片_20250520170808.png"></p><p>直接点击<code>去挂载</code>，新系统会自动挂载原来飞牛系统的存储空间。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522193733704.png" alt="微信图片_20250520171314.png"></p><h4 id="2-创建SSD缓存加速"><a href="#2-创建SSD缓存加速" class="headerlink" title="2. 创建SSD缓存加速"></a>2. 创建SSD缓存加速</h4><p>另外系统盘的SSD用了64GB，还剩下40多GB，想着也没啥大用处，干脆用来做SSD缓存加速吧，是不是会提升一些速度。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522194338453.png" alt="微信图片_20250520172125.png"></p><p>创建SSD缓存跟创建存储空间类似，也需要选存储模式。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522194453673.png" alt="微信图片_20250520172150.png"></p><p>好像只能为不同的存储空间分别创建SSD缓存，并不是共用的。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522194603862.png" alt="微信图片_20250520172407.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250522194612360.png" alt="微信图片_20250520172643.png"></p><p>等待创建好，如下图：</p><p><img src="https://qncdn.jonylee.top/wechat/20250522194745019.png" alt="微信图片_20250520172900.png"></p><p>测一下配置了SSD加速的存储空间读取速度如下：</p><p><img src="https://qncdn.jonylee.top/wechat/20250522195315519.png" alt="微信图片_20250522195241.png"></p><p>作为对比，又试了一下同一个硬盘盒里另一块直接用SMB挂载的硬盘读取：</p><p><img src="https://qncdn.jonylee.top/wechat/20250522200055783.png" alt="微信图片_20250522195900.png"></p><p>好像速度果然快了不少，加了SSD缓存的差不多能跑满千兆带宽（千兆网络传输速度125MB&#x2F;s，机械盘读取速度也差不多这个数），但是不加SSD缓存怎么才60MB&#x2F;s左右呢？</p><h2 id="迁移虚拟机"><a href="#迁移虚拟机" class="headerlink" title="迁移虚拟机"></a>迁移虚拟机</h2><p>飞牛虚拟机功能上线时间也不长，不知道兼容性和稳定性如何，本次还是跨平台迁移虚拟机，那就来考验一下吧。</p><p>先尝试将原PVE虚拟机Ubuntu-Server迁移过来。</p><h4 id="1-准备工作："><a href="#1-准备工作：" class="headerlink" title="1. 准备工作："></a>1. 准备工作：</h4><p>将原PVE虚拟机Ubuntu-Server的备份文件解包，提取raw虚拟磁盘文件，并转为飞牛虚拟机默认的qcow2格式备用。方法见上一篇文章：</p><h4 id="2-创建虚拟机："><a href="#2-创建虚拟机：" class="headerlink" title="2. 创建虚拟机："></a>2. 创建虚拟机：</h4><p>应用中心安装虚拟机应用并打开。功能不多挺简洁哈。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522202222621.png" alt="微信图片_20250520182227.png"></p><p>如果有需要直通的设备，可以先点击左侧【硬件】标签，开启IOMMU硬件直通。我暂时迁移的Ubuntu不需要直通，所以暂时没有开启。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522202345680.png" alt="微信图片_20250520182243.png"></p><p>再点击左侧【虚拟机】标签，点【创建虚拟机】，创建一个Linux虚拟机，可以看到系统只有三个选项：Windows、Linux和其他。我们选Linux，系统版本也只有一个选项。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522202926067.png" alt="微信图片_20250522202906.png"></p><p>配置虚拟机，另外要准备一个ISO系统镜像文件，随便就行也不需要用它，主要是不选没法进下一步，另外需要注意GPU类型需要选择<code>vga</code>。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522203620845.png" alt="微信图片_20250522203533.png"></p><p>下一步创建磁盘空间，要根据原来虚拟机的虚拟磁盘类型选择对应的，我原来Ubuntu是SCSI，这里选第二个<code>VirtIO SCSI</code>，选存储空间，容量选择和原来一致。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522204427892.png" alt="微信图片_20250522204245.png"></p><p>配置网卡，选择网卡的网口，网络类型选VirtlO，MAC地址可以随机，我这里填入原Ubuntu系统的Mac，以保证到时候分配的IP地址和原来系统一致。</p><p>原来的Ubuntu虚拟机系统Mac地址如果没有记，可以到路由器后台离线设备那里查看。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522204811812.png" alt="微信图片_20250522204729.png"></p><h4 id="3-替换虚拟磁盘文件："><a href="#3-替换虚拟磁盘文件：" class="headerlink" title="3. 替换虚拟磁盘文件："></a>3. 替换虚拟磁盘文件：</h4><p>创建好了虚拟机先不要开机装系统，到文件管理器，打开左下角【管理员视角】</p><p><img src="https://qncdn.jonylee.top/wechat/20250522210211228.png" alt="微信图片_20250522210050.png"></p><p>在创建虚拟机的存储空间下面找到<code>vm/pool</code>下面的一个100多kb的长数字文件，复制文件名备用。（我当时没截图，有些图是写文时重新做了一个虚拟机演示，请忽略图中已迁移好的虚拟机）</p><p><img src="https://qncdn.jonylee.top/wechat/20250522210218540.png" alt="微信图片_20250522210148.png"></p><p>将之前第一步转换成qcow2格式的原Ubuntu虚拟机虚拟磁盘文件，重命名为上图文件的长名称，不需要后缀。然后复制并覆盖上图文件夹文件。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522210843397.png" alt="微信图片_20250522210738.png"></p><p>OK，可以去启动虚拟机了。原来的服务和应用都正常。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522215621938.png" alt="微信图片_20250522215449.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250522215727549.png" alt="微信图片_20250522215706.png"></p><h2 id="填坑"><a href="#填坑" class="headerlink" title="填坑"></a>填坑</h2><h4 id="坑一：创建Linux虚拟机之后开机卡在启动命令行界面"><a href="#坑一：创建Linux虚拟机之后开机卡在启动命令行界面" class="headerlink" title="坑一：创建Linux虚拟机之后开机卡在启动命令行界面"></a>坑一：创建Linux虚拟机之后开机卡在启动命令行界面</h4><p>创建Linux虚拟机时GPU类型需要选择<code>vga</code>而不是默认的<code>vmvga</code>，否则后面会卡在命令行界面无法启动。</p><h4 id="坑二：创建虚拟机需要先开启网卡OVS"><a href="#坑二：创建虚拟机需要先开启网卡OVS" class="headerlink" title="坑二：创建虚拟机需要先开启网卡OVS"></a>坑二：创建虚拟机需要先开启网卡OVS</h4><p>创建虚拟机配置网络这一步有个坑，当你选择网口时，会发现网口无法选择，这是因为没有开网卡OVS，要返回到系统设置，网卡那里开启之后才能获取网口。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522220427270.png" alt="微信图片_20250522220414.png"></p><h4 id="坑三：飞牛网卡开启OVS后IP丢失"><a href="#坑三：飞牛网卡开启OVS后IP丢失" class="headerlink" title="坑三：飞牛网卡开启OVS后IP丢失"></a>坑三：飞牛网卡开启OVS后IP丢失</h4><p>在坑二打开网卡OVS后，可能你会丢失IP，这是系统bug，解决方法飞牛官方论坛有，相信很快官方会修复。</p><p>我因为小主机还有一个无线网卡，飞牛识别并连上了，所以我用无线网络ip可以进飞牛界面，将开启了OVS的网卡改手动设置IPv4，也可以。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522222215284.png" alt="微信图片_20250522222157.png"></p><h4 id="坑四：迁移过来的虚拟机获取不到IP地址"><a href="#坑四：迁移过来的虚拟机获取不到IP地址" class="headerlink" title="坑四：迁移过来的虚拟机获取不到IP地址"></a>坑四：迁移过来的虚拟机获取不到IP地址</h4><p>没有意外的话，当你第一次启动Ubuntu系统时，将获取不到网址，因为原系统的网卡配置与现在环境的必然不一致，需要修改网卡名称。改好之后重新启动一下就可以了。</p><p>解决方法为：使用netplan配置，通过编辑<code>/etc/netplan</code>目录下的YAML配置文件来修改网卡名称为飞牛开启了OVS之后的网卡名称。</p><p>命令操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -a /etc/netplan/ <span class="comment"># 查看配置文件名</span></span><br><span class="line">.  ..  50-cloud-init.yaml <span class="comment"># 返回的结果</span></span><br><span class="line"><span class="built_in">sudo</span> nano /etc/netplan/50-cloud-init.yaml <span class="comment"># 用nano编辑配置文件</span></span><br></pre></td></tr></table></figure><p>nano文本编辑界面里修改网络名称见下图。修改完之后按<code>ctrl+x</code>退出，会提示保存，输入<code>Y</code>，回车退出nano编辑。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522221228309.png" alt="微信图片_20250521082029.png"></p><p>最后应用修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> netplan apply</span><br></pre></td></tr></table></figure><p>这样迁移过来的网络就正常了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用了两天决定放弃UNRAID了，打算直接用小主机装物理飞牛。也正好解决飞牛装虚拟机里网络变半双工的问题。&lt;/p&gt;
&lt;p&gt;因为之前的All in one方案秉承的是每个系统各司其职，分别负责不同的功能，其中大部分web和Docker应用都是跑在Ubuntu-Server上，</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
    <category term="虚拟机" scheme="https://blog.jonylee.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="N100" scheme="https://blog.jonylee.top/tags/N100/"/>
    
    <category term="飞牛OS" scheme="https://blog.jonylee.top/tags/%E9%A3%9E%E7%89%9BOS/"/>
    
  </entry>
  
  <entry>
    <title>48小时UNRAID从入门到弃坑，算了我还是直接物理飞牛吧</title>
    <link href="https://blog.jonylee.top/2025/05/22/2025-05-22%2048%E5%B0%8F%E6%97%B6UNRAID%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91%EF%BC%8C%E7%AE%97%E4%BA%86%E6%88%91%E8%BF%98%E6%98%AF%E7%9B%B4%E6%8E%A5%E7%89%A9%E7%90%86%E9%A3%9E%E7%89%9B%E5%90%A7/"/>
    <id>https://blog.jonylee.top/2025/05/22/2025-05-22%2048%E5%B0%8F%E6%97%B6UNRAID%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91%EF%BC%8C%E7%AE%97%E4%BA%86%E6%88%91%E8%BF%98%E6%98%AF%E7%9B%B4%E6%8E%A5%E7%89%A9%E7%90%86%E9%A3%9E%E7%89%9B%E5%90%A7/</id>
    <published>2025-05-22T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本来准备趁换系统盘的这个机会，体验一下UNRAID系统呢，当时手动替换好预编译网卡驱动之后，直接在GUI界面里设置网址并刷新，就可以正常用了，也启用了Docker和虚拟机，打算把原来PVE的三个虚拟机迁移过来，结果只体验了一天，就决定放弃了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250521183442517.png" alt="微信图片_20250520162921.png"></p><p>原因呢？主要有硬件和系统两方面的原因：</p><p><strong>硬件方面：</strong></p><p>我是小主机内置一个m.2+2.5寸SSD，加USB外置五盘位硬盘盒的硬件组合，m.2系统盘拆掉寄去换了，内置2.5寸SSD只有120G，空间不够我放之前的两个虚拟机磁盘。</p><p>当我把原来PVE的两个虚拟机虚拟磁盘文件转出来，放到硬盘盒带的外置硬盘中用UNRAID启动虚拟机之后，发现迁移过来的UNRAID飞牛虚拟机，不能单个直通硬盘盒里的原飞牛存储空间所在的硬盘，只能直通USB设备也就是整个硬盘盒，那原来的飞牛存储就没法挂载了。</p><p><strong>软件方面：</strong></p><p>原来在PVE里虚拟机安装的飞牛，最早是全双工网络，不知道什么版本开始，它网络变成半双工了，我家里局域网设备都是千兆组网，上限本来也不高，变成半双工传输速度直接对半砍，上传下载变成50-60mb&#x2F;s了，飞牛论坛上有不少人反馈，但是官方回复这个优先级比较低，建议物理机安装。看来一时半会儿是不打算修复了。那么我迁移到UNRAID上还是虚拟机，不还是半双工么？</p><p><img src="https://qncdn.jonylee.top/wechat/20250522160456520.png" alt="image.png"></p><p>所以我重新梳理了一下我的需求，觉得NAS速度还是最优先的，因为我家里电脑盘位也不多，电脑工作文件也是直接映射的NAS存储磁盘。另外飞牛现在也有虚拟机功能，我可以把原来的Ubuntu-server虚拟机，迁移到飞牛里去。</p><p>至于LebreELEC，我平时其实用的也不多，还因为占了我N100核显直通，导致飞牛没法用核显跑AI相册识别，后面真需要，也可以迁移到飞牛里去，按需启动再直通显卡。</p><p>那么UNRAID体验就暂时到这吧，哈哈，其实还没摸透，不过因为系统在U盘上，插哪儿都能启动，打算在台式机上用VMware虚拟一个，有空的时候再研究学习。</p><hr><h2 id="装UNRAID的收获"><a href="#装UNRAID的收获" class="headerlink" title="装UNRAID的收获"></a>装UNRAID的收获</h2><p>在安装UNRAID做虚拟机跨平台迁移过程中，踩过一些坑，也Get到一点点方法技巧，这里做个分享，给有类似硬件环境的朋友做下参考。</p><h4 id="技巧一：PVE虚拟机备份文件提取虚拟磁盘"><a href="#技巧一：PVE虚拟机备份文件提取虚拟磁盘" class="headerlink" title="技巧一：PVE虚拟机备份文件提取虚拟磁盘"></a>技巧一：PVE虚拟机备份文件提取虚拟磁盘</h4><p>当时在用PVE给虚拟机做备份的时候，有三种压缩格式选择，后缀分别是<code>.vma</code>、<code>.lzo</code>、<code>.zst</code>，其中<code>.vma</code>格式可以使用vma解包工具对其进行解包，并提取虚拟磁盘文件。</p><p>步骤为：</p><ol><li>将PVE的<code>.vma</code>备份文件拷出，默认备份文件以日期等命名很长，重命名短一些，例如<code>fn-102.vma</code>。</li><li>电脑安装Python3，可以直接通过微软应用商店搜索安装。</li><li>下载解包脚本<a href="https://github.com/jancc/vma-extractor/blob/master/vma.py">vma.py</a>，放到PVE备份文件夹。</li><li>在该文件夹下运行cmd，输入：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式为 python vma.py [vma文件路径] [目标文件夹路径]</span></span><br><span class="line"><span class="comment"># 示例：</span></span><br><span class="line">python vma.py E:\PVE-UNRAID\fn-<span class="number">102.</span>vma E:\PVE-UNRAID\fn102</span><br></pre></td></tr></table></figure><p>等待解包完成，如果文件比较大，可能需要时间比较久。如果输入命令行后，光标在下一行跳闪，没有其他输出，就是还在运行，不要关闭cmd窗口，等它完成。或者可以进任务管理器看一下是不是有Python.exe程序在运行。结束了会再跳出一行当前运行路径，如下图：</p><p><img src="https://qncdn.jonylee.top/wechat/20250522161221409.png" alt="微信图片_20250522151405.png"></p><p>完成之后生成新文件夹里，会有该虚拟机的虚拟磁盘文件和一个虚拟机的配置文件如下。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522142801580.png" alt="微信图片_20250522142614.png"></p><p>其中没有后缀名的，就是虚拟磁盘文件，原来的虚拟机创建了几个虚拟磁盘，就有几个这样的文件，原来的数据就都在里面了，该虚拟磁盘是raw格式。</p><p>如果是迁移到UNRAID虚拟机，直接把这磁盘文件拷到UNRAID默认创建的<code>isos</code>文件夹，加上后缀名<code>.img</code>，然后创建虚拟机磁盘的时候选择手动加载，然后选择这些文件，设置好启动顺序就可以了。</p><hr><h4 id="技巧二：虚拟机磁盘格式互转"><a href="#技巧二：虚拟机磁盘格式互转" class="headerlink" title="技巧二：虚拟机磁盘格式互转"></a>技巧二：虚拟机磁盘格式互转</h4><p>不同的虚拟机系统支持的虚拟磁盘格式也不一样，如VMware常用的是<code>vmdk</code>格式，而PVE常用的是<code>qcow2</code>，UNRAID是<code>raw</code>、<code>qcow2</code>，飞牛使用的是<code>qcow2</code>格式。</p><p>我们可以使用转换工具【qemu-img】，将这些虚拟磁盘进行格式互转，然后无损迁移到不同的虚拟机平台上。现在的新的Linux操作系统一般都自带有这个工具，Windows的话可以下载安装一下。</p><p>步骤为：</p><ol><li>以Windows操作为例，下载虚拟磁盘转换工具<a href="https://cloudbase.it/qemu-img-windows/">qemu-img for WIndows</a>。</li><li>将下载的压缩包解压，把里面的所有文件拷到<code>C:\Windows\System32</code>里。</li></ol><p><img src="https://qncdn.jonylee.top/wechat/20250522145729997.png" alt="微信图片_20250522144925.png"></p><ol start="3"><li>可以试试前面解包的PVE虚拟机磁盘文件:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img info E:\PVE-UNRAID\fn102\drive-sata0  <span class="comment"># 显示格式、容量等信息</span></span><br></pre></td></tr></table></figure><p>得到结果如下：</p><p><img src="https://qncdn.jonylee.top/wechat/20250522145750321.png" alt="微信图片_20250522145657.png"></p><ol start="4"><li>如果需要将raw格式转换为qcow2格式，参考命令如下：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img convert -f raw -O qcow2 drive-scsi0.img drive-scsi0.qcow2</span><br></pre></td></tr></table></figure><p>以上操作最好进到文件所在目录操作，这样就不需要输入绝对路径了，只输入文件名就行。</p><hr><h2 id="装UNRAID踩的坑"><a href="#装UNRAID踩的坑" class="headerlink" title="装UNRAID踩的坑"></a>装UNRAID踩的坑</h2><h4 id="坑一："><a href="#坑一：" class="headerlink" title="坑一："></a>坑一：</h4><p>还是这鬼见愁的r8168网卡，每次重启之后，驱动文件默认都无法固定加载r8168驱动，得手动重新加载。</p><p>要是这就没法正常用啊，必须得解决它。偶然发现URAID系统U盘文件的<code>config</code>文件夹下，有个<code>go</code>文件，这个文件夹都是存储的系统配置文件，隐约感觉这个go文件大有用处，网上搜了一下，果然，这是UNRAID的启动脚本文件，也就是系统启动时会加载的命令。</p><p>那我能不能把手动替换网卡驱动的命令，写到这里，让系统在启动的时候加载呢。输进去保存，启动，怎么还是<code>Device “eth0” dose not exist</code>，别慌好像还没执行完。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522152617696.jpg" alt="a7694c574a57a487c53f91b13b560a5.jpg"></p><p>继续，看到执行我输入的启动脚本命令了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522152852232.jpg" alt="2052aed7276220cf28aef11ce7d7e5a.jpg"></p><p>呃，没有获取到IP地址。好在我进的是带GUI的界面，进去网络设置一看，网卡识别出来了，但是没有获取到ip地址，手动更新，ok可以获取到了，估计是换了驱动之后没有重新执行DHCP，那还是把它也加到启动脚本里吧。经测试，用启动脚本可以顺利获取ip了，<strong>这个r8111&#x2F;8168网卡，大家玩NAS一定要绕着走</strong>，唉。</p><p>最后的启动脚本如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Start the Management Utility</span></span><br><span class="line">/usr/local/sbin/emhttp</span><br><span class="line"><span class="built_in">cp</span> r8169.ko.xz r8169.ko.xz.bak</span><br><span class="line"><span class="built_in">cp</span> 8139too.ko.xz 8139too.ko.xz.bak</span><br><span class="line"><span class="built_in">rm</span> 8139too.ko.xz r8169.ko.xz</span><br><span class="line"><span class="built_in">cp</span> /boot/extra/r8168.ko.xz /lib/modules/$(<span class="built_in">uname</span> -r)/kernel/drivers/net/ethernet/realtek</span><br><span class="line"><span class="built_in">chmod</span> 644 /lib/modules/$(<span class="built_in">uname</span> -r)/kernel/drivers/net/ethernet/realtek/r8168.ko.xz</span><br><span class="line">depmod -a</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;blacklist r8169&quot;</span> &gt; /etc/modprobe.d/blacklist-r8169.conf</span><br><span class="line">rmmod r8169 2&gt;/dev/null</span><br><span class="line">modprobe r8168</span><br><span class="line">dhcpcd eth0</span><br></pre></td></tr></table></figure><h4 id="坑二："><a href="#坑二：" class="headerlink" title="坑二："></a>坑二：</h4><p>PVE里的虚拟机备份提取到的raw格式虚拟磁盘，默认没有后缀名，不加后缀或者加<code>.raw</code>后缀之后，拷到UNRAID里创建虚拟机，手动选择硬盘无法识别到文件。</p><p>需要将文件名加<code>.img</code>后缀，才能识别到。</p><h4 id="坑三："><a href="#坑三：" class="headerlink" title="坑三："></a>坑三：</h4><p>飞牛虚拟机创建好之后，引导不了没法启动。显示如下。（shell后面是我按网上方法尝试输入fs0修改启动设置没成功）</p><p><img src="https://qncdn.jonylee.top/wechat/20250521184503000.png" alt="微信图片_20250520164436.png"></p><p>最后排查，问题出在引导格式上，飞牛需要选择<code>SeaBIOS</code>，而不是默认的<code>OVMF</code>。修改后就可以正常启动了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250522155208574.png" alt="image.png"></p><p>但是前面也说了，因为我是硬盘盒个USB3.2接口带的所有盘，UNRAID里虚拟机好像没法单独直通其中的几块数据盘，所以这条路还是算了吧。</p><p>刚也看到有网友在我前面All in one的文章留言建议直接物理飞牛，听人劝吃饱饭，马上开干。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本来准备趁换系统盘的这个机会，体验一下UNRAID系统呢，当时手动替换好预编译网卡驱动之后，直接在GUI界面里设置网址并刷新，就可以正常用了，也启用了Docker和虚拟机，打算把原来PVE的三个虚拟机迁移过来，结果只体验了一天，就决定放弃了。&lt;/p&gt;
&lt;p&gt;&lt;img src</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
    <category term="UNRAID" scheme="https://blog.jonylee.top/tags/UNRAID/"/>
    
  </entry>
  
  <entry>
    <title>都说UNRAID虚拟机系统好用，N100小主机安装UNRAID尝个鲜</title>
    <link href="https://blog.jonylee.top/2025/05/21/2025-05-21%20%E9%83%BD%E8%AF%B4UNRAID%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%A5%BD%E7%94%A8%EF%BC%8CN100%E5%B0%8F%E4%B8%BB%E6%9C%BA%E5%AE%89%E8%A3%85UNRAID%E5%B0%9D%E4%B8%AA%E9%B2%9C/"/>
    <id>https://blog.jonylee.top/2025/05/21/2025-05-21%20%E9%83%BD%E8%AF%B4UNRAID%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%A5%BD%E7%94%A8%EF%BC%8CN100%E5%B0%8F%E4%B8%BB%E6%9C%BA%E5%AE%89%E8%A3%85UNRAID%E5%B0%9D%E4%B8%AA%E9%B2%9C/</id>
    <published>2025-05-21T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>上几周说过发现我的All in one小主机固态硬盘出了0E故障报警，查了一下这个报警还挺严重，需要换盘。</p><p>系统备份迁移工作量不小，但这段时间一直忙于注册考试，没时间搞，现在考完了，开干。</p><p>就是这个凌态256G的m.2固态，联系商家客服，让拆机重装试试，好吧，拆了擦金手指再装好，问题依旧，截图给他，给地址寄回更换。</p><p><img src="https://qncdn.jonylee.top/wechat/20250521093738022.png" alt="微信图片_20250521093214.png"></p><p>在寄回之前，硬盘上的数据要清空，这个系统盘装的PVE系统带了三个虚拟机，组成了我的All in one所有家当，其中一个飞牛一个ubuntu server都是我这段时间折腾的重要成果。</p><p>之前也对PVE底层和每个虚拟机进行了详细的数据备份。但是我还是不放心。我想了想，决定先装好替代系统，恢复一下看看，没问题再擦除固态盘的数据。</p><p>小主机除了这个固态系统盘，还有一个2.5存SSD，之前是作为飞牛应用数据存储空间的，另外还有一个五盘位硬盘盒带了5块机械硬盘，做的飞牛NAS存储。</p><p>为了不破坏现有的硬盘数据结构，我想到了<strong>UNRAID系统</strong>。</p><p>这是一个装在U盘上的虚拟机系统，和PVE，EXsi一起，被称为NAS玩家虚拟机三剑客。</p><p>我当时All in one底层系统没选它，一个重要原因就是它是装在U盘上运行的，我总觉得底层系统这样重要的东西，用U盘外挂的方式运行不太稳当。</p><p>然而这个时候这却成了它的亮点，我不需要破坏其他硬盘数据，直接U盘安装，不就可以挂载我原来的数据了吗？</p><p>好，开始找系统，UNRAID是一个付费系统，我在确定它好用之前，还不打算付费，我决定先安装开心版。</p><p>发现很多人说网上流传的开心版被内置了挖矿程序，大家在玩NAS刷机下载安装这些自制系统的时候，也要多注意，尽量选择靠谱的来源，另外系统装好运行过程中，也要注意检测系统负载，避免给人当矿机。</p><p>我最后选择了Tank的Unraid7.0.0开心版，有网站有淘宝店铺，声称没有马，且信他一次吧。</p><p><img src="https://qncdn.jonylee.top/wechat/20250521100754666.png" alt="微信图片_20250521100629.png"></p><h2 id="UNRAID准备和安装"><a href="#UNRAID准备和安装" class="headerlink" title="UNRAID准备和安装"></a>UNRAID准备和安装</h2><p>网站提供了很多个版本，有的是原版只开心未集成其他东西的，有的是有中文和常用插件集成的，我下了好几个版本，都试了下，最后装的7.0.0开心无集成的版本，毕竟自己动手才能了解更多，也才更有乐趣嘛。</p><p>Tank提供的Unraid包，安装非常方便，准备一个1个好点的闲置U盘，杂牌的可能没有GUID。插入电脑，执行快速格式化，格式化为<code>FAT32</code>格式，卷标名称写<code>UNRAID</code>。</p><p><img src="https://qncdn.jonylee.top/wechat/20250521103731695.png" alt="微信图片_20250521103642.png"></p><p>然后解压下载的压缩包。</p><p><img src="https://qncdn.jonylee.top/wechat/20250521102156689.png" alt="微信图片_20250521101857.png"></p><p>右键管理员运行<code>UnraidTool.exe</code>，确认一下识别的盘符是你要装系统的U盘，Flash GUID那里，如果有多行，删掉后面全是0000的哪些，保留最上面一行。点【2.注册KEY】。</p><p><img src="https://qncdn.jonylee.top/wechat/20250521102428238.png" alt="微信图片_20250521102414.png"></p><p>有个确认框，点确定，然后提示在<code>/config</code>文件夹下生成了一个<code>BTRS.key</code>，去确认一下，这就是开心文件，有的话就OK了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250521103358189.png" alt="微信图片_20250521103347.png"></p><p>把所有文件复制到U盘（那几个快捷方式链接文件可以不拷），插到小主机上，开机狂按小键盘<code>Del</code>进入BIOS，设置第一启动顺序为U盘保存退出，启动系统。</p><p>启动界面有几个选项，第一次启动，估计有不少需要初始化设置的内容，手快选带GUI也就是可视化界面的。毕竟比命令行方便直观也好操作一些。由于我是物理机安装，无法截屏，这里就不展示启动界面了。</p><hr><h2 id="Rtl8111-8168网卡驱动"><a href="#Rtl8111-8168网卡驱动" class="headerlink" title="Rtl8111&#x2F;8168网卡驱动"></a>Rtl8111&#x2F;8168网卡驱动</h2><p>进去系统过程中，看到有滚动命令行显示<code>device“eth0” dose not exist</code>，顿感大事不妙，果然不出意外，<strong>鬼见愁的螃蟹Rtl8111&#x2F;8168古董级网卡</strong>获取不到网址，网卡不识别。</p><p>输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -a /lib/modules/$(uname -r)/kernel/drivers/net/ethernet/realtek</span><br></pre></td></tr></table></figure><p>列出系统驱动文件，发现是这两个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8139too.ko.xz  r8169.ko.xz</span><br></pre></td></tr></table></figure><p>果然没有r8168驱动。</p><p>之前装PVE就是这个网卡驱动折腾了好久。因为连不了网，连最简单的编译驱动都做不到，尝试RealTek官网下载驱动包，手动编译，但是原始系统环境不是缺这就是缺那，只能找系统对应版本编译好的驱动用U盘拷过来替换。</p><p>幸好网上有热心的人一直在跟踪UNRAID版本编译这些老旧网卡驱动，地址贴上：</p><p><a href="https://github.com/jinlife/unraid-r8125-r8152-driver/releases">Releases · jinlife&#x2F;unraid-r8125-r8152-driver</a></p><p>有同样需求的可以去看看，这里有个坑需要注意：<strong>一定要下载和当前UNRAID内核对应的网卡驱动</strong>，我原本装的UNRAID6.12.13开心版，就去下的Releases对应的6.12.13-unraid，结果还是一直装不上，以至于我怀疑是系统包有问题，才又下的UNRAID7.0.0开心版。</p><p>以下是手动安装预编译的 <code>r8168.ko.xz</code> 驱动文件的详细步骤：</p><hr><h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a><strong>1. 准备工作</strong></h3><h4 id="1-确认驱动兼容性"><a href="#1-确认驱动兼容性" class="headerlink" title="(1) 确认驱动兼容性"></a><strong>(1) 确认驱动兼容性</strong></h4><ul><li>检查预编译的 <code>r8168.ko.xz</code> 文件是否与当前 Unraid 内核版本完全匹配。  </li><li>在 Unraid 终端输入以下命令查看内核版本：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> -r</span><br></pre></td></tr></table></figure><p>  我这个UNRAID7.0.0开心版内核对应的是：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6.6.68-Unraid</span><br></pre></td></tr></table></figure><ul><li>根据这个版本下载对应的编译好的驱动。</li></ul><p><img src="https://qncdn.jonylee.top/wechat/20250521110422450.png" alt="微信图片_20250521110252.png"></p><p>下载之后解压，在解压的文件夹<code>lib\modules\6.6.68-Unraid\kernel\drivers\net\ethernet\realtek</code>路径下有一个<code>r8168.ko.xz</code>文件，就是编译好的对应版本的驱动了。</p><h4 id="2-将驱动文件传输到-Unraid"><a href="#2-将驱动文件传输到-Unraid" class="headerlink" title="(2) 将驱动文件传输到 Unraid"></a><strong>(2) 将驱动文件传输到 Unraid</strong></h4><ul><li>将下载的 <code>r8168.ko</code> 文件通过 U 盘拷贝到 Unraid 的 <code>/boot/extra</code> 目录（据说重启时系统可以从这里加载驱动，并且拷到系统U盘之后，后面重启有问题就不再需要一直另外挂载u盘拷了）。  </li><li>U盘挂载前面发文章讲过，这里就不再讲了，拷贝示例操作：</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /boot/extra</span><br><span class="line"><span class="built_in">cp</span> /path/to/r8168.ko.xz /boot/extra/</span><br></pre></td></tr></table></figure><p>其中<code>/path/to</code>改成挂载后的U盘存放驱动文件的路径。</p><hr><h3 id="2-替换驱动文件"><a href="#2-替换驱动文件" class="headerlink" title="2. 替换驱动文件"></a><strong>2. 替换驱动文件</strong></h3><h4 id="1-备份旧驱动（可选但强烈建议）"><a href="#1-备份旧驱动（可选但强烈建议）" class="headerlink" title="(1) 备份旧驱动（可选但强烈建议）"></a><strong>(1) 备份旧驱动（可选但强烈建议）</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入内核驱动目录（路径中的内核版本需替换为你的实际版本）</span></span><br><span class="line"><span class="built_in">cd</span> /lib/modules/$(<span class="built_in">uname</span> -r)/kernel/drivers/net/ethernet/realtek</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份原有驱动</span></span><br><span class="line"><span class="built_in">cp</span> r8169.ko.xz r8169.ko.xz.bak</span><br><span class="line"><span class="built_in">cp</span> 8139too.ko.xz 8139too.ko.xz.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除原有驱动</span></span><br><span class="line"><span class="built_in">rm</span> 8139too.ko.xz r8169.ko.xz</span><br></pre></td></tr></table></figure><h4 id="2-替换为新驱动"><a href="#2-替换为新驱动" class="headerlink" title="(2) 替换为新驱动"></a><strong>(2) 替换为新驱动</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将预编译的驱动复制到目标目录</span></span><br><span class="line"><span class="built_in">cp</span> /boot/r8168.ko.xz /lib/modules/$(<span class="built_in">uname</span> -r)/kernel/drivers/net/ethernet/realtek</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修复文件权限（确保驱动可被加载）</span></span><br><span class="line"><span class="built_in">chmod</span> 644 /lib/modules/$(<span class="built_in">uname</span> -r)/kernel/drivers/net/r8168.ko.xz</span><br></pre></td></tr></table></figure><hr><h3 id="3-更新驱动配置"><a href="#3-更新驱动配置" class="headerlink" title="3. 更新驱动配置"></a><strong>3. 更新驱动配置</strong></h3><h4 id="1-更新内核模块依赖"><a href="#1-更新内核模块依赖" class="headerlink" title="(1) 更新内核模块依赖"></a><strong>(1) 更新内核模块依赖</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">depmod -a  <span class="comment"># 重新生成模块依赖关系</span></span><br></pre></td></tr></table></figure><h4 id="2-禁用旧驱动（如果存在冲突）"><a href="#2-禁用旧驱动（如果存在冲突）" class="headerlink" title="(2) 禁用旧驱动（如果存在冲突）"></a><strong>(2) 禁用旧驱动（如果存在冲突）</strong></h4><ul><li>如果系统默认使用 <code>r8169</code> 驱动，需要将其加入黑名单：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;blacklist r8169&quot;</span> &gt; /etc/modprobe.d/blacklist-r8169.conf</span><br></pre></td></tr></table></figure><h4 id="3-加载新驱动"><a href="#3-加载新驱动" class="headerlink" title="(3) 加载新驱动"></a><strong>(3) 加载新驱动</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载旧驱动（如果已加载）</span></span><br><span class="line">rmmod r8169 2&gt;/dev/null  <span class="comment"># 忽略未加载时的错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载新驱动</span></span><br><span class="line">modprobe r8168</span><br></pre></td></tr></table></figure><hr><h3 id="4-验证驱动状态"><a href="#4-验证驱动状态" class="headerlink" title="4. 验证驱动状态"></a><strong>4. 验证驱动状态</strong></h3><h4 id="1-检查驱动是否加载"><a href="#1-检查驱动是否加载" class="headerlink" title="(1) 检查驱动是否加载"></a><strong>(1) 检查驱动是否加载</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep r8168  <span class="comment"># 应显示类似 &quot;r8168 123456 0&quot;</span></span><br></pre></td></tr></table></figure><h4 id="2-查看网卡是否识别"><a href="#2-查看网卡是否识别" class="headerlink" title="(2) 查看网卡是否识别"></a><strong>(2) 查看网卡是否识别</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span> show  <span class="comment"># 检查是否有 eth0 或其他网络接口（如 enp0s3）</span></span><br><span class="line">dmesg | grep r8168  <span class="comment"># 查看内核日志中的驱动加载信息</span></span><br></pre></td></tr></table></figure><hr><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p>以上操作如果没有问题，网卡驱动就正常了，在GUI界面<code>SETTINGS-NETWORK</code>里，可以看到网卡Mac地址，手动选择一下IPv4+IPv6，下面更新一下，就能获取到网址了，可以上网就方便了，可以在另外电脑上登录WebUI界面了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250521130851698.png" alt="微信图片_20250521130455.png"></p><p>登入成功，进入【APP】，添加中文界面语言支持，转成中文就好认多啦。看起来还不错。</p><p><img src="https://qncdn.jonylee.top/wechat/20250521131005321.png" alt="微信图片_20250521130952.png"></p><p>后面尝试在UNRAID里挂载PVE虚拟机备份文件。如果能行的话，就把之前PVE的All in one 三个虚拟机平移过来，这段时间就来体验一下UNRAID，看看和PVE比哪个更好用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上几周说过发现我的All in one小主机固态硬盘出了0E故障报警，查了一下这个报警还挺严重，需要换盘。&lt;/p&gt;
&lt;p&gt;系统备份迁移工作量不小，但这段时间一直忙于注册考试，没时间搞，现在考完了，开干。&lt;/p&gt;
&lt;p&gt;就是这个凌态256G的m.2固态，联系商家客服，让拆机重</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
    <category term="UNRAID" scheme="https://blog.jonylee.top/tags/UNRAID/"/>
    
    <category term="虚拟机" scheme="https://blog.jonylee.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="N100" scheme="https://blog.jonylee.top/tags/N100/"/>
    
  </entry>
  
  <entry>
    <title>为了玩NAS，你真的打算申请一个免费域名吗？</title>
    <link href="https://blog.jonylee.top/2025/05/19/2025-05-19%20%E4%B8%BA%E4%BA%86%E7%8E%A9NAS%EF%BC%8C%E4%BD%A0%E7%9C%9F%E7%9A%84%E6%89%93%E7%AE%97%E7%94%B3%E8%AF%B7%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%90%97%EF%BC%9F/"/>
    <id>https://blog.jonylee.top/2025/05/19/2025-05-19%20%E4%B8%BA%E4%BA%86%E7%8E%A9NAS%EF%BC%8C%E4%BD%A0%E7%9C%9F%E7%9A%84%E6%89%93%E7%AE%97%E7%94%B3%E8%AF%B7%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%90%97%EF%BC%9F/</id>
    <published>2025-05-19T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>说起域名，很多人会觉得这个东西挺遥远的。</p><p>以前PC互联网时代，大家和域名打交道比较多，每个那个年代的人，脑子里都会记得不少常上的网站域名。</p><p>但是，自从移动互联网普及之后，网站和域名不再重要了，大家手机上几个主要的app+小程序，能提供大部分网络信息入口。PC互联网逐渐没落，站长少了，域名对大众来说，也不那么重要了。</p><h2 id="最初的需求"><a href="#最初的需求" class="headerlink" title="最初的需求"></a>最初的需求</h2><p><strong>但是现在随着家用NAS的兴起，域名又以一种非主流的方式，重新派上了用场。</strong></p><p>大家希望能够在外网访问NAS搭建的各种服务，又不满足于成品NAS厂商的低速中继，想要实现自由方便的访问，域名反代+内网穿透就是一个很好的组合了。</p><p>像前面文章里提到的不用花钱用公网ipv6满带宽访问NAS的方案，如果只是用IP地址+端口的方式访问，它网址格式大概是这样的：<br><code>http://[FC00:0000:130F:0000:0000:09C0:876A:130B]:9000</code></p><p>这你能记得住吗？反正我是记不住。</p><p><strong>那么需求就来了，你得考虑弄个域名吧？</strong></p><p>用个域名解析一下，起个好记的名字就行，再做一下反向代理，一个服务对应一个子域名，连后面的端口也不用记了，那不是就方便多了。</p><hr><h2 id="可能的方案"><a href="#可能的方案" class="headerlink" title="可能的方案"></a>可能的方案</h2><p>上篇文章里有朋友问哪里有免费域名，这个一直有，但是靠谱好用的并不多，Jony这两天筛选并实操了一下网上近期发文推荐较多的几个免费域名申请，最终的结论是：</p><p><strong>大家还是别花精力去搞这些免费域名了。</strong></p><p>首先，<strong>免费顶级域名</strong>，国内国外能提供顶级免费域名的，基本上只有freenom的<code>.tk / .ml / .ga / .cf / .gq</code>这几个顶级域名。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518163900302.png" alt="微信图片_20250518163746.png"></p><p>我20年前在大学里的时候就在国外网站申请过免费的<code>.tk</code>顶级域名。但是现在随着大家羊毛薅的太厉害，再加上很多不法分子滥用，免费的顶级域名基本上已经不能申请了。</p><p>其次，<strong>免费二级域名</strong>，其他的所谓免费域名大部分是二级域名，有些可以托管到Cloudflare，利用Cloudflare做解析，这样的话，大家申请到之后，可以再做三级域名解析，也可以用。</p><p>然而同样因为滥用的原因，现在免费二级域名，也基本上很难申请了，有的需要审核时间非常久，有的需要KYC验证（国外的类似实名认证的东西），而且大部分申请之后只有1年，还要提前180天内去续期，总之非常之麻烦。</p><hr><p>为了给头铁的小伙伴做个示范，我挑选了近一年内网上最火的，教程和视频反馈还能申请成功的两个，做了下尝试。并把申请步骤也尽量详细的做个记录，如果大家非要折腾，可以参照一下。</p><p>另外为了能符合大多数人的条件，我打算以尽量简单的网络环境去操作，比如考虑到大部分人可能不会用魔法，我一开始没有用梯子。</p><h2 id="CloudDNS"><a href="#CloudDNS" class="headerlink" title="CloudDNS"></a>CloudDNS</h2><p>第一个是<a href="https://www.cloudns.net/">CloudDNS</a>的免费域名。</p><p>这是一家欧洲的DNS服务商，大概类似于Cloudflare吧，网页界面包括配色其实也有点像。有中文语言选项，见下图，操作其实还挺友好的。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518171400446.png" alt="微信图片_20250517224757.png"></p><p>点上图右上角国旗，改成中文界面，点【登记】，然后点下面的【注册新用户】，需要注意的是用户名要按英文习惯，名和姓要分开，不然会提示错误。另外因为是国外网站，推荐使用微软的hotmail邮箱，以免收不到激活通知邮件，这也是我注册国外网站的一贯习惯。就有人说用qq邮箱收不到的。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518171651504.png" alt="微信图片_20250517225222.png"></p><p>点击邮件收到的激活链接，就可以激活了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518172134119.png" alt="微信图片_20250517225902.png"></p><p>需要注意的是，如果激活后跳转完变成英文，那先关掉下图这些提示条目，重新点右上角小国旗切换成中文就好了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518172343961.png" alt="微信图片_20250518172315.png"></p><p>点击【DNS托管】下面的橙色【创建区域】，这里大概是机翻，<code>域</code>和<code>区域</code>应该都是指的域名。</p><p>选下面的【免费区域】，创建免费域名。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518172615825.png" alt="微信图片_20250517231333.png"></p><p>它目前可以提供两个二级域名选项，一个是<code>.ip-ddns.com</code>，一个是<code>.ddns-ip.net</code>，可以下拉自选，输好你自己的域名，不用点下面的那行英文，直接点创建。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518172921531.png" alt="微信图片_20250517231511.png"></p><p>从注册网站到域名申请，一路非常清晰流畅，没有套路，也没有隐藏很深或者很复杂的操作，正当我感叹竟如此丝滑的时候，</p><p>高潮来了。</p><p>IP被限制，注册不了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518173142295.png" alt="微信图片_20250517231707.png"></p><p>网上查了一下，说是要换换干净的IP地址多尝试一下，好吧，我连一个公网v4都没，哪来那么多干净的IP地址。</p><p>没办法只能上梯子换国外IP地址尝试了，我从周六到周日，用电脑，手机，不同网络环境和浏览器，甚至分别用微软hotmail、谷歌gmail、163邮箱重新注册都试过了，截止写文时，仍然全部是 <strong>“由于您当前IP网络的高滥用率，免费域名的创建受到限制……”</strong></p><p>这个如果能行，的确是最方便的一个，操作丝滑流畅，自带中文界面，本身也是DNS服务商，如果不想用Cloudflare，直接用它自家解析应该也没什么问题。</p><p>实在想要免费的域名的小伙伴，可以自己尝试一下，万一你运气好你IP可以呢？哈哈。</p><hr><h2 id="DigitalPlat"><a href="#DigitalPlat" class="headerlink" title="DigitalPlat"></a>DigitalPlat</h2><p>另外一个比较著名的是DigitalPlat提供的二级域名，之前是<code>.us.kg</code>，后来也被投诉滥用，换成了<code>.dpdns.org</code>，这家域名申请比较麻烦一些。</p><p>在申请之前，你需要准备以下内容，篇幅原因，这里就不展开介绍了：</p><ul><li><strong>梯子（建议，非必须）</strong>，用来加快网站真人验证。</li><li><strong>虚拟美国地址生成器</strong>，用来生成符合网站填写格式的个人信息。</li><li><strong>Github注册账户</strong>，用来做KYC身份验证及获得免费域名名额。</li><li><strong>Cloudflare账户</strong>，用来做域名的DNS解析服务器。（实测已无法解析免费的二级域名）</li><li><strong>ClouDNS账户</strong>，用来替代Cloudflare做域名DNS解析服务器。</li></ul><p>打开<a href="https://dash.domain.digitalplat.org/">DigitalPlat面板页面</a>。这一步上来就是真人验证，了解的小伙伴知道，这个cloudflare的真人验证服务有多烦，反正是如果没有梯子，大概率会验证不上的，有梯子会好点，但也要看缘分。而且这个验证会在后面的额操作中频繁的出现。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518203122201.png" alt="微信图片_20250518203027.png"></p><p>验证好之后会直接进入仪表板界面。这个网站是没有中文语言支持的，我使用的Edge翻译。公告提示现在有两个新的域名后缀可以免费注册，一个是<code>xx.kg</code>，一个是<code>qzz.io</code>，之前的<code>us.kg</code>和<code>dpdns.org</code>现在需要支付2美元并且需要提交KYC认证资料。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518201844661.png" alt="微信图片_20250518150057.png"></p><p>没有账号要先注册，点下面的【Sign up】注册，也就是上图翻译后的【登记】的位置。进入注册页面，是不是傻眼了，需要按美国个人信息的格式填写。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518203630271.png" alt="微信图片_20250518203619.png"></p><p>这时候要用到另外一个网站工具【<a href="https://ratenn.com/american.html">美国地址生成器</a>】，它可以帮你生成一份完全符合美国个人资料的包括姓名地址电话住址社保号工作薪资信用卡等完整的虚拟信息。</p><p>如果不满意可以点左边【换一组】重新生成，生成好之后，建议点【TXT下载】下载保存好备用。然后可以直接从网站上点后面的绿色复制图标，复制信息并逐个填入上图中的注册页面信息中。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518204000577.png" alt="微信图片_20250518151108.png"></p><p>其中需要注意的是电话号码格式和注册页面要求的不一致，要按注册页面提示的格式改一下。</p><p>填完点最后的【Register】注册按钮，这时再次出现cloudflare真人验证框，需要点一下。这个什么时候能验证成功看缘分吧，反正我挂着梯子一边写文章，一边弄了一下午，最后几乎要放弃了它才好。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518204557363.png" alt="微信图片_20250518151855.png"></p><p>最后终于是注册成功了，然而这才只是一小步。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518204934517.png" alt="微信图片_20250518180218.png"></p><p>点【Go Back】返回，它接着跳转KYC身份验证页面。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518205041747.png" alt="微信图片_20250518180222.png"></p><p>选项其实只有Github验证一种方式。老老实实用<a href="https://github.com/">github</a>登录验证吧，还好我github老早注册过，直接登录验证，如果没有的话，还是先注册好吧，github也是个魔幻网站，没有梯子能不能打得开得看缘分。所以这个方式，梯子看来还是少不了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518205200785.png" alt="微信图片_20250518180314.png"></p><p>点最下面链接登录Github，授权，然后验证成功。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518205611615.png" alt="微信图片_20250518205557.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250518205618310.png" alt="微信图片_20250518180527.png"></p><p>点上图【Go Back】返回，会有一个通知，意思是到Github他们项目页面点star⭐，可以得到一个额外的免费域名名额。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518205722848.png" alt="微信图片_20250518180649.png"></p><p>那就顺手点一个吧，反正也到这了。点上图通知里的项目github地址链接跳到github仓库，右上角star点一下就可以了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518205943977.png" alt="微信图片_20250518181411.png"></p><p>再回去原来Digitalplat页面，重新登录验证一下github，成功获得一个额外的免费域名额度。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518210118009.png" alt="微信图片_20250518181445.png"></p><p>点上图【Go Back】返回到仪表板。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518210324627.png" alt="微信图片_20250518181914.png"></p><p>页面有几个公告，这里贴一下Edge机翻，自己看，我就不解释了：</p><p><img src="https://qncdn.jonylee.top/wechat/20250518210417715.png" alt="微信图片_20250518181802.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250518210423168.png" alt="微信图片_20250518181841.png"></p><p>点左侧的第三个【Domain Registration】，即域名注册页面，上面是每种域名后缀的协议，想看的自己看，拉到最下面，【Domain name】里填上自己想要的域名，因为这已经是二级域名了，后面自己用还要添加三级域名，这里可以试试尽量短一些的好记，不行再换。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518210850119.png" alt="微信图片_20250518210729.png"></p><p>第二个后缀下拉选项，一共有四个：<code>.dpdns.org</code>、<code>.us.kg</code>、<code>.xx.kg</code>、<code>.qzz.io</code>。</p><p><strong>这里建议大家选择最后一个，也就是<code>.qzz.io</code>。</strong></p><p>因为us.kg之前因为滥用已经被上游注册局停过，替代的dpdns.org，我试了一下，已经被我这儿的运营商列入反诈名单了。而xx.kg前面说了，需要KYC KEY验证，并且需要付2美元。2美元，国内正规顶级域名也可以买一年了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518211614006.png" alt="微信图片_20250518150900.png"></p><p>我试了一下我名字jony，显示没被注册。下面有两个<code>*</code>号必填的名称服务器就是DNS服务器。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518211953815.png" alt="微信图片_20250518182743.png"></p><p>这时需要上DNS解析服务器网站了，需要将这个域名加入到DNS解析服务器，获得两个名称服务器地址填到这里，在点最下面注册才能注册成功。</p><p>也就是我本来计划的Cloudflare，我有现成的，<strong>没有的大家也不用注册了</strong>，因为：</p><p><strong>Cloudflare现在已经不再提供解析这种免费二级域名了。</strong></p><p>见下图：<br><img src="https://qncdn.jonylee.top/wechat/20250518212255331.png" alt="微信图片_20250518184029.png"><br>反复试了多次，还是不行。耗费了我一下午时间，最后一步来个这。</p><p>这时想起我昨天注册的ClouDNS，那个域名申请不了，但是它也提供免费DNS解析呀，死马当活马医，试试吧。</p><p>输入之后它一直在转圈，我也懒得管它了，去吃了个饭，回来发现竟然可以了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518212918973.png" alt="微信图片_20250518201119.png"></p><p>立马把这DNS地址填入上面的Digitalplat域名注册页面。点【Register】，竟然注册成功了。我还真是机智呀😂</p><p><img src="https://qncdn.jonylee.top/wechat/20250518213229422.png" alt="微信图片_20250518201314.png"></p><p>用IPv6添加一个AAAA记录测试看看。和Cloudflare还是不能比，更新记录转了一分钟左右。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518215240339.png" alt="微信图片_20250518214256.png"></p><p>浏览器输入测试域名地址，成功访问到。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518215338835.png" alt="微信图片_20250518215144.png"></p><p>到此，从昨天晚上折腾到今天晚上，终于还算是成功了，但是这也是建立在我雄厚的条件储备基础上。<br>否则又是梯子又是Cloudflare又是github的，不熟悉的话，估计且得弄个两天吧？</p><p>所以如果是网络技术小白，我还是建议别折腾了，直接国内大厂买个低价域名最方便。</p><p><img src="https://qncdn.jonylee.top/wechat/20250518220510284.png" alt="微信图片_20250518220458.png"></p><p>如果只是用来给NAS服务做解析访问的话，<code>.xyz</code>的6位数字顶级域名现在首年是7块钱，一次性买10年现在涨价了也才71，一年也还是7块钱。如果想再搭个个人博客什么的，自己个性化的名字的域名，也有好几款10年期也才200块出头，至于这么折腾去国外网站搞免费的还是个二级的域名吗？</p><p>国内一线大厂的服务，它不香吗？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;说起域名，很多人会觉得这个东西挺遥远的。&lt;/p&gt;
&lt;p&gt;以前PC互联网时代，大家和域名打交道比较多，每个那个年代的人，脑子里都会记得不少常上的网站域名。&lt;/p&gt;
&lt;p&gt;但是，自从移动互联网普及之后，网站和域名不再重要了，大家手机上几个主要的app+小程序，能提供大部分网络信</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>没有公网IPv4，你是怎么在外网访问家中的NAS的？</title>
    <link href="https://blog.jonylee.top/2025/05/12/2025-05-12%20%E6%B2%A1%E6%9C%89%E5%85%AC%E7%BD%91IPv4%EF%BC%8C%E4%BD%A0%E6%98%AF%E6%80%8E%E4%B9%88%E5%9C%A8%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E5%AE%B6%E4%B8%AD%E7%9A%84NAS%E7%9A%84%EF%BC%9F/"/>
    <id>https://blog.jonylee.top/2025/05/12/2025-05-12%20%E6%B2%A1%E6%9C%89%E5%85%AC%E7%BD%91IPv4%EF%BC%8C%E4%BD%A0%E6%98%AF%E6%80%8E%E4%B9%88%E5%9C%A8%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E5%AE%B6%E4%B8%AD%E7%9A%84NAS%E7%9A%84%EF%BC%9F/</id>
    <published>2025-05-12T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>花精力把NAS弄好了，有的小伙伴还在NAS上搭了影视库，音乐库，书库，这些服务搭建好了之后，在家里用起来很方便。</p><p>这时你会想了，要是在外面也能随时连上用，那就爽了呀。</p><p>我之前说，为了给手机腾出空间，在NAS上安装了AI智能相册，手机上也装了APP，如果不能在外面随时随地查看，这就没什么意义了。</p><p><strong>小伙伴么你们是怎么访问的家中的NAS的呢？</strong></p><p>如果用的是成品NAS，一般厂家都会有自家的connect连接，通过厂家提供的中继服务器转发访问，也能用，但是速度肯定不会快的，想看家里的影视资源，还是别想了吧。</p><p>其实想要流畅的访问家中的NAS资源，本来应该是个很简单的事，只要有公网IP就很好办。</p><p>但是，现在九成家庭宽带都不会给公网IP了吧，像我家里宽带就是移动大内网，说白了光猫获取的所谓公网IP地址，其实就是运营商的大局域网内网IP，在外网用这个IP地址，是访问不到家里的。</p><p>可以看下路由器显示的外网IP和在线IP工具查询到的是不是一个网段就知道了，见下图：</p><p><img src="https://qncdn.jonylee.top/wechat/20250511220001170.png" alt="微信图片_20250511215454.png"></p><p>为啥会这样？这涉及到复杂的NAT网络类型，就不展开说了。</p><h2 id="我的大内网NAS访问方案"><a href="#我的大内网NAS访问方案" class="headerlink" title="我的大内网NAS访问方案"></a>我的大内网NAS访问方案</h2><p>NAS实现外网访问，有很多种方法，比如说老牌的花生壳，现在比较火的节点小包等等，还有各种自建FRP，异地组网等等，这些有的有一定设备和技术门槛，有的需要花钱买会员买流量买带宽，需要大家根据自己的情况选择，这里聊一下我的NAS外网访问方案，给大家一个参考。</p><h3 id="弃用方案：花生壳内网穿透"><a href="#弃用方案：花生壳内网穿透" class="headerlink" title="弃用方案：花生壳内网穿透"></a><strong>弃用方案：花生壳内网穿透</strong></h3><p>我最早用过花生壳内网穿透，这一类方案对小白比较友好，不需要复杂的配置也不需要懂太多网络知识，安装就能用。</p><p>免费版每月1G流量，带宽1Mbps&#x2F;映射，可以建两条映射，送一个壳域名（有期限），这带宽流量，只能用来登录下NAS管理页面，简单的操作一下，其他就别指望了。</p><p>而且用到后来，直接打开页面强制变成花生壳的一个跳转网页，需要点击跳转才能访问自己的服务页面，再后来免费的壳域名也到期没有了，一个二级还是三级的壳域名，卖的比顶级域名还贵，呵呵了。</p><p>节点小包之前网络上有不少推广，但是这类的有付费会员和免费体验版的软件，估计差不多，免费版流量和带宽一点点，付费版，要撑得起我肆无忌惮的看电影，得多少费用？我也懒得去用了。</p><p>自建FRP，我倒是有条件，云服务器我有，但是轻量云带宽也不高，有啥流量不需要走中继的解决方案吗？我还没研究透。</p><hr><h3 id="基础方案：赛博菩萨Cloudflare-Tunnels"><a href="#基础方案：赛博菩萨Cloudflare-Tunnels" class="headerlink" title="基础方案：赛博菩萨Cloudflare Tunnels"></a><strong>基础方案：赛博菩萨Cloudflare Tunnels</strong></h3><p>我的第二个方案，是用Cloudflare的 Tunnels，之前没用过的时候就听人叫Cloudflare赛博菩萨，后来用了之后终于知道为啥这么叫了，套路比国内公司少太多了，它是真菩萨！</p><p>我之前在一个小运营商买过一个域名，一年十几块钱那种，托管在Cloudflare上做DNS解析。后来偶然发现它有个Tunnels功能，只需要在自己NAS上安装一下Cloudflared，就可以建立隧道连接。</p><p><img src="https://qncdn.jonylee.top/wechat/20250512151900437.png" alt="微信图片_20250512151508.png"></p><p>可以用子域名绑定端口，而且最友好的是，它走的Cloudflare全球CDN网络节点，直接建立的https连接，连部署证书都省了。</p><p><img src="https://qncdn.jonylee.top/wechat/20250512151919413.png" alt="微信图片_20250512151810.png"></p><p>关键是我完全没找到它的限制在哪，我一个玩客云，一个小主机NAS，各装了一个Cloudflared创建隧道，每个都做了十几个端口映射，多的时候每条隧道有20几个映射，也不知道上限能做多少个。</p><p>这个方案除了域名有费用，Cloudflare域名托管和DNS解析，以及Tunnels都是免费的，没有流量限制，也没有带宽限制。</p><p>要说缺点，唯一的缺点就是Cloudflare的边缘节点服务器在国内的太少，所以用这种方式访问，网速其实还是不够快，我这里一般用它访问web应用，还可以延迟还能接受，影音应用就算了，得用其他方案。</p><hr><h3 id="推荐方案：IPv6-DDNS"><a href="#推荐方案：IPv6-DDNS" class="headerlink" title="推荐方案：IPv6 + DDNS"></a><strong>推荐方案：IPv6 + DDNS</strong></h3><p>现在的运营商宽带大多已经支持 IPv6，且 IPv6 地址是公网直连的，<strong>无需穿透</strong>，速度取决于带宽上限。我们在外面需要连接家中NAS的场景，大部分是通过手机，而手机网络，默认也都是支持ipv6的。</p><p>大家可以通过<a href="https://test-ipv6.com/">IPv6 测试</a>网站，检测一下你的上网环境是否支持IPv6。</p><p><img src="https://qncdn.jonylee.top/wechat/20250512154230280.png" alt="微信图片_20250512154141.png"></p><p>公网IPv6地址240e开头是电信，2048开头是联通，2409开头是移动，如果你也打开了IPv6但是获取的地址是fe80开头，那不是公网的而是你内网的IPv6。</p><p>我最开始设备设置好了，也显示有ipv6，但是外网就是连不了，后来才知道那只是内网ipv6，要获得公网ipv6，还需要做一些工作，我也懒得给移动打电话，就自己咸鱼上买了光猫的管理密码，把光猫和路由器做了桥接，再通过路由器配置的IPv6，最终获得到2409开头的公网IPv6地址。</p><p><strong>有了公网IPv6，一切就方便多了。</strong></p><p>如果没有域名，直接通过<code>http://[IPv6地址]:端口</code>的方式，就可以外网访问（注意IPv6地址要有中括号）。</p><p>当然如果有域名那就更方便了，因为这个公网IPv6也不是固定的，过段时间可能会变，NAS上装个DDNS-GO，它会自动跟踪ip变化，更新域名解析。之后只需要用好记的域名访问就可以了。</p><p>成本方面，同样只是一个域名成本，一年十几块钱就行，如果实在不想花钱，也有些免费的可以绑定cloudflare的二级域名可以注册，大家如果只是用来做NAS外网连接，这样也行，那就一分钱不用花了。</p><p>这个方案，基本上拉满带宽，非常流畅，花钱少或者说都不用花钱，也没有流量限制之类的问题，可以说相当完美了。</p><p>要说缺点也是有的，就是外网必须也是IPv6才能访问，但是在外面访问影视资源一般都是用手机了，没有影响。需要IPv4访问其他web应用，我还有Cloudflare Tunnels呢，两者搭配，就没任何问题了。</p><hr><p>当然这里面也有一些需要特别注意的，如果大家使用IPv6直连，相当于直接暴露在外网了，有一定安全风险，需要通过路由器的防火墙设置，NAT服务和DMZ主机配置，在保证安全性的情况下，来有限暴露内网端口。</p><p>另外务必为 NAS 及部署的各项独立服务应用设置强密码，有些小伙伴安装的是网上大佬自己打包的NAS系统，或者开发的服务应用，有很多默认账号密码的，网上公开的大家都知道，一定要第一时间改掉。</p><p>所有外网可访问的服务最好使用反向代理配置SSL证书，启用 HTTPS 加密访问。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;花精力把NAS弄好了，有的小伙伴还在NAS上搭了影视库，音乐库，书库，这些服务搭建好了之后，在家里用起来很方便。&lt;/p&gt;
&lt;p&gt;这时你会想了，要是在外面也能随时连上用，那就爽了呀。&lt;/p&gt;
&lt;p&gt;我之前说，为了给手机腾出空间，在NAS上安装了AI智能相册，手机上也装了APP</summary>
      
    
    
    
    <category term="玩转NAS" scheme="https://blog.jonylee.top/categories/%E7%8E%A9%E8%BD%ACNAS/"/>
    
    
    <category term="NAS" scheme="https://blog.jonylee.top/tags/NAS/"/>
    
    <category term="NAS知识" scheme="https://blog.jonylee.top/tags/NAS%E7%9F%A5%E8%AF%86/"/>
    
    <category term="玩机技巧" scheme="https://blog.jonylee.top/tags/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/"/>
    
    <category term="网络知识" scheme="https://blog.jonylee.top/tags/%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>老外学中文有多拼！看看这个有趣的网站吧</title>
    <link href="https://blog.jonylee.top/2025/05/05/2025-05-05%20%E8%80%81%E5%A4%96%E5%AD%A6%E4%B8%AD%E6%96%87%E6%9C%89%E5%A4%9A%E6%8B%BC%EF%BC%81%E7%9C%8B%E7%9C%8B%E8%BF%99%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E5%90%A7/"/>
    <id>https://blog.jonylee.top/2025/05/05/2025-05-05%20%E8%80%81%E5%A4%96%E5%AD%A6%E4%B8%AD%E6%96%87%E6%9C%89%E5%A4%9A%E6%8B%BC%EF%BC%81%E7%9C%8B%E7%9C%8B%E8%BF%99%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E5%90%A7/</id>
    <published>2025-05-05T14:00:00.000Z</published>
    <updated>2025-06-01T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近无意中发现一个神奇的网站。</p><p>一个外国人为了学习中文，制作了一个智能中文断句学习网站，整个页面非常很简洁。</p><p><img src="https://qncdn.jonylee.top/wechat/20250505102516680.png" alt="微信图片_20250505101251.png"></p><p>输入中文句子，就会自动拆解为词组，并给出英文释义。</p><p><img src="https://qncdn.jonylee.top/wechat/20250505102646358.png" alt="微信图片_20250505101404.png"></p><p>点击词组，还会弹出详细的字词释义，简直比牛津词典还好用。</p><p><img src="https://qncdn.jonylee.top/wechat/20250505102707879.png" alt="微信图片_20250505101521.png"></p><p>右上角还可以设置显示方式，默认不显示拼音及释义，可以开启同时显示拼音及因为单词释义。</p><p><img src="https://qncdn.jonylee.top/wechat/20250505102824847.png" alt="微信图片_20250505101856.png"></p><p><img src="https://qncdn.jonylee.top/wechat/20250505102834720.png" alt="微信图片_20250505102007.png"></p><p>还可以设置拼读方式，默认是拼音音调。</p><p><img src="https://qncdn.jonylee.top/wechat/20250505102857370.png" alt="微信图片_20250505102123.png"></p><p>可以选择注音法发音，这是以章太炎的记音字母作蓝本，北洋政府时期正式颁行。后来，注音符号于1958年在中国大陆地区被汉语拼音所代替，但是台湾省目前还在沿用。</p><p><img src="https://qncdn.jonylee.top/wechat/20250505102904181.png" alt="微信图片_20250505102204.png"></p><p>另一种是拼音字母加音调字的方式，方便英文输入。</p><p><img src="https://qncdn.jonylee.top/wechat/20250505102920509.png" alt="微信图片_20250505102230.png"></p><p>点击左侧折叠菜单，点击进入Reading Room，作者还放了两个范文，一个鲁迅的狂人日记，一个三国演义还没更完，看来这老外还挺有格调。</p><p><img src="https://qncdn.jonylee.top/wechat/20250505114833833.png" alt="微信图片_20250505114814.png"></p><p>另外还可以将页面创建分享链接，分享给朋友。</p><p>不得不说，这老外还是挺有想法的，我觉得这个小网站也可以反向使用呀，老外用它来学中文，我们也可以用它学英文呢，感兴趣的朋友可以试试。</p><p>网站地址：<a href="https://mandobot.netlify.app/">https://mandobot.netlify.app</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近无意中发现一个神奇的网站。&lt;/p&gt;
&lt;p&gt;一个外国人为了学习中文，制作了一个智能中文断句学习网站，整个页面非常很简洁。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qncdn.jonylee.top/wechat/20250505102516680.png&quot; al</summary>
      
    
    
    
    <category term="效率工具" scheme="https://blog.jonylee.top/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="效率工具" scheme="https://blog.jonylee.top/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
    <category term="在线工具" scheme="https://blog.jonylee.top/tags/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
